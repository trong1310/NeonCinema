// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20250114112415_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AfterDiscount")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<long>("BillCode")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("Surcharge")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<double?>("TotalPoint")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3806),
                            Deleted = false,
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("23bb9280-f713-4bf8-a816-8308d2b22eba"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3810),
                            Deleted = false,
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("1d47603d-0846-4c3a-995c-a7371fa3c6f5"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("eaa7f9a2-a6d5-4bda-b8d1-0b14ce11bc2b"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("08f0a347-5293-41ab-aedf-d5932aab55a7"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("eb56b9b1-b5d6-46ce-9a1c-19221459d0cc"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("f3bef1aa-df4a-4c29-9e44-80aa1c3e279e"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("6061ed6a-866e-45d5-8320-05b9f79e25d1"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("6a021a4b-f521-477d-8352-f2de895c03fa"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("9e650772-18d0-4d29-b8bc-d0c6f8213355"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("c2808b11-6258-434f-882d-cd5900b13d60"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3638),
                            Deleted = false,
                            FullName = "Trấn Thành",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d15d8012-a404-414c-9aa2-84389415c5e3"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3644),
                            Deleted = false,
                            FullName = "Lý Hải",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8d7cc9bf-e0e4-4700-be11-3bef3a3e0a1d"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3646),
                            Deleted = false,
                            FullName = "Victor Vũ",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("17efe36d-61db-457f-8e27-4e10323d1a6b"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3648),
                            Deleted = false,
                            FullName = "Charlie Nguyễn",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3649),
                            Deleted = false,
                            FullName = "Ngô Thanh Vân",
                            Gender = 7,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a9465d2f-cc87-4534-ba1d-c989fda7287d"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3652),
                            Deleted = false,
                            FullName = "Đỗ Đức Thịnh",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f98efb32-b2e8-457a-afb6-a5285232c689"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3654),
                            Deleted = false,
                            FullName = "Phan Gia Nhật Linh",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cc1fc6c1-1aa4-4188-8fb1-65d5b0b234ba"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3655),
                            Deleted = false,
                            FullName = "Vũ Ngọc Đãng",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9ebc5947-7f23-4499-86b7-9d8c4ec31443"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3657),
                            Deleted = false,
                            FullName = "Nguyễn Quang Dũng",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e6a3f890-4218-4581-b064-7443ce097e2f"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3661),
                            Deleted = false,
                            FullName = "Huỳnh Đông",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("3b332821-7f67-4f6b-bd23-9a38eb8a658d"),
                            Content = "Combo 1",
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4994),
                            Deleted = false,
                            Description = "1 bắp 1 cola",
                            Images = "combo1.png",
                            TotalPrice = 80000m
                        },
                        new
                        {
                            ID = new Guid("3f8f6442-87fd-4f9a-9c4a-a2accc6528eb"),
                            Content = "Combo 2",
                            CreatedTime = new DateTime(2025, 1, 13, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4998),
                            Deleted = false,
                            Description = "1 bắp 2 cola",
                            Images = "combo2.png",
                            TotalPrice = 100000m
                        },
                        new
                        {
                            ID = new Guid("b7fbeeee-47c6-400e-b58a-291c4633c5c7"),
                            Content = "Combo 3",
                            CreatedTime = new DateTime(2025, 1, 12, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(5000),
                            Deleted = false,
                            Description = "1 bắp + 1 Aquafina ",
                            Images = "combo3.png",
                            TotalPrice = 75000m
                        },
                        new
                        {
                            ID = new Guid("22464697-3495-400f-8d35-d448ca5359a2"),
                            Content = "Combo 4",
                            CreatedTime = new DateTime(2025, 1, 11, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(5005),
                            Deleted = false,
                            Description = "1 bắp + 1 cola + 1 khoai lắc",
                            Images = "combo4.png",
                            TotalPrice = 135000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3702),
                            Deleted = false,
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("f637ad0d-4851-44c1-b2a2-a8949ea26786"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3706),
                            Deleted = false,
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("54ee7c7d-afdd-40af-be9c-8dc95164242c"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3708),
                            Deleted = false,
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("cecec4d5-b8bf-42e1-b6aa-54a733fe2d3b"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3709),
                            Deleted = false,
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("faab115c-3f5f-4b71-a491-f4fe339edfd2"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3710),
                            Deleted = false,
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("1cef0bd3-6fba-46d7-84cb-7908b57e06e1"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3712),
                            Deleted = false,
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("e8663ec4-463e-4b13-b0ef-f3981fde9644"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3713),
                            Deleted = false,
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("cdb0907e-3130-4cfe-9ea8-70826d8a7ead"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3714),
                            Deleted = false,
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("60053dcb-bbdd-4e78-8733-5145326262ed"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3717),
                            Deleted = false,
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("2798195b-4e59-424d-810e-444e2c8723d1"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3718),
                            Deleted = false,
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3600),
                            Deleted = false,
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("d7810bd1-17d2-466e-9d73-cc5c02bd59e3"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3604),
                            Deleted = false,
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("94832d01-59bd-4b09-819b-d0b20cb18c40"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3605),
                            Deleted = false,
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("3a561743-05fa-4087-b651-0fc917935b4a"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3607),
                            Deleted = false,
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("50a21d91-76a6-4815-bdad-a33c24f2bfbf"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3608),
                            Deleted = false,
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("ee56896b-c949-4766-b63b-6afb0b8a797a"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3610),
                            Deleted = false,
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3001),
                            Deleted = false,
                            MovieTypeName = "4D"
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3010),
                            Deleted = false,
                            MovieTypeName = "3D"
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3011),
                            Deleted = false,
                            MovieTypeName = "2D"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Sub")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            AgeAllowed = 16,
                            CountryID = new Guid("6061ed6a-866e-45d5-8320-05b9f79e25d1"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4700),
                            Deleted = false,
                            Description = "Một bác sĩ chuyên khoa tim nghi ngờ cái chết của con gái mình sau một cuộc trừ tà, tin rằng trái tim cô bé vẫn đập. Trong đám tang cô bé, anh và một linh mục đã tranh cãi về sự thật, mỗi người đều cố gắng chứng minh lập trường của mình có thể cứu cô bé.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("e8663ec4-463e-4b13-b0ef-f3981fde9644"),
                            Images = "ngaiquy.jpg",
                            LenguageID = new Guid("ee56896b-c949-4766-b63b-6afb0b8a797a"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "DEVILS STAY: NGÀI QUỶ",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 1,
                            Trailer = "https://youtu.be/4d7xzz0cTVw"
                        },
                        new
                        {
                            ID = new Guid("9a335e7e-a745-444a-92b3-15321ddcccda"),
                            AgeAllowed = 18,
                            CountryID = new Guid("6061ed6a-866e-45d5-8320-05b9f79e25d1"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4710),
                            Deleted = false,
                            Description = "5 học sinh nghiên cứu hồ sơ cựu học sinh của một trường học bị chiếm đóng về những trải nghiệm siêu nhiên và các cô gái mất tích. Người hướng dẫn của họ tạo ra những sự kiện kỳ ​​lạ đưa họ đến một cái cây cổ thụ, nơi mà hiệu trưởng vô tình đào được xương.",
                            DirectorID = new Guid("d15d8012-a404-414c-9aa2-84389415c5e3"),
                            Duration = 81,
                            GenreID = new Guid("e8663ec4-463e-4b13-b0ef-f3981fde9644"),
                            Images = "xich.jpg",
                            LenguageID = new Guid("ee56896b-c949-4766-b63b-6afb0b8a797a"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "BLINDING SOULS: XÍCH: TRÓI HỒN YỂM XÁC",
                            StarTime = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("46040d9c-1787-4a50-9bef-5494ecadd91a"),
                            AgeAllowed = 13,
                            CountryID = new Guid("c2808b11-6258-434f-882d-cd5900b13d60"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4716),
                            Deleted = false,
                            Description = "Lấy cảm hứng từ giai thoại nổi tiếng của nhân vật được mệnh danh là thiên hạ đệ nhất chơi ngông, Công Tử Bạc Liêu lấy bối cảnh Nam Kỳ Lục Tỉnh xưa của Việt Nam. Từ con trai của chủ ngân hàng đầu tiên của Việt Nam trở thành \"Công Tử Bạc Liêu\".",
                            DirectorID = new Guid("8d7cc9bf-e0e4-4700-be11-3bef3a3e0a1d"),
                            Duration = 113,
                            GenreID = new Guid("1cef0bd3-6fba-46d7-84cb-7908b57e06e1"),
                            Images = "congtubaclieu.jpg",
                            LenguageID = new Guid("50a21d91-76a6-4815-bdad-a33c24f2bfbf"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "CÔNG TỬ BẠC LIÊU",
                            StarTime = new DateTime(2024, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 1,
                            Trailer = "https://youtu.be/wqJXnO_TKpY"
                        },
                        new
                        {
                            ID = new Guid("37f1be90-f216-42b8-ba49-d79c0196c911"),
                            AgeAllowed = 16,
                            CountryID = new Guid("6061ed6a-866e-45d5-8320-05b9f79e25d1"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4723),
                            Deleted = false,
                            Description = "Một cô gái khiếm thính và một anh giao hàng tìm thấy sự kết nối bất chấp rào cản giao tiếp. Họ sử dụng ẩn dụ về những chú chim nước và cây cối kiên trì để tượng trưng cho việc vượt qua những trở ngại trong chuyện tình cảm và dẫn đến sự gắn bó.",
                            DirectorID = new Guid("17efe36d-61db-457f-8e27-4e10323d1a6b"),
                            Duration = 109,
                            GenreID = new Guid("cecec4d5-b8bf-42e1-b6aa-54a733fe2d3b"),
                            Images = "yeuem.jpg",
                            LenguageID = new Guid("ee56896b-c949-4766-b63b-6afb0b8a797a"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "HEAR ME: OUR SUMMER: YÊU EM KHÔNG CẦN LỜI NÓI",
                            StarTime = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 0,
                            Trailer = "https://youtu.be/JzY-5ZtVD88"
                        },
                        new
                        {
                            ID = new Guid("ca571b7b-a6ca-45f8-b22f-2a3b050948d9"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4729),
                            Deleted = false,
                            Description = "Trong văn hóa Java, Sengkolo là một thực thể tiêu cực thường ám ảnh con người, mang lại vận rủi và tai họa. Vào đêm đầu tiên của Suro, Sengkolo di chuyển để nhắm vào một số weton là con mồi của mình.",
                            DirectorID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Duration = 99,
                            GenreID = new Guid("e8663ec4-463e-4b13-b0ef-f3981fde9644"),
                            Images = "tetamhon.jpg",
                            LenguageID = new Guid("d7810bd1-17d2-466e-9d73-cc5c02bd59e3"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "SENGKOLO: MALAM SATU SURO",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 0,
                            Trailer = "https://youtu.be/-Sux3ihKodI?si=bbzqRn3w7kxqDaEi"
                        },
                        new
                        {
                            ID = new Guid("17710fe7-62c1-4ea9-ba4b-519ed61ead00"),
                            AgeAllowed = 16,
                            CountryID = new Guid("eb56b9b1-b5d6-46ce-9a1c-19221459d0cc"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4737),
                            Deleted = false,
                            Description = "Phần hậu truyện của Nhím Sonic 1 và 2, đồng thời cũng là phần phim liên kết với Knuckles (2024).",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 100,
                            GenreID = new Guid("54ee7c7d-afdd-40af-be9c-8dc95164242c"),
                            Images = "SONIC.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "SONIC THE HEDGEHOG: NHÍM SONIC 3",
                            StarTime = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/2gFjV9v7QVE"
                        },
                        new
                        {
                            ID = new Guid("2a1f26fa-2b37-4707-96a3-1c068e43b19e"),
                            AgeAllowed = 13,
                            CountryID = new Guid("c2808b11-6258-434f-882d-cd5900b13d60"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4746),
                            Deleted = false,
                            Description = "Bộ tứ báo thủ bao gồm Chét-Xi-Cà, Dì Bốn, Cậu Mười Một, Con Kiều chính thức xuất hiện cùng với phi vụ báo thế kỉ. Nghe nói kế hoạch tiếp theo là ở Đà Lạt, liệu bốn báo thủ sẽ quậy Tết tung nóc cỡ nào?",
                            DirectorID = new Guid("d15d8012-a404-414c-9aa2-84389415c5e3"),
                            Duration = 120,
                            GenreID = new Guid("cdb0907e-3130-4cfe-9ea8-70826d8a7ead"),
                            Images = "botubaothu.jpg",
                            LenguageID = new Guid("50a21d91-76a6-4815-bdad-a33c24f2bfbf"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "BỘ TỨ BÁO THỦ",
                            StarTime = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 1,
                            Trailer = "https://youtu.be/2k0jK_sWmwE"
                        },
                        new
                        {
                            ID = new Guid("ecb08212-b3d8-48dd-b7eb-b7a7ea366fa6"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4752),
                            Deleted = false,
                            Description = "Lần đầu tiên nhìn thấy cô gái yêu nhạc rock xinh đẹp Jinny, cậu bé Song đã yêu. Chú Pong – một cựu Rocker giúp Song lập ban nhạc Bad Boyz Band để Song có thể mời Jinny tham gia. Tuy nhiên Jenny lại lọt vào mắt nhà sản xuất âm nhạc tên Arm.",
                            DirectorID = new Guid("8d7cc9bf-e0e4-4700-be11-3bef3a3e0a1d"),
                            Duration = 110,
                            GenreID = new Guid("cdb0907e-3130-4cfe-9ea8-70826d8a7ead"),
                            Images = "tretraukhongduaduocdau.jpg",
                            LenguageID = new Guid("d7810bd1-17d2-466e-9d73-cc5c02bd59e3"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "BAD BOYZ BAND: TRẺ TRÂU KHÔNG ĐÙA ĐƯỢC ĐÂU",
                            StarTime = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/GKqrTQGHE3s"
                        },
                        new
                        {
                            ID = new Guid("6aeeec20-fd58-401e-99fe-009003a3b4ce"),
                            AgeAllowed = 15,
                            CountryID = new Guid("6061ed6a-866e-45d5-8320-05b9f79e25d1"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4759),
                            Deleted = false,
                            Description = "Đây là một bộ phim hài về gia đình. Phim kể câu chuyện về một người đàn ông là sinh viên y khoa ưu tú quyết định trở thành một linh mục.",
                            DirectorID = new Guid("17efe36d-61db-457f-8e27-4e10323d1a6b"),
                            Duration = 110,
                            GenreID = new Guid("1cef0bd3-6fba-46d7-84cb-7908b57e06e1"),
                            Images = "chuyennhabanh.png",
                            LenguageID = new Guid("ee56896b-c949-4766-b63b-6afb0b8a797a"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "ABOUT FAMILY: CHUYỆN NHÀ BÁNH XẾP",
                            StarTime = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/X3SY9XUlQAA"
                        },
                        new
                        {
                            ID = new Guid("2ff05316-52f3-4b5c-ae88-7c89e385bbad"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4766),
                            Deleted = false,
                            Description = "Nakrob, một kẻ lừa đảo bất động sản trẻ tuổi, phát hiện ra một khách sạn trên sườn đồi bị bỏ hoang gần bãi biển. Nhìn thấy cơ hội, anh ta quyết định biến nó thành một vụ lừa đảo khách sạn sang trọng.",
                            DirectorID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Duration = 100,
                            GenreID = new Guid("cdb0907e-3130-4cfe-9ea8-70826d8a7ead"),
                            Images = "chayngaydi.jpg",
                            LenguageID = new Guid("d7810bd1-17d2-466e-9d73-cc5c02bd59e3"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "404 RUN RUN: CHẠY NGAY ĐI",
                            StarTime = new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/jS6TZkBB0lY"
                        },
                        new
                        {
                            ID = new Guid("3a043f34-42f3-49c9-96e3-52fbb89712db"),
                            AgeAllowed = 13,
                            CountryID = new Guid("6061ed6a-866e-45d5-8320-05b9f79e25d1"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4771),
                            Deleted = false,
                            Description = "Jin Bong là cựu cung thủ quốc gia và là người đoạt huy chương trong môn thể thao của mình. Anh hiện làm quản lý trong một công ty, nhưng công ty đang trong cuộc khủng hoảng tái cấu trúc. Vào thời điểm đó, công ty của anh đang thúc đẩy dự án Amazon.",
                            DirectorID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Duration = 113,
                            GenreID = new Guid("cdb0907e-3130-4cfe-9ea8-70826d8a7ead"),
                            Images = "cuoixuyenbiengioi.jpg",
                            LenguageID = new Guid("ee56896b-c949-4766-b63b-6afb0b8a797a"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "AMAZON BULLSEYE: CƯỜI XUYÊN BIÊN GIỚI",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/JedDZeuTrzQ"
                        },
                        new
                        {
                            ID = new Guid("de0356f6-0314-4fb0-9c2b-14e27b1d61d8"),
                            AgeAllowed = 13,
                            CountryID = new Guid("c2808b11-6258-434f-882d-cd5900b13d60"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4777),
                            Deleted = false,
                            Description = "Sau sự thành công của hai phim điện ảnh chuyển thể từ tác phẩm đình đám của nhà văn Nguyễn Nhật Ánh, một tác phẩm nổi bật khác của nhà văn hiện đại thành công nhất Việt Nam chuẩn bị được đưa lên màn ảnh rộng: “Kính Vạn Hoa”.",
                            DirectorID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Duration = 123,
                            GenreID = new Guid("e8663ec4-463e-4b13-b0ef-f3981fde9644"),
                            Images = "kinhvanhoa.jpg",
                            LenguageID = new Guid("50a21d91-76a6-4815-bdad-a33c24f2bfbf"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "KÍNH VẠN HOA: BẮT ĐỀN CON MA",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 1,
                            Trailer = "https://youtu.be/EDDbR2jINsQ"
                        },
                        new
                        {
                            ID = new Guid("825663f7-024e-40f4-8aa0-1c6bcea370c6"),
                            AgeAllowed = 13,
                            CountryID = new Guid("eb56b9b1-b5d6-46ce-9a1c-19221459d0cc"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4783),
                            Deleted = false,
                            Description = "Sau khi Simba trở thành vua của Pride Lands quyết tâm cho đứa con của mình tiếp bước vị trí đầu đàn, trong khi nguồn gốc của người cha quá cố – Mufasa được khám phá.",
                            DirectorID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Duration = 118,
                            GenreID = new Guid("60053dcb-bbdd-4e78-8733-5145326262ed"),
                            Images = "mufasa.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "MUFASA: THE LION KING: VUA SƯ TỬ",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/1KtBhnTfq8I"
                        },
                        new
                        {
                            ID = new Guid("5cd74187-0122-4d1a-9804-774e9d241a3c"),
                            AgeAllowed = 13,
                            CountryID = new Guid("eaa7f9a2-a6d5-4bda-b8d1-0b14ce11bc2b"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4789),
                            Deleted = false,
                            Description = "Một cuộc tấn công bất ngờ của Wulf – lãnh chúa Dunlending thông minh và tàn nhẫn muốn trả thù cho cái chết của cha mình, buộc Helm Hammerhand, Vua của Rohan, và người dân của ông phải thực hiện một cuộc chiến đấu cuối cùng táo bạo tại pháo đài cổ Hornburg",
                            DirectorID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Duration = 134,
                            GenreID = new Guid("54ee7c7d-afdd-40af-be9c-8dc95164242c"),
                            Images = "cuocchien.jpg",
                            LenguageID = new Guid("94832d01-59bd-4b09-819b-d0b20cb18c40"),
                            MovieTypeID = new Guid("e53dc036-adcd-4a38-9fdc-c7fe231af726"),
                            Name = "THE LORD OF THE RINGS: THE WAR OF THE ROHIRRIM",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/4pP71_7b_Y4"
                        },
                        new
                        {
                            ID = new Guid("0947de61-249d-49fd-8709-8ab61314f88e"),
                            AgeAllowed = 18,
                            CountryID = new Guid("eb56b9b1-b5d6-46ce-9a1c-19221459d0cc"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4821),
                            Deleted = false,
                            Description = "Mối quan hệ phức tạp giữa Kraven với người cha tàn nhẫn, Nikolai Kravinoff, đã đưa anh vào con đường trả thù với hậu quả tàn khốc, thúc đẩy anh không chỉ trở thành thợ săn vĩ đại nhất thế giới mà còn là một trong những thợ săn đáng sợ nhất.",
                            DirectorID = new Guid("88eaa15a-dae8-4658-b054-050b4b25685d"),
                            Duration = 127,
                            GenreID = new Guid("54ee7c7d-afdd-40af-be9c-8dc95164242c"),
                            Images = "thosanthulinh.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "KRAVEN THE HUNTER: THỢ SĂN THỦ LĨNH",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/gnj_VBjwiqU"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PendingPoint", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BillID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("PendingPoint");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountMax")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(2903),
                            Deleted = false,
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(2918),
                            Deleted = false,
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(2920),
                            Deleted = false,
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3841),
                            Deleted = false,
                            Name = "Room 1",
                            RowNumber = 12,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3846),
                            Deleted = false,
                            Name = "Room 2",
                            RowNumber = 12,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Show_releaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_releaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("3e894e50-3975-4377-9720-0b7857896dc2"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4889),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 24, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4884),
                            ShowTimeID = new Guid("b0f5489f-c2ef-4bee-9440-d6e98dd82e04"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("17c1b819-1938-4674-814a-aec24f7fb42b"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4894),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 23, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4892),
                            ShowTimeID = new Guid("0614ffd0-31e0-474a-9cd1-68fba16f0b96"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("db551236-3bac-4ecd-a7ac-f48d48c6f3d0"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4897),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 22, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4896),
                            ShowTimeID = new Guid("00076875-d26a-481b-9eb4-6b587e311f77"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cdb3af80-ab2f-44b8-b4fc-8a973e4c36c4"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4900),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 21, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4899),
                            ShowTimeID = new Guid("bd2a5fc6-08ea-4c99-aa20-134721d1388e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("68d8376d-e082-439b-a683-d9746d7d5609"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4903),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 20, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4902),
                            ShowTimeID = new Guid("5b9e1bc9-2eaa-4ee3-8287-073e615a3ade"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("13c96c85-999a-4d3a-bb23-354eeaf6655f"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4909),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 19, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4907),
                            ShowTimeID = new Guid("aaa8c96a-6bb1-43cb-b225-ef060469e67a"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("45369751-18d7-47f3-87ca-7e3e57506f5f"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4912),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 18, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4911),
                            ShowTimeID = new Guid("3428ccd9-e7d7-42de-a7ab-3f673b54bef0"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("000a9ec2-0b3b-4461-835b-3d420645268a"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3867),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("baca2cfd-1ff9-4653-af50-daaaa1420021"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3907),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c6e6fb50-df2f-470c-84b4-679db4ba3805"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3928),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6d783809-1cec-445b-8687-bc4c76e20675"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3931),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("38cfb23c-23d6-49e5-8561-e5841e71dcef"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3933),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5bf9ba80-faca-4c5e-b1e2-74b2ce9d7de6"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3935),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b7a17611-f943-41d3-943b-f96c1fd39fa9"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3937),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7d373bef-bb0e-4057-9ace-461b36f41d36"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3939),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("85d76b4b-138c-4d24-ba22-95b244dfcb79"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3940),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("397ac34b-4a2c-4f48-8472-6e35af22d630"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3942),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("55ae512e-3125-42ad-a919-8aef2c1420f5"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3943),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("381db2c0-1167-4a0d-b9f2-4cfc3f69b6c9"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3947),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("16bb2de2-5871-4813-bad4-56f0f9e444f3"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3948),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a3508323-f5a2-4161-a9cf-3cdfff17cb5d"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3949),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0519c724-1fb3-4e3b-a92d-13354723e812"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3950),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eb075fe4-66a5-40ff-98a5-6c4794225f98"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3952),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3020d589-8ff4-4616-a07c-abd3b9ae1158"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3953),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4c199e5d-0f18-4263-8673-89263f0c68a9"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3955),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("415b35e6-df13-4080-8c89-9de9132da601"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3956),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b6398da-ef5f-4e68-b051-7aadf0dd71ab"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3959),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f24fe7e-ccca-4422-b795-28131d87a034"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3960),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("25bcc11f-5e8a-4dd1-9dec-f285c90964cd"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3961),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("21d52b42-ab3b-447c-874e-5d9ad7bec0f2"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3963),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dad2e64b-1b0b-4ebf-81b7-47012ca30e2f"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3964),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1d60cea9-0848-412d-856a-8122155c3c17"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3965),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5f31c7f0-93b9-4284-a0b4-d3dcaa1f93a2"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3966),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d75187a0-8475-4dfc-99cd-0b773b38c34d"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3991),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b3f2f295-2ec7-44a1-a82d-44be8de89c1c"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3994),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("50ee93b3-dace-4dd5-b1e3-a9be9dc71b17"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3996),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("641f0bc4-ea73-4eb2-9d11-1caddafe7bba"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3997),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0ed382dd-d87c-40ef-ae91-10e6fe792bd7"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(3998),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95422e40-bd8c-4894-8b13-e9775db22b49"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4000),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d4760b18-c1a8-4aef-8c44-0fd30776167d"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4001),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("10326289-2055-4d88-84af-181c142915bc"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4003),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ff120bb8-bfd7-4bfd-9bab-f0a2ecdb559c"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4004),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b048e506-a7b8-4b51-a9a7-60765a09e45b"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4007),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f307c97-4f6d-4890-ae7d-fd771ccebca3"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4008),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("38202d2b-9938-425c-bd7e-c36c8cb20191"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4009),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d657a3d9-6136-4771-ad50-3db6453dd12f"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4011),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("55832478-a1bd-4b28-a81f-f812984207aa"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4012),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e4a9451a-2f59-4e51-9f12-4066ebda39df"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4013),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("76f12f08-3ef2-419a-975b-9aa6d216aaae"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4014),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1c194d91-ea2b-43fb-8e17-b7577e2f60ba"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4016),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("008b8552-7722-4fb0-8f55-ecf3371718d5"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4018),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d154b21a-6088-4ed3-9384-784e73d2b95c"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4019),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f9ba781-6e97-4a8c-8ea3-c4ad04acb8d4"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4021),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("87f47199-7eff-4980-8ac4-6a5508f48008"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4022),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ac172bc2-1762-4422-86ab-c05a15eef02a"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4023),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b456af83-ff7d-4752-8ad3-42b8b35b758b"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4024),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("11b81c70-b98c-4ddc-a256-113c3e4feb46"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4026),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("764843d0-1846-46f9-aea0-14b6c9d64d7b"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4053),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c4b12f69-8e6a-4304-acf0-db7f4621bc46"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4056),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7f790e06-034f-4754-99ab-7a50ecb0d735"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4058),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("448c731c-3c78-4ce1-b8a3-58d60bcde875"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4059),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bf951831-cf45-4d32-ba76-056955bd0708"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4061),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("060bfc55-3554-4f4a-bc3a-7fe0c0ef9372"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4062),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9dc24df2-c9d8-41c5-bdd5-e49329500471"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4063),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dbcc3c58-f5ef-48ce-83b9-0c3570ccd1af"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4064),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7395f8b6-0cbb-432e-afa4-7f6c1308eac7"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4066),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7cb6f58e-65fc-4792-9831-2fa5c0608091"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4069),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8ca5cae3-aba0-4e7d-8e1a-be5b75c4690c"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4070),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d9c93ae2-5644-465d-80f9-c1d3bdfac8a8"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4071),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b4199b2-d288-4446-b2ff-6945ee1613cc"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4073),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("81aebd85-6310-4af4-8bf8-273f419fb8fc"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4074),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("719bbbcc-9e3a-4c47-acd1-8b48c22e7a32"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4075),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("54ac23c3-75dc-46e7-87e1-474f87587630"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4077),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c7f1627f-b760-4bbe-9f90-00b6127b0d4e"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4079),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("48ab48c5-c544-48c9-9f9d-9fe6f23a7728"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4082),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d426d67f-966f-4d8b-b691-8316f7bb578b"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4083),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("98f28625-c9d6-4a5a-9789-04a98f6c5ba3"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4084),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c6076f9-de4b-4ad5-ba9d-97c5fc5155a7"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4085),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c99559d1-6210-4f5c-8887-6304b280fce5"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4086),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("519aa86e-7d69-4327-9b04-7755d624a383"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4121),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8261a4e4-6499-48b8-9f77-09384b07db95"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4123),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d79a9b9d-59ce-4738-b257-67d6cc3f1902"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4124),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("92f98fe1-3cb9-4756-b20a-2a73016619d1"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4127),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8f8ae2ae-ed89-4f44-9308-570aeb34a847"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4129),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95e75aba-a5da-49e8-88ef-f0d1ecae71b3"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4130),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c787b881-ca4b-453e-b82c-2026b3b5c94f"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4131),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7e41ff07-b5ea-44b2-a0ad-d148d5736916"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4133),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e55f4464-868d-4ebe-a8f5-266adf79ec43"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4134),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("280d5d47-7f55-42e9-b5e8-71d54503ab77"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4136),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("04e72b98-5a71-4d85-bc07-0af42838067d"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4137),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d427849-5bb1-4176-9d88-84fbd1f612ad"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4140),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2f44fc92-eb46-4259-b6e8-c7e14b48928a"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4141),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("df74accf-b473-4e96-9ab9-d797f30361b0"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4142),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d3c74e7a-e233-4f18-95f1-9e33a7ecf671"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4144),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("32dd14e4-4978-4bff-ab62-ce3d07dfebba"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4145),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fa73f62f-1d76-47a3-8437-1b6a65ee4a81"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4147),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a406e2c2-1e7d-42c0-b4c7-4b58db5f3d07"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4148),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2f365e1f-4dfb-42c8-b606-ec98ec24b0be"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4149),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8db35d58-557f-4b4a-970a-7c083c1ad55e"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4153),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8790bee2-d4ff-483a-8291-afaccda40717"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4155),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5261c2f1-aee3-4c33-9563-863026b2dbc4"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4156),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d20707aa-b444-4c18-ad31-9cf52f2b7491"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4157),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e4e8ddb4-194a-4d88-a9c2-39a26779c3cc"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4158),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("70600c1f-e779-4c09-9c66-80d97d78332b"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4160),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("184a8456-6e4a-452d-83ab-631f6e385406"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4187),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("92f745fa-f7d7-4e11-a6fa-dd2d4dbb1694"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4189),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ae7c7948-680c-4a7f-ae95-6e81187a431e"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4192),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("27991265-8590-49fe-9b6b-2f376a2e36fc"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4195),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b4eb2910-c98d-43e3-9bf9-6729225ef0e6"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4199),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4deb4dcc-1998-4654-b9c9-99fe0f46ab30"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4200),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ce953625-83a8-4c2e-8ed9-9b3b0d02f36c"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4201),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e3fb5d67-232b-4e88-ada8-e91123dadaa5"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4202),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("45fd5945-04b1-49f3-a74d-74e569a0dfb4"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4204),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("84ddbbce-d735-48d7-90f0-4a0ee049710a"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4205),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("87d0c81a-8d28-4dee-b6a2-3998b7e24378"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4208),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("32a05e3e-e3c2-4b0a-8ea4-0d9e32a3cd0a"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4209),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6122c85a-2533-43bd-af33-75cc3394ea1b"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4210),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c0d72a9-8fed-4a18-af97-c6f17004d298"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4211),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("df2775ef-8eeb-4f48-b796-f080c6975e1e"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4213),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("534350e0-0411-413c-8f11-67ea6a559231"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4214),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0da06379-2200-4297-a751-adfb759d4e8d"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4215),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("00b87a53-1088-4a1d-913a-956664747844"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4217),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3e829a7f-2289-48c2-9f13-56621594427a"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4220),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("59261b0d-9011-47a2-9edf-2bcaa3705520"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4221),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a89d0504-6862-4202-820a-760b154e761d"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4222),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("07e214de-0be0-41e6-9658-7e6f732f897b"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4223),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0324ddca-4de7-4894-aa62-18d878b0f8bd"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4224),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9335b262-2f2a-4f73-9275-5343a3d129a6"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4226),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3b014f8a-e0b0-42bf-8ba9-67b5ce1d312a"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4227),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6e49666d-8d8b-4607-9a85-f5fb9fd3f05f"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4248),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("13c13e43-44fe-4170-9d78-3a9b6b44f6bd"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4250),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("78c530ac-24a6-4510-857a-43c07cefc6d1"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4252),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("15b49bb2-8e47-443a-832b-aa914d0dd049"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4253),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("82e30ab7-86ad-41ee-a729-5cd770c00d07"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4255),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0b9eace5-47b4-47f9-88b8-6061958f9108"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4256),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1616876b-e192-4d19-a3a3-66686bdaf763"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4257),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b2ed172-18d3-48a5-b640-188cce8faaa5"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4260),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("308fe7e8-f01d-4411-a72b-91104fdad21c"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4261),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c909f735-69bd-4d14-81d5-2d70917df6b1"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4264),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("599fdad7-d932-4bf1-8a07-faeb15194366"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4265),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e364901c-a11f-40d1-b23f-b2ee6eb6cf9d"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4267),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1e36e7d6-6db6-473c-95c0-646328fe0e66"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4268),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e39a9132-b9e9-4915-94f4-67334124f5cc"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4269),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("50611aa5-8e0f-4daa-ab10-55208eb6cc4f"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4271),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("101f2354-9a2c-404e-a25e-121c3831125e"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4272),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c91768ea-57d4-45e1-a293-522cd5c0786e"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4273),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fef2525e-87bd-4ffc-a463-5c301534c4c3"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4276),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("420ceb3d-6132-4865-bb4b-f27b5aa30f90"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4277),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("668c4890-72b2-4a14-b80d-d3ba11112172"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4297),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0de5d875-a929-4ac6-bb58-790ce77c1789"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4298),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3d038321-bf3f-47fc-92ae-1929f3eb6345"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4300),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("05c2aee3-a11c-4768-92db-f5443407dde6"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4301),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("51fb3476-8b83-4158-b7c9-8c6cc84160d6"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4302),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4055d1ed-c65c-4cee-8f81-cbdd95587373"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4303),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c1b3b986-65fe-4048-813b-e6e6d6471d18"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4306),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("831abe66-ac7f-4df1-a454-f9299b9d3e57"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4308),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c99a2ceb-e5c1-46de-b7a0-bbbd8207bfc9"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4309),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("be82a03b-90e6-4759-8fb3-72666932323d"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4310),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("68d22311-3e3f-40da-8472-c53a21bf7851"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4312),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ef12824c-e66b-4028-9ef8-1136281bf2bc"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4313),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4386b1b6-06aa-42f2-a4a5-d94513a876c7"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4315),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("32090a6c-7d5d-49bb-8115-549f2287bde4"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4316),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("34dce8a6-5192-4a7d-b62d-5ebc9e4b43c0"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4319),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b0a9eec1-8c8c-4ae3-a579-832996e23a01"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4320),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e2f6bf61-a309-4beb-984c-1ab07906d2cd"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4321),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("087e3bfd-a0de-4bae-afaf-61d7341ad4e8"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4323),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7ece2a55-657d-486e-8cd4-eaac2fad6bb9"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4324),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6328fbae-b92d-43e6-9a6b-25a9c5561500"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4325),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e822ec66-dae6-48d9-9fe3-7fd6a1ed72c3"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4326),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a77915de-8e8b-4e0a-9624-7576375a828f"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4327),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c38e25c7-5a57-4b55-9349-4d53b416d33b"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4330),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5f0ed182-a663-4225-b357-f5b8dc4c5275"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4331),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0756e7b5-b155-4014-a207-e9cf05ebff4e"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4332),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("15677dc1-4f6f-48ff-b657-d68fb0e403fe"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4334),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e791db57-7056-4404-8a1a-cdb02b95e8fb"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4355),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("54e1e108-d30b-4744-a3fa-6206f61eecfb"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4357),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3dabe1c7-6526-4d7f-a808-d9b9dda5ab1b"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4358),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("49945a9f-934b-4f9f-a777-528c52f1c62b"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4360),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7af23d4b-6f7f-4204-b839-6a32f2382f50"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4363),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6aaded34-1920-4d5f-b5cd-e85870bde209"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4365),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dcff6952-1233-4fb8-863a-d6ca08716e4f"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4367),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03a1ae60-8727-4823-ba0b-297315413255"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4368),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("23309bfc-f4df-4a13-a372-d8265344d1ef"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4370),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1368217b-8478-4f63-a599-bd839df43c53"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4372),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("70c34f89-ab88-4c78-8d5f-f884fd5ebf27"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4373),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("398aa1f6-ff8c-4a61-8fef-d394abbbe17e"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4374),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("76a0ac3a-948a-4906-8339-6aac0e3ce4dc"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4377),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e43cfe11-844d-4ec8-9d4a-7f997d2c110b"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4379),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("82ececb2-c364-423a-b278-0bc35d08e2a2"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4380),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e2ff4465-19a5-4ac4-a0e9-82440c5a1258"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4381),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6fea66f0-af1e-45a1-91e8-a42a4005f732"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4383),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("12c14cb3-e0dc-4a37-81c0-9c2a2acb89af"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4384),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9df41830-ca60-4fea-92f0-52b2e1374b89"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4385),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b36a7ea-b25a-4691-a58d-c994d54a6850"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4386),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c8ae9eee-c794-4110-8c41-86e00ecb3cd8"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4389),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("00136bd9-ddcc-4fd4-8e18-4144d848faa2"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4391),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c1c9874e-4f63-4baa-a018-20e1a8c3f429"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4392),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5715606a-d3aa-45e2-82ca-ebfb500a0534"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4393),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba1b01d5-9c73-4421-abd2-3c7632055072"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4395),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0f503f39-b8ae-4c45-a8b3-0adeb24b4042"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4419),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d54ba7e9-ca31-45d8-b3f4-8f3b59c8e297"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4420),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0e0196e6-f9fe-4779-829a-addb7323344f"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4422),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f288033a-0609-457b-9f59-7202ce39aacc"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4425),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eec2aaf0-ba8f-4c01-8dbd-a6a573df759d"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4426),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5e805d57-60ee-4126-947f-79cb39c689d4"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4428),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("89acdd8b-1d5f-4b75-b9df-0d73905c3e20"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4429),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1686edcd-de87-406a-bac1-c91c13e0704c"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4430),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56ab04c3-1937-4b08-bb3b-9a96d22026bf"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4432),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b6df8b2b-3d84-4679-b1e2-2f362f811a09"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4433),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("77bda269-9b5b-4041-a729-e306d49785ca"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4434),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("11ca8ec1-0370-4d66-8884-6ab490980e9f"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4437),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca885dc4-fe72-417b-84b0-3af84ea38430"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4438),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d399a2af-7525-4c2b-8390-18329a891691"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4440),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b64cb15c-7465-44cb-b00d-997af932a439"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4441),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f7e19094-d463-42ed-a8bf-5dececcf75b1"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4442),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7cac59af-59db-4a61-a65e-4ad7981d53a4"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4444),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("53995654-f5ba-401a-a1f6-dcfbccd4b4a4"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4445),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9bf8fb39-8464-44af-a891-8e2b593c554f"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4446),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7f45edbb-2bd1-4372-98af-f58e0d9ff9c6"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4449),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ed2a8f2b-f2c9-4d4e-a8f7-2776cfbba53e"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4450),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8f86ab45-a59b-4f5e-a9af-68285122992c"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4451),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ec13441a-0ac4-4ea9-92a5-032d499787a2"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4452),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ab4230de-8697-4abc-906c-37777e07cd31"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4472),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d76ba240-297f-4557-b9ae-eb530b253d83"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4474),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("76e40fdf-9e97-409e-852d-2cb007aea70f"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4475),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c7be197-26fb-49f3-9372-aa2fd62bfb97"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4477),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f139fed3-dd1c-4948-b511-8bae49eee25e"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4479),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9070d20e-7b7e-44ca-b25f-a96dcef4f112"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4481),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dbb39d27-c202-4ce5-8977-759d6e1a43da"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4482),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c1feef57-36bb-4dc3-9c87-4f41231fc77b"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4483),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("31c2c175-2d9d-4818-bea0-1ae85501d4a8"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4485),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a318c190-bb87-488e-954d-25017fa7a45e"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4486),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("16a33f06-f2e0-4e8e-82ec-494f39d7eb38"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4487),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a861022b-554e-4d50-b4ff-aae6f1e81b1f"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4488),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c72bdbcd-8364-4742-a0ab-67b18322b0cd"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4491),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6f23d1ab-f98c-4307-a3aa-66a8af22d44b"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4492),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b9f30ae0-663a-460c-b59b-a42730fd4dfa"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4494),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("22141eee-662e-4588-b389-53c7ad692b7a"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4495),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("352d7be5-cd0c-4241-8f76-b0553ddcada6"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4496),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("74fed5f6-831a-4bca-8f9a-f7a98a31b7e9"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4497),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7a84b852-6d07-4f11-9cc1-380411828e3a"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4499),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2018c55a-0b5f-4180-9330-d0d27f42e33c"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4500),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f3837a64-098b-4c57-bad0-9ce1a17a9026"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4503),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1c57946a-f3e1-4b70-9d23-a9aeba5145ff"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4504),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("490d1d5b-34e6-41a7-85bd-db0ae195c99f"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4505),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("59d29d9a-30c4-4934-982c-bd0416bbc54b"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4525),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("23785991-2d83-4dfa-9061-6690bc297046"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4526),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a41a542d-6834-4e6b-a310-55b8a71322a6"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4528),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4d82c429-701b-4379-a5fb-3f96b0cbe353"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4529),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9e2f0402-6452-4d4f-8f40-bc4e1464b1b1"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4531),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("28d1ae58-6db8-4536-a399-ccfd7e2d4c05"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4534),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d55b612b-ae47-48ec-b9ac-072a56fd243d"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4535),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03eb02d3-1d16-490f-b60a-37cb0a5c51ff"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4537),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d3fba334-7991-46e6-be6f-f5e026e973e5"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4538),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d7387729-5297-4b5e-917f-3b6886481d13"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4539),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2027ab26-7cb2-4770-a303-7f711f5a5790"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4540),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("de1d1f76-58b8-4daa-a4d1-0c57642ca815"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4542),
                            Deleted = false,
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("seatEnum")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ShowtimeId");

                    b.ToTable("SeatShowTimeStatuss");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3781),
                            Deleted = false,
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("0ce08fd6-0d1d-4c61-8b8b-7827baff7fe1"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3785),
                            Deleted = false,
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("587ff198-12d1-4eb4-9ce7-909da4af6bcb"),
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3787),
                            Deleted = false,
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("b0f5489f-c2ef-4bee-9440-d6e98dd82e04"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0614ffd0-31e0-474a-9cd1-68fba16f0b96"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("00076875-d26a-481b-9eb4-6b587e311f77"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bd2a5fc6-08ea-4c99-aa20-134721d1388e"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b9e1bc9-2eaa-4ee3-8287-073e615a3ade"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aaa8c96a-6bb1-43cb-b225-ef060469e67a"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3428ccd9-e7d7-42de-a7ab-3f673b54bef0"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9af8a52a-4976-41f9-9a10-e484ef61b853"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e3c2d2b1-a385-47ec-a0db-a282cd67c3fb"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b921a2fd-3ca5-4aa3-b069-5b9cdbc94795"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a4786a8a-dd86-4cf0-bcd7-899070c8ac8a"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4844),
                            DateRelease = new DateTime(2025, 1, 15, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4853),
                            Deleted = false,
                            MovieID = new Guid("04c6fda8-279c-48a9-8573-1041a7cd8f36"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2025, 1, 14, 18, 25, 15, 243, DateTimeKind.Local).AddTicks(4849)
                        },
                        new
                        {
                            ID = new Guid("3700b64f-cd97-4118-8cf3-299bfbf1c0e6"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4858),
                            DateRelease = new DateTime(2025, 1, 16, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(4861),
                            Deleted = false,
                            MovieID = new Guid("9a335e7e-a745-444a-92b3-15321ddcccda"),
                            RoomID = new Guid("427db6c5-bd55-4cc5-802b-3d647afce83c"),
                            Status = 1,
                            TimeRelease = new DateTime(2025, 1, 14, 18, 26, 15, 243, DateTimeKind.Local).AddTicks(4860)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BillId");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("5c7ad45b-8f8a-4925-8b23-621f86818d04"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4959),
                            Deleted = false,
                            Price = 50000m,
                            ScreeningID = new Guid("3e894e50-3975-4377-9720-0b7857896dc2"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("b0f5489f-c2ef-4bee-9440-d6e98dd82e04"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("a1e01560-7b63-4dd7-8afa-3698e1066d86"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4969),
                            Deleted = false,
                            Price = 60000m,
                            ScreeningID = new Guid("17c1b819-1938-4674-814a-aec24f7fb42b"),
                            SeatTypeID = new Guid("0ce08fd6-0d1d-4c61-8b8b-7827baff7fe1"),
                            ShowTimeID = new Guid("0614ffd0-31e0-474a-9cd1-68fba16f0b96"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge3D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge4D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            CreatedTime = new DateTime(2025, 1, 14, 11, 24, 15, 243, DateTimeKind.Utc).AddTicks(4934),
                            Deleted = false,
                            PriceAfter17hWeekDay = 60000m,
                            PriceAfter17hWeekeend = 70000m,
                            PriceBefore17hWeekDay = 50000m,
                            PriceBefore17hWeekeend = 60000m,
                            Surcharge3D = 10000m,
                            Surcharge4D = 20000m,
                            SurchargeCouple = 10000m,
                            SurchargeIMAX = 50000m,
                            SurchargeVIP = 5000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("0d90a24c-8cec-4ad7-9d0b-d93f843b1c4d"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3072),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "client@gmail.com",
                            FullName = "Client",
                            Gender = false,
                            Images = "avt-default.jpg",
                            PassWord = "NRELDnTH4T5RRzAipPZ4Gw==",
                            PhoneNumber = "0123456789",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9fd2df65-d257-46cb-905c-4b0736d32250"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3463),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "staff@gmail.com",
                            FullName = "Staff",
                            Gender = false,
                            Images = "avt-default.jpg",
                            PassWord = "NRELDnTH4T5RRzAipPZ4Gw==",
                            PhoneNumber = "9876543210",
                            RoleID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("706b380a-5160-4d5f-82f6-efc548d6b1e6"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3519),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "admin@gmail.com",
                            FullName = "Adminn",
                            Gender = false,
                            Images = "avt-default.jpg",
                            PassWord = "NRELDnTH4T5RRzAipPZ4Gw==",
                            PhoneNumber = "0334583921",
                            RoleID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4ca26f01-dc1e-4f90-a32f-58513bd5610c"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2025, 1, 14, 18, 24, 15, 243, DateTimeKind.Local).AddTicks(3543),
                            DateOrBriht = new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "giaphipp@gmail.com",
                            FullName = "Phùng Tiến Giáp",
                            Gender = false,
                            Images = "avt-default.jpg",
                            PassWord = "LK25tQh1RqkKbrq4C2l6fw==",
                            PhoneNumber = "0862774830",
                            RoleID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotions")
                        .WithMany("Bills")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Promotions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieTypes")
                        .WithMany("Movies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");

                    b.Navigation("MovieTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PendingPoint", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithOne("PendingPoint")
                        .HasForeignKey("NeonCinema_Domain.Database.Entities.PendingPoint", "BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PendingPoint")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", null)
                        .WithMany("Screenings")
                        .HasForeignKey("Show_releaseID");

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("ShowtimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Seat");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("Ticket")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("PendingPoint");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PendingPoint");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
