// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20241213075948_Innit")]
    partial class Innit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1b8bbbbd-dac6-40bb-8681-488993ea4545"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9918),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("1327b38f-5095-49b2-911f-d9182a7c741e")
                        },
                        new
                        {
                            ID = new Guid("d9d75d3a-e657-4401-ac30-6b3a5f386483"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9922),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("88d4d9fc-df7e-40af-8983-222b9c516a28")
                        },
                        new
                        {
                            ID = new Guid("c1ed6955-5989-4bcd-b41f-40bba2cf7ea5"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 12, 12, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9925),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("228835c8-0da4-452b-84d5-11d662cd859d")
                        },
                        new
                        {
                            ID = new Guid("012a94c2-3246-4da6-9f2d-65a5df534f37"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 12, 11, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9929),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("ca0c10af-9b78-4b1f-a504-a4c38ed86f0a")
                        },
                        new
                        {
                            ID = new Guid("95bd366a-e2e3-415a-9ba9-182692c95257"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 12, 10, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9940),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("a217fcb6-40c1-427e-8012-d5b47d063d13")
                        },
                        new
                        {
                            ID = new Guid("d84b4305-d9b2-4504-a82c-9dfb5a597a74"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 12, 9, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9943),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("c007c310-42f9-4db1-8345-60d0a38d71b8")
                        },
                        new
                        {
                            ID = new Guid("958931f8-5db7-495e-87db-0dced4119c58"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 12, 9, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9947),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("c007c310-42f9-4db1-8345-60d0a38d71b8")
                        },
                        new
                        {
                            ID = new Guid("c552a5c9-5fc7-4ad5-81c8-be78c007f9c2"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 12, 8, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9951),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("75239abc-3aea-4966-bb8f-7f691c98eebe")
                        },
                        new
                        {
                            ID = new Guid("b324957f-bf6e-4172-b24d-43cc5a90d70e"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 12, 3, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9956),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("44559344-807d-4e4f-b993-5ebc05b2aab6")
                        },
                        new
                        {
                            ID = new Guid("593bafa1-20b8-4756-845a-2c9aedd9f1ec"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 12, 5, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9960),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("12931e77-0b38-4f99-9e0d-aad2dcea36e9")
                        },
                        new
                        {
                            ID = new Guid("110fb5b2-74f6-4998-8ca5-516ca8d69918"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 12, 7, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9964),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("3d164abd-177f-46b4-a883-b0e51b017dc9")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");

                    b.HasData(
                        new
                        {
                            BillID = new Guid("1b8bbbbd-dac6-40bb-8681-488993ea4545"),
                            FoodComboID = new Guid("13f13397-5e1d-4173-920b-df9cfdafd383"),
                            CreatedTime = new DateTime(2024, 12, 11, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9997),
                            Quantity = 1
                        },
                        new
                        {
                            BillID = new Guid("d9d75d3a-e657-4401-ac30-6b3a5f386483"),
                            FoodComboID = new Guid("03803032-310c-45b4-b574-190149259681"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(1),
                            Quantity = 2
                        },
                        new
                        {
                            BillID = new Guid("c1ed6955-5989-4bcd-b41f-40bba2cf7ea5"),
                            FoodComboID = new Guid("21be93d9-9e84-4985-8f45-25daf48133ce"),
                            CreatedTime = new DateTime(2024, 12, 12, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(3),
                            Quantity = 3
                        },
                        new
                        {
                            BillID = new Guid("012a94c2-3246-4da6-9f2d-65a5df534f37"),
                            FoodComboID = new Guid("a08d1991-2285-4571-acda-3707466840b3"),
                            CreatedTime = new DateTime(2024, 12, 11, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(5),
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("1b8bbbbd-dac6-40bb-8681-488993ea4545"),
                            TicketId = new Guid("2bf9a0c4-4b38-40d4-bf3e-46634a28ea5f"),
                            CreatedTime = new DateTime(2024, 12, 12, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(37)
                        },
                        new
                        {
                            BillId = new Guid("d9d75d3a-e657-4401-ac30-6b3a5f386483"),
                            TicketId = new Guid("a69c9b6e-c0f1-4558-8220-d530347869b1"),
                            CreatedTime = new DateTime(2024, 12, 12, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(40)
                        },
                        new
                        {
                            BillId = new Guid("c1ed6955-5989-4bcd-b41f-40bba2cf7ea5"),
                            TicketId = new Guid("17e04f0f-e66d-4595-ac73-d2c53a759662"),
                            CreatedTime = new DateTime(2024, 12, 11, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(42)
                        },
                        new
                        {
                            BillId = new Guid("012a94c2-3246-4da6-9f2d-65a5df534f37"),
                            TicketId = new Guid("a69c9b6e-c0f1-4558-8220-d530347869b1"),
                            CreatedTime = new DateTime(2024, 12, 11, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(45)
                        },
                        new
                        {
                            BillId = new Guid("95bd366a-e2e3-415a-9ba9-182692c95257"),
                            TicketId = new Guid("2bf9a0c4-4b38-40d4-bf3e-46634a28ea5f"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(51)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("6ab2e5e2-4d6e-412e-a79b-a49272ac6e1e"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("84f9296d-1517-4230-9246-21f1445fd0b5"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("81ce8735-9329-4252-916a-57041fc735d8"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("839bf7df-2262-4197-b21e-2d3ee47ac425"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(8432),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("b135b583-f09a-4288-8b77-88d8247ddfc0"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(8436),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("b688b16b-8e7b-418c-9cbf-049492427a85"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("cdf130f4-2a54-4d0c-84ee-bf1b41349a6c"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("1b895c95-3250-4537-9951-13addb26d5f7"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("f0a411c3-41b0-4217-be55-d9aca5dd3a67"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("1430e22c-f978-493f-99a3-9b238964638e"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("24ac6e61-ef56-4de7-88cc-eb42c4251803"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("40a7302c-0e50-445f-9d9a-5f3ae70ce123"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("b9e0c259-437b-474b-91a3-20e7ff186888"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("322615a4-78b3-4bfe-85f3-8c6268514f44"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("925d6285-6c00-404f-81aa-b8d3c252c13a"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("76dfacba-663d-472e-9223-e81474328b85"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9716363d-b768-437f-a6de-296f43adf745"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8cfff192-a0a0-4548-b9cb-499fd3514e3a"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3798d378-01d4-41e8-ab2e-8f09497804ee"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b7065e5-057e-4bf6-bc4f-2208cd0355db"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cbfd749b-b5ec-4b3f-bc15-c634956ff569"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cfa87743-7d54-4f1c-97eb-e3d478c68a14"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7e4d2663-a4ec-41c3-a567-9c1bfa4883d9"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("13f13397-5e1d-4173-920b-df9cfdafd383"),
                            Content = "Combo 1",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9833),
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 100000m
                        },
                        new
                        {
                            ID = new Guid("03803032-310c-45b4-b574-190149259681"),
                            Content = "Combo 2",
                            CreatedTime = new DateTime(2024, 12, 12, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9837),
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 150000m
                        },
                        new
                        {
                            ID = new Guid("21be93d9-9e84-4985-8f45-25daf48133ce"),
                            Content = "Combo 3",
                            CreatedTime = new DateTime(2024, 12, 11, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9840),
                            Description = "1 bắp bơ + 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 3,
                            TotalPrice = 120000m
                        },
                        new
                        {
                            ID = new Guid("a08d1991-2285-4571-acda-3707466840b3"),
                            Content = "Combo 4",
                            CreatedTime = new DateTime(2024, 12, 10, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9843),
                            Description = "2 bắp bơ 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 4,
                            TotalPrice = 200000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("b24165dd-8526-4695-be15-36b4da8f9d92"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("91282823-5bc8-4862-b2b8-837046fe227a"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("734c154c-18cc-4189-8902-0cacf49d6156"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("e5fa160b-5d7f-44c0-b6c5-4564c6cbf76e"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("a64fc51c-8f36-4352-9504-ab0544898da4"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("a0fc1282-706e-44bd-9109-2adc6a2f50f8"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("7ff8711a-c854-4f00-a382-2479de9e083b"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("929f913d-4a27-467d-ae4b-c2d9d6a4a509"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("349539b3-0e64-44e4-bb16-f3832f115d5b"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("72ed3f09-f614-4d03-a0cd-fd9f62b20b03"),
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("e63012ee-a713-460d-81ec-97dce6338d66"),
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("a830e0d6-bd82-43fa-8161-2ca27a5dc0be"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("53851b88-7523-49dd-91db-2be5da59d2b2"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("8a7258ce-f404-42c8-88b7-57c41d53e6f6"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9381),
                            Description = "Hành trình cảm động về tình cha con giữa Sài Gòn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "0e9f825c-5346-44f1-a94d-7078909ce83a.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Bố Già 2",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=bogia2-trailer"
                        },
                        new
                        {
                            ID = new Guid("bb85ffe0-61ab-403e-9285-0bf08869ea63"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9393),
                            Description = "Những mâu thuẫn căng thẳng giữa các băng nhóm trong thế giới ngầm.",
                            DirectorID = new Guid("925d6285-6c00-404f-81aa-b8d3c252c13a"),
                            Duration = 120,
                            GenreID = new Guid("b24165dd-8526-4695-be15-36b4da8f9d92"),
                            Images = "161cd6ca-380d-4627-8071-2d5af03a1cf2.png",
                            LenguageID = new Guid("72ed3f09-f614-4d03-a0cd-fd9f62b20b03"),
                            Name = "Chị Mười Ba: Cuộc Chiến Nhân Tình",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("c2798649-1d7a-46f3-9397-9b736b23e972"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9402),
                            Description = "Cuộc sống đầy biến động của một gia đình truyền thống Việt.",
                            DirectorID = new Guid("76dfacba-663d-472e-9223-e81474328b85"),
                            Duration = 110,
                            GenreID = new Guid("91282823-5bc8-4862-b2b8-837046fe227a"),
                            Images = "100f852c-f5b4-43f0-8560-84ab0b42b9b9.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Nhà Bà Nữ",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=nhabanu-trailer"
                        },
                        new
                        {
                            ID = new Guid("6517b964-1562-48f9-ad7f-e82957512887"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9433),
                            Description = "Cuộc sống sang chảnh và những bí mật động trời của giới thượng lưu.",
                            DirectorID = new Guid("9716363d-b768-437f-a6de-296f43adf745"),
                            Duration = 140,
                            GenreID = new Guid("734c154c-18cc-4189-8902-0cacf49d6156"),
                            Images = "11d330e9-7ab3-49d6-bb78-0ab3acabf6cf.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Gái Già Lắm Chiêu 6",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=gaigialamchieu-trailer"
                        },
                        new
                        {
                            ID = new Guid("159508aa-249b-479d-8e6a-afe0dd781b76"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9441),
                            Description = "Bữa tiệc đầy những bí mật được phơi bày qua trò chơi mạo hiểm.",
                            DirectorID = new Guid("8cfff192-a0a0-4548-b9cb-499fd3514e3a"),
                            Duration = 125,
                            GenreID = new Guid("e5fa160b-5d7f-44c0-b6c5-4564c6cbf76e"),
                            Images = "2d2a89fa-61c6-4662-a2de-ab4b337c88d7.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Tiệc Trăng Máu 2",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=tiectrangmau-trailer"
                        },
                        new
                        {
                            ID = new Guid("5f609da4-2b3b-4894-8335-8f00f47c9500"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9454),
                            Description = "Hành trình sinh tồn đầy kịch tính trong khu rừng bí ẩn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 115,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "rungthemanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Rừng Thế Mạng 2",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=rungthemanh-trailer"
                        },
                        new
                        {
                            ID = new Guid("c70499b3-9b06-4daf-9d9d-ed3c52f2f56d"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9462),
                            Description = "Câu chuyện tình yêu đầy lãng mạn và cảm động của Trịnh Công Sơn.",
                            DirectorID = new Guid("925d6285-6c00-404f-81aa-b8d3c252c13a"),
                            Duration = 150,
                            GenreID = new Guid("b24165dd-8526-4695-be15-36b4da8f9d92"),
                            Images = "5b626704-f3d1-482f-b77c-903284966efa.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Em Và Trịnh 2",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=emvatrinh-trailer"
                        },
                        new
                        {
                            ID = new Guid("9487e234-5862-48e1-8268-50a984cc1b67"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9471),
                            Description = "Tiếp tục câu chuyện tình yêu day dứt giữa Ngạn và Hà Lan.",
                            DirectorID = new Guid("76dfacba-663d-472e-9223-e81474328b85"),
                            Duration = 130,
                            GenreID = new Guid("91282823-5bc8-4862-b2b8-837046fe227a"),
                            Images = "7502d22a-c967-400c-bc8c-3062d00c7fcc.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Mắt Biếc 2",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=matbiec-trailer"
                        },
                        new
                        {
                            ID = new Guid("28be9eb3-8c98-46b9-aba5-050d9f5eee2f"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9485),
                            Description = "Phiên bản Việt của Người Nhện với những pha hành động gay cấn.",
                            DirectorID = new Guid("9716363d-b768-437f-a6de-296f43adf745"),
                            Duration = 145,
                            GenreID = new Guid("734c154c-18cc-4189-8902-0cacf49d6156"),
                            Images = "96cc9263-2adb-46f1-a015-fe0a18c4b781.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Người Nhện Việt Nam",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=nguoinhenvietnam-trailer"
                        },
                        new
                        {
                            ID = new Guid("caaeb783-5b2b-409b-a8df-08ed09f656f9"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9507),
                            Description = "Những câu chuyện tình yêu lãng mạn tại Sài Gòn mưa rơi.",
                            DirectorID = new Guid("8cfff192-a0a0-4548-b9cb-499fd3514e3a"),
                            Duration = 100,
                            GenreID = new Guid("e5fa160b-5d7f-44c0-b6c5-4564c6cbf76e"),
                            Images = "96cc9263-2adb-46f1-a015-fe0a18c4b781.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Sài Gòn Trong Cơn Mưa 2",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=saigonmuaroi-trailer"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("4dc6ac16-cb5f-4ebd-8479-0d44aaee98fc"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a2b44013-3bfc-451b-bb47-d93bd508a2b0"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("38653bb2-b4df-430b-bb95-bcdda89cb155"),
                            DateEarned = new DateTime(2024, 12, 13, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(110),
                            TotalPoint = 50,
                            UserID = new Guid("1327b38f-5095-49b2-911f-d9182a7c741e")
                        },
                        new
                        {
                            ID = new Guid("9b0beb91-1b3b-4bbd-9e6e-6a8215b25b06"),
                            DateEarned = new DateTime(2024, 12, 13, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(114),
                            TotalPoint = 150,
                            UserID = new Guid("88d4d9fc-df7e-40af-8983-222b9c516a28")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountMax")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("76eb5f1a-29f0-40f1-8f2f-32f9615c8977"),
                            MinPoint = 100.0,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 12, 13, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(83),
                            Status = 1,
                            UserID = new Guid("1327b38f-5095-49b2-911f-d9182a7c741e")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(6660),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(6706),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(6710),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(8478),
                            Name = "Room 1",
                            RowNumber = 12,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(8485),
                            Name = "Room 2",
                            RowNumber = 12,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Show_releaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_releaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("27c933a3-3c3c-4f83-bb68-0357af9c6b35"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9597),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 23, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9595),
                            ShowTimeID = new Guid("4f460804-c903-4262-8728-165da509e836"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("13a8a1f2-31bc-4f1f-a992-dfb6dba4f860"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9603),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 22, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9601),
                            ShowTimeID = new Guid("595df1df-073e-4cd2-af05-4f3c0e6b5acd"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ba5c1568-b109-45e6-8472-ed16fee0cd3f"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9607),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 21, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9605),
                            ShowTimeID = new Guid("741b3e6a-6955-49c8-9e13-93eecd7ad163"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c72e2076-6edd-4c25-8fc1-058e89ba6e41"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9619),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 20, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9618),
                            ShowTimeID = new Guid("f0224c98-37b0-41e0-abb0-66e3f56b2c57"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("61b01e79-f6ce-4a61-9c2d-a2e5da9907e5"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9627),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 19, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9625),
                            ShowTimeID = new Guid("e7f3f86d-bd5d-4827-a0c5-ebe918b593fe"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4b967311-62c5-4163-a328-722f2ce524b0"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9632),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 18, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9630),
                            ShowTimeID = new Guid("7f716a45-b6c5-4083-bad9-b54401324bc3"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a78fe708-0924-4edc-96ac-7e3372d79a9c"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9637),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 17, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9636),
                            ShowTimeID = new Guid("a3514f75-a49b-4fcb-afd7-90b54e34e468"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1cd03ed2-0c33-4c3a-aff3-b704be551bd3"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("22c43047-2cf1-4879-bf09-0baafb20d50f"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8c5bb988-80e8-4b1e-88ed-15a7e8eb0df5"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7089963a-bb1c-46f0-85a5-eb6459a3d6f7"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("88ce25b7-4cd9-4cad-8daf-c75435eb0ddc"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3e0540d5-a55e-4719-9554-efec3952d8a9"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c677f70e-d9a5-4d82-a42c-eafea7d36eec"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fd6f824d-17bf-4c38-8bb5-39e6deadff0f"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e72cb4b8-d449-4c69-8cd2-ab49f067b454"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6297c7cf-3675-4660-a6fb-46395c12aaed"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7a45f035-329b-4c12-b23a-705128ee506e"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1c851638-4610-4a4a-9f11-fa8e3b7a5a09"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f8133f96-4989-429f-8063-a47b4f37db09"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("114f76b4-b674-4e96-9fc1-bee2fd230765"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("07a2a44b-e1a0-4977-888d-6e338060ac1a"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d0153871-7dcc-4dc3-b8dc-9969b6b7182e"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("92006581-8281-4436-be74-0d5f6a1e664e"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e050cae6-eb0a-4a2f-95f1-29db4ed6040f"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("59f50166-344e-45d4-bb48-dcd176a5561b"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9d74dbb2-38f8-45de-98e2-58ddcf433fcc"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("be7184d4-b4ff-4804-a4ae-302cfc6e771f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("846ee792-782e-45b4-8044-33ac8843cf89"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ff2c5d9d-d7cb-4bfe-8198-234f63cd9cae"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aeec7c2d-4ef1-4b44-87c0-3acbf7683d77"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9b655648-0c99-4bb5-bed4-92348741fbee"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eb127aac-e990-4560-9d10-ac14575dc249"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fdec6d42-00ad-4268-b7e1-4ca7893413fb"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("71f61938-ff76-4678-90d3-28304e07bbdd"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e4a4a26a-9ea9-4aea-88c3-b5310b07f3c1"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f31fc8f6-10ee-4b99-9e86-783fb2095312"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("40f818fc-8e1a-452f-b58b-66f00eca4cff"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9bbb828c-2da7-4a5a-a5f0-c4bbd2226b49"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7a968e62-5943-4247-93c9-265620148a4a"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bda67b63-1ffe-40be-a08d-c255862c68df"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ab7763b0-cb49-4c64-8c44-969a05660f6b"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eeb330cb-b414-415a-a7d8-087f8fa1fbd8"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7e1fa55b-9ae2-4c53-99d4-db3160da189e"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a1c74575-43d9-4481-bc5f-cd98417b3dd3"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d6dd7106-e4f3-4f1d-bf61-aabb667a19fb"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9c0f99f2-ee41-49a4-b6f0-83f3026eb1a9"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("89003966-8f11-4ca3-b456-c3f1350dfc19"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7feef56f-a181-4d4a-b075-f82120eb757e"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7f68d3e2-75fb-4d39-bc4d-a5e4cb50c33e"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5972024b-108b-42aa-89b0-78a930d5042d"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1d51f32b-f6f5-433a-bb5c-a61e86ea0912"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ddeeafd0-aba8-4ae4-9baa-46aac784fbdf"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1456ba4b-ff66-489b-aca1-6ab84ce32874"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cbef4491-c9ec-4299-b5aa-4b623807fca4"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e1afd2c2-e2b2-4485-a83f-29069aeb1e57"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f7ad0f0c-0352-46d3-8df8-8f69a3fe207b"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a7e10cd5-fada-4a68-af60-db25cb74ac53"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d0333cf-1f26-4f47-bdb6-476ac510b8bb"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3dc3b774-3a6b-4c38-b0ef-ec1a8c73da53"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b48af42a-6566-44de-a422-4bdf0a87afea"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("01f7b356-9522-4d28-b978-1615d31c0a88"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("856acca7-064b-42e7-9765-aa8eb72dd3dd"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("284f2c4b-608f-4bf3-a65f-8d3c030ce324"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("570988db-0cad-465c-8814-df95b58c6051"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c6fbd62b-9c8e-4079-9019-30a45bdec3d8"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d11a876-8ccb-48d3-b531-3dcb5e5cbab5"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f39cd312-3097-4c1e-ba37-dc9c1c792cd6"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c79339ac-4a18-4be5-b987-e5cfe64b9336"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e2483dbf-8984-4371-b049-d53ae649948e"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4758c08e-3382-4333-b95d-2d9c119f6b45"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("31394118-87a0-4f5d-ba32-be24b667cff7"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e9b3712e-e80e-4de5-86d9-b599b301d175"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7c19ca38-2279-4815-9637-a821f087f255"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5ee8e5d4-2e7c-486e-b3d6-8ba52e821190"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8def5df1-c7fd-46cb-b368-67e27b5a86c1"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95e340a0-15b6-47b1-bc4b-d04a27eaba1d"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8062b696-3d58-4e4e-861f-cc2f6a8d3659"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca744bb2-9e5a-4349-9744-f4330223b260"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c38ee6ac-058f-4d05-9c19-1eb7e2ab0154"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("afc69caf-3287-4b02-a364-4a6ce3659f8d"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8e7f9d5e-0456-4ffe-846f-18747e3857e5"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c3f520bf-2067-4bcc-832b-99d8f2d13d2d"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8c15c94d-3baf-4e4e-9413-912a2f2a5db4"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3e4ed93e-8de7-4a02-be40-17d1ac3020b1"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("290f6b87-703c-4be5-9237-8c4d24bbb478"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("571fe344-4e9e-493c-95c8-4f18abd7766a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0cc39225-5093-4641-8a94-a672289632ea"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f2c77b6c-52af-49a1-bfcf-6610e02d748b"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("121695d3-ed59-4458-94fe-148e437f3dd5"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7b9e9574-cddd-42a5-986a-b60e18220908"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("36577d83-4ae5-46ca-8acf-5049544e8e87"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ad74768f-d8aa-4c88-b741-1aa7ce717951"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("272de1a7-0aa9-43d8-8180-b2f23f347af2"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8db4efe2-bf40-42c2-9342-32c708225e31"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c86f4dfc-8119-4845-b76a-2f057757c959"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c8daf8c-bf67-4318-a8d3-f3168f812f3c"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bf8cbcd1-161a-43b5-9fa0-f33354b044bf"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1a2bedfa-044c-4f56-9483-e6073f5ba984"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b758b64c-2770-46dc-ac16-b8442e5d8a39"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1402912c-885a-4fd6-8ce0-31174dd5cafb"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d81bed54-f46a-4146-b07d-8b04617eb5da"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5c59991e-c2ab-46dd-914e-d73879d0dc9c"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("906db6fa-9838-4a7e-bb3d-1c489f2625fa"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("421d2256-8b3e-4d0a-bd38-781eb87f273e"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("866b950b-b897-40e8-84c9-a9f4250fedf8"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ea425242-1c6c-4dc3-a10c-45984dbe90d3"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a1a39f09-e515-4410-8403-1ac18e9951c1"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("39d8956b-d642-44b0-92e0-5a9cf81a1441"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("937652e5-1f46-4da8-a816-6b53019c958c"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a491fc19-8ac9-4b57-9f48-977cc1f6088d"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a136adfe-d6d1-43df-b929-a266cd771a84"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03859422-1365-449b-9b1e-60d13413af61"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b7cf7fa5-d19d-4211-a0db-fad8bba92f67"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dcc26355-2fda-454b-98a6-487029733155"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b58684b4-bb43-4352-a4d4-5a418eda11f6"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fb295458-3dfd-448c-8d9f-1b2174672b2b"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b7419040-2ea5-47b3-8efc-9b74784d3815"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8dac88e6-d9f4-458d-a617-1af92e299770"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("05739882-83e5-48f1-8dd3-61753963a34f"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca46ec95-f21a-4bd3-8c35-4035c0ca4ea3"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6ea970a0-aae6-4fd6-b075-689366602369"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f275f0bd-eae8-4dfe-9976-daf81ba42a22"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("914d855d-cf89-48e0-9bf8-1464ee4054d4"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8cda4ef9-a1fc-4ef1-9ea1-f1fc61b8d8bc"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b5085513-c9cc-4104-bbcb-373a3e25d830"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3bbba2bb-87f1-4e0a-83ec-bb0f83db575e"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95e4efba-40eb-42e4-be45-4223a8f4700a"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fdfec7a8-db60-405d-ae9e-0abacf3bbc09"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8c9d6910-a7ea-4a70-8661-ba3cf74425d0"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f8220fcc-9a78-4b28-abad-719d8e0b912d"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5472e1ca-83a1-4b6e-a1ba-f9290d2156ac"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4845bc14-b9ab-49d7-81ae-c15425c17a8b"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cd4c18bc-d6af-4a01-bc00-cb16905a852b"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("009cce4e-8d9c-42b8-81ae-fc6f261368f1"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("622cf5b6-02d2-476f-8021-f3ff3d202144"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7fda796c-d7f0-4418-a5a7-33d727bf701b"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("93db22d6-4d0e-415b-9653-751c1af228e0"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f5594229-046b-4d95-8f99-0bd414f5e2a5"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1357a8b8-4a74-4006-a049-743b30a22149"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0f29d753-909a-4641-a71c-1d8f678dc2a1"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("de2b6efe-62ce-4b0b-9064-08b2faa419ea"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("193e6609-0ee1-4f86-a1c0-efe21ce5a6d0"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("095aa678-bbc5-4178-8b42-d6f0289f62d8"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cfca3455-8b7a-45cd-bc4b-5c2b3f9101d7"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8565db6b-bb0b-46c8-a084-3607259b70ae"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9337b2c0-8e22-4cf4-8f4b-5d585d812c37"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bc68c751-043a-466e-865a-4e80ad37166f"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b45fcc48-57aa-40ad-b426-c4478dd52b06"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e76efdcd-b5dc-4474-9806-4bd9441c61ae"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("10c3cb63-74f8-4478-a179-d28519ebb905"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ffb6bde0-37c9-4707-9b46-ac0846b45eca"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7053db67-6b2c-404f-9054-73be45081ca9"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("15576908-aa5a-4b46-8f2e-930047192e17"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d8ee4856-6e11-4e08-bfed-cd39cf37b359"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("396a2baa-669c-4650-afd7-815b8e7fe36d"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f4a56b6c-d36b-46ca-8780-936f4c11dc58"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0e6b484b-f594-4de1-9306-0b8973779287"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("23ed2cc4-284a-4c65-b268-2a12ba0b16c8"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0407b7ac-8fc5-48e1-bcf0-f1aacaf7ba25"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("437d2b60-da1e-4e10-8aff-037bb7d9e412"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("74ae087f-b910-4c11-8a6c-7a53afac1ed8"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dea0b823-a844-4235-8261-a50ac77fea46"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("24600742-579f-4cfc-b70c-e474c97ecf8e"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("74527fe4-ef0b-45f2-8c72-bd02573a557c"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("938095db-8ffa-48c1-bb2a-9c625404cf89"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8d9e6349-c781-41e7-8a7f-d3633429e0af"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7d3473b3-545a-40a0-b1f5-32afa44e7c8b"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("15314ade-934e-4d0f-be81-3868f16d84e2"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("915a8a2f-08b2-49a8-9d1f-76f8d45856d6"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("daac549d-8275-4799-a97a-07bfd536b19c"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eaf6ca5f-9566-4b51-a235-3aeb7fcb6b0b"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cb116f04-db17-4955-9ff6-ccb2b214b91c"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3e1de3d2-59d6-47d6-b03a-874dd2fcb189"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fc64c218-aede-4513-b0a1-3a5d4aae9ddf"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca3a9f7c-d8ff-4eb0-aeaa-1a1a9bd57282"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b5ed982e-36c0-48ef-afe1-d358105afd30"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e93132cc-588a-4265-82ee-e8ff9ae514ba"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03094d76-d303-4d7c-a324-5bfd13c5d980"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("444b5889-1ef9-4105-87da-559425adbc55"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fd815dc3-170b-4429-aeb0-22376237352c"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2a9d3c82-011b-4192-9445-8811dd784043"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f747873f-b770-494b-95bb-c2eba5a99772"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("24b2c774-4d5b-4eb3-a94c-ef85e4713644"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7fc65122-2716-45d1-8514-34444d3de230"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e0179d60-1598-4103-aa72-01fec864646f"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("92a36bf8-288d-46ed-8488-e8d7c79f95b7"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("427c925e-8cef-4226-b651-55f64d7ed0dd"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("296cd125-712a-4062-a037-87bd73c8474d"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("883bd3f9-6cae-46df-a041-3c45285c6d76"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dd1a486b-27bd-4b16-8f00-964da447d98e"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dc41050f-dd82-4222-b6fc-dc7dcd89ad44"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b57abfec-dd42-4f73-9ba5-093f77156e18"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9cb68129-a9f2-4316-9957-8a8d65305337"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f87b62c7-e893-4372-8b6b-936228e505c4"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f65d924a-1f87-4d6f-a66a-664794101859"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8d8055b9-1bb9-449f-ae75-2959663d86e9"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c0aeb433-0b1f-44a3-b1ca-1a761b44a048"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("02023110-068d-4cb3-b748-25ce564ee369"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("176d5029-824e-4544-a937-3027a0b1951a"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba04212e-d7d4-404d-889f-9cefcb5fe828"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0278521c-3606-4451-a2eb-be0175b47397"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2ac2afac-427e-4c62-a411-9c7717f8f390"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("792805f9-84c8-41d8-911b-3ac7b2157d2c"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5e86c0ec-f0da-42af-87db-15add39e4f84"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8d9474e5-0291-4bd2-8a2a-40d9f28fb228"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6e151ac9-7994-4d52-869d-50a1d795f07c"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("561407cb-b1ef-462c-abb3-6f15daccd0d5"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("da2e9354-0c87-4000-83d8-97be1fa25990"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b011e3cb-12b1-4ee2-b36a-8cf48a1013ff"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0148ccbd-5904-4c73-be7e-af93d3900c58"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2f96dee6-73d4-4d3d-8f2c-7d22f0aca279"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("39dd65bd-460d-4847-b087-ce72dce8b996"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aaded598-faf1-428d-a228-6a1195a19f4b"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5aa498e5-482d-4ab1-8294-66995dfc7b7e"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a9ab7e37-88ac-48db-a3ed-fb2ba06497e3"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4aad32b3-f194-4724-9e38-a6653490effa"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("988be1a6-0ae0-42c5-a15e-d4e0e726e371"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6db12a1b-bb2e-4120-86b4-de1a51f6c744"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e2bb6473-a54b-4e0b-a915-d9771f5a1000"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("df3054af-7024-4aea-b3f3-5957341aa37d"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fcc0fafa-6a73-4591-a4ad-5254047112d3"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e467ab46-7636-4c05-bc49-fdf1e451c461"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("73427ddd-83a0-4a0e-a2ef-77d46f1d1922"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("20c9399e-f6fd-4914-bc05-1f051c7cde14"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e571ac53-7468-4418-8c88-b0014c67c219"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3bd4f010-38bf-4b88-9852-6a26aef777ef"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("207f2b7f-4542-4f2b-b652-ac2e069fe000"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c3b4c8ec-4f18-4a2b-b6ac-97e5249cfb54"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a9a9c4ce-28b8-4914-98bd-73d98860244b"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("920af02a-fc2a-4a2c-b364-bef987859457"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95eeb7f1-f542-484a-809b-50012bd566e9"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5fb25768-d377-4f73-bfe2-55b180d24627"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bd17f8c4-5f20-425d-af93-944927037b0e"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1a9745e6-e600-4659-ac47-381168a3b0fd"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ef502615-3b10-475a-8ae2-13da3353c222"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1b4b06a9-4fe2-4ee1-9587-cfc1f7f2486c"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("46504975-03d1-48d7-a4ca-1905e720d0ff"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("045f20b1-f008-4ac3-a4ff-4c789116d90a"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8770e73b-f13d-48b8-84dd-38dc5e9f11ce"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9020ecf3-6ed0-4e51-b414-19b9daee0b40"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("631eeaed-cacb-4de7-b8a4-1e214b124b13"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eb5175bd-1f9c-4a31-a478-bcfeec95d0b9"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2a21d15b-f5e1-4180-a608-215bcf71539d"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d7048251-6dc5-4016-ba35-cd1dbda4988d"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eb1fa831-e88c-4ec1-becb-18d0eeb22a19"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("52e8fd90-176a-4cd7-bbfc-474fdaa2f5a5"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("93f2551d-0a8c-434b-93ce-9429c350b195"),
                            Column = "A",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7549dc3a-a0a3-4309-b966-f5413a3017c2"),
                            Column = "B",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2aecff41-4166-4f7f-b1c9-4bda3bc5c80b"),
                            Column = "C",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("416537aa-011f-48d5-9b71-cf5a144d6a00"),
                            Column = "D",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("48804830-d6f4-450a-bc07-04166dee939b"),
                            Column = "E",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bf2d041a-cd73-45b4-b09e-ab3fb7b9fe4b"),
                            Column = "F",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0e457c68-bad7-43a0-ade3-8a050c4eb01b"),
                            Column = "G",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d7c6a905-c3fd-4e16-a130-dba236a600d2"),
                            Column = "H",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eefd7a63-e3ec-4d6d-845c-52c2c8777691"),
                            Column = "I",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("60d5c1a8-3ab2-4163-911c-99ed3666c889"),
                            Column = "J",
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("seatEnum")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ShowtimeId");

                    b.ToTable("SeatShowTimeStatuss");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(8389),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("16fab0a5-c0e5-4e4d-a92c-9f10c6b6802c"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(8396),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("802c1bae-c27f-4c9e-97ed-5b94a160d380"),
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(8398),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4f460804-c903-4262-8728-165da509e836"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("595df1df-073e-4cd2-af05-4f3c0e6b5acd"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("741b3e6a-6955-49c8-9e13-93eecd7ad163"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f0224c98-37b0-41e0-abb0-66e3f56b2c57"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e7f3f86d-bd5d-4827-a0c5-ebe918b593fe"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7f716a45-b6c5-4083-bad9-b54401324bc3"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a3514f75-a49b-4fcb-afd7-90b54e34e468"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4d9cc1c7-d99a-4be7-80dc-23f2f0af4bda"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7d058b72-849e-4a83-9191-4d27fcfd0779"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8ac89615-ed0e-4ed6-a6d3-0c340ae1fdd0"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("5e914f40-57ea-4c16-b972-7595edc13fbd"),
                            DateRelease = new DateTime(2024, 12, 14, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9558),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 13, 15, 0, 48, 4, DateTimeKind.Local).AddTicks(9554)
                        },
                        new
                        {
                            ID = new Guid("6a428ac4-82c5-4f1d-944c-8a2a62111d19"),
                            DateRelease = new DateTime(2024, 12, 15, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(9564),
                            MovieID = new Guid("bb85ffe0-61ab-403e-9285-0bf08869ea63"),
                            RoomID = new Guid("ffca94db-452c-4d83-8049-9bf069baf4a4"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 13, 15, 1, 48, 4, DateTimeKind.Local).AddTicks(9563)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("2bf9a0c4-4b38-40d4-bf3e-46634a28ea5f"),
                            MovieID = new Guid("b7a0cd0a-c4dd-4e15-9fd6-61cb2416b72b"),
                            Price = 100000m,
                            ScreningID = new Guid("27c933a3-3c3c-4f83-bb68-0357af9c6b35"),
                            SeatID = new Guid("1cd03ed2-0c33-4c3a-aff3-b704be551bd3"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a69c9b6e-c0f1-4558-8220-d530347869b1"),
                            MovieID = new Guid("bb85ffe0-61ab-403e-9285-0bf08869ea63"),
                            Price = 2100000m,
                            ScreningID = new Guid("13a8a1f2-31bc-4f1f-a992-dfb6dba4f860"),
                            SeatID = new Guid("22c43047-2cf1-4879-bf09-0baafb20d50f"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("17e04f0f-e66d-4595-ac73-d2c53a759662"),
                            MovieID = new Guid("c2798649-1d7a-46f3-9397-9b736b23e972"),
                            Price = 3100000m,
                            ScreningID = new Guid("ba5c1568-b109-45e6-8472-ed16fee0cd3f"),
                            SeatID = new Guid("8c5bb988-80e8-4b1e-88ed-15a7e8eb0df5"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("84f9296d-1517-4230-9246-21f1445fd0b5"),
                            Price = 50000m,
                            ScreeningID = new Guid("27c933a3-3c3c-4f83-bb68-0357af9c6b35"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("4f460804-c903-4262-8728-165da509e836"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("839bf7df-2262-4197-b21e-2d3ee47ac425"),
                            Price = 60000m,
                            ScreeningID = new Guid("13a8a1f2-31bc-4f1f-a992-dfb6dba4f860"),
                            SeatTypeID = new Guid("16fab0a5-c0e5-4e4d-a92c-9f10c6b6802c"),
                            ShowTimeID = new Guid("595df1df-073e-4cd2-af05-4f3c0e6b5acd"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge3D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge4D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60000m,
                            PriceAfter17hWeekeend = 70000m,
                            PriceBefore17hWeekDay = 50000m,
                            PriceBefore17hWeekeend = 60000m,
                            Surcharge3D = 30000m,
                            Surcharge4D = 40000m,
                            SurchargeCouple = 50000m,
                            SurchargeIMAX = 50000m,
                            SurchargeVIP = 30000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1327b38f-5095-49b2-911f-d9182a7c741e"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7098),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("88d4d9fc-df7e-40af-8983-222b9c516a28"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7583),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("228835c8-0da4-452b-84d5-11d662cd859d"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7636),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca0c10af-9b78-4b1f-a504-a4c38ed86f0a"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7704),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a217fcb6-40c1-427e-8012-d5b47d063d13"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7747),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c007c310-42f9-4db1-8345-60d0a38d71b8"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7783),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("75239abc-3aea-4966-bb8f-7f691c98eebe"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7814),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("44559344-807d-4e4f-b993-5ebc05b2aab6"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7846),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("12931e77-0b38-4f99-9e0d-aad2dcea36e9"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7891),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3d164abd-177f-46b4-a883-b0e51b017dc9"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7923),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ff5421a4-6cf0-49d9-8fa5-f7e990fec007"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 12, 13, 14, 59, 48, 4, DateTimeKind.Local).AddTicks(7992),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("51d65feb-d37c-476e-be26-b15c295269d1"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 12, 13, 16, 59, 48, 5, DateTimeKind.Local).AddTicks(145),
                            TimeStar = new DateTime(2024, 12, 13, 12, 59, 48, 5, DateTimeKind.Local).AddTicks(144),
                            UserID = new Guid("1327b38f-5095-49b2-911f-d9182a7c741e"),
                            WorkDate = new DateTime(2024, 12, 13, 14, 59, 48, 5, DateTimeKind.Local).AddTicks(143)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", null)
                        .WithMany("Screenings")
                        .HasForeignKey("Show_releaseID");

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("ShowtimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Seat");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
