// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20241127011236_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("da939aea-dd28-4ff0-8b1b-fa9a347ebf29"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5234),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("fdc82ea7-c79c-4502-8e18-b37b413a1816")
                        },
                        new
                        {
                            ID = new Guid("0a44bfe0-132e-4d14-bd58-9a8e50ac720e"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5238),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("8b1388ba-2bb6-4c3b-bee7-6cb7be991300")
                        },
                        new
                        {
                            ID = new Guid("6b278b13-fa52-4bda-8640-935b64dc1a6b"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 11, 27, 7, 42, 36, 122, DateTimeKind.Local).AddTicks(5241),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("145ee07a-91aa-40ef-9721-3a498de58f8a")
                        },
                        new
                        {
                            ID = new Guid("cf5f9a45-1030-4be8-9473-95d31e318b39"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 11, 27, 7, 27, 36, 122, DateTimeKind.Local).AddTicks(5246),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("60b37219-68ea-471e-8967-e3a4a9bae5eb")
                        },
                        new
                        {
                            ID = new Guid("ea1aa202-422b-4d3a-b49b-5d26b87b9234"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 11, 27, 7, 12, 36, 122, DateTimeKind.Local).AddTicks(5249),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("29cd0d87-74d3-4f31-98c8-315a2af17f66")
                        },
                        new
                        {
                            ID = new Guid("c3835c82-8c72-4ff7-83cc-c24e077bd997"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 11, 27, 6, 42, 36, 122, DateTimeKind.Local).AddTicks(5252),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("823c194e-adcd-468b-9c1c-c508c22f13db")
                        },
                        new
                        {
                            ID = new Guid("d647222a-ad0b-4f3b-bc72-3babb3d2db6a"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5255),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("823c194e-adcd-468b-9c1c-c508c22f13db")
                        },
                        new
                        {
                            ID = new Guid("ea2f2d86-2d8f-4038-bb1e-627bc639719b"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 11, 27, 6, 12, 36, 122, DateTimeKind.Local).AddTicks(5259),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("54221ea5-e947-43b1-be5f-30abe2f79d4b")
                        },
                        new
                        {
                            ID = new Guid("e38f8e56-32bc-47a0-b1fe-a774c3d6e41f"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 11, 27, 5, 42, 36, 122, DateTimeKind.Local).AddTicks(5261),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("acc78752-f87b-4206-92d0-9e9ff1434d4f")
                        },
                        new
                        {
                            ID = new Guid("043b8a02-79c6-4b53-9620-df9a6e222a56"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 11, 27, 5, 12, 36, 122, DateTimeKind.Local).AddTicks(5264),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("2e9262f6-f307-4061-a5be-ac8d5f8fba23")
                        },
                        new
                        {
                            ID = new Guid("ab5fd40c-56ae-41a4-be42-18093c864506"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 11, 27, 4, 52, 36, 122, DateTimeKind.Local).AddTicks(5267),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("123a6b1d-17a0-4736-bf40-74c1c8198738")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("da939aea-dd28-4ff0-8b1b-fa9a347ebf29"),
                            TicketId = new Guid("1df6b40d-6453-485a-9339-7a8f6fdb7043")
                        },
                        new
                        {
                            BillId = new Guid("0a44bfe0-132e-4d14-bd58-9a8e50ac720e"),
                            TicketId = new Guid("49d91e5c-8d23-4673-98f8-d4c2f7933f00")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8528fd4e-eb19-4950-b2e3-71564ef6e26c"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("a480d3cd-2a41-4c51-98e4-9d1239717fd2"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("98fc6e71-7294-4ff0-8928-4621f1b0e57b"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("2d9f3708-d873-46f8-a535-d7c699dec64b"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4138),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("559a0092-4a09-4374-935b-39250d57fc51"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4144),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("648594f7-5184-42f5-a684-630b68d5b43f"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("08353c90-096c-4427-87f2-8424f1782bd3"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("17e8ca0f-d2c4-4e27-ae55-69e78aeb7856"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("e0f0e41c-a79c-40b4-acb9-a765846f9635"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("30e826e0-2838-4326-a32b-d4b889a95454"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("78856539-5617-42fd-99fe-50b9eb1cdf30"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("aef1bba7-be08-4cc9-969a-5a7f544282b6"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("8145fc84-ff5a-4775-8880-642e383725a3"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("0a582c87-b657-4fe2-8d13-0d069c894962"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b9d97e6-c323-402b-9985-d1fcda199327"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2129855f-8f2b-47f0-9ae3-ecdb85cede0d"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d35ecf6f-bb34-4c0f-b38d-6f3ee20062b7"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8163e263-4bd5-474b-b305-7323e99c3ee2"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ce68221c-78e4-4198-9b2a-a85a171751a8"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("79eda1e5-499d-4ca5-a8fb-e60c764f4ce0"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2b8f7f9d-90f8-4435-b63b-6505a7b96076"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f37a7279-e7b0-4b4a-a4fd-f237556c9489"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b1e251c2-5f7c-41ee-a0a3-5eb61369879b"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("760fc8a5-2615-4178-8b95-93ffe98a57ad"),
                            Content = "Combo 1",
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 20000m
                        },
                        new
                        {
                            ID = new Guid("e0d9e604-6e78-4636-afbf-8ef534310b1d"),
                            Content = "Combo 2",
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 220000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("f4780501-e9ee-4d09-afd5-31ae58ca9638"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("0b218867-c720-4450-99a9-5f6be06e1a17"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("c4438a3b-8ea5-4551-b19f-76957f25599f"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("5ab763dc-7638-45cb-99d4-38ae09c52bad"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("b57ff993-d62c-4dfc-90de-0f788ff614e8"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("696850a9-37bd-435d-a526-2003d832f0df"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("e8da10a7-fbc3-456b-93b3-1137356ae06f"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("6c59eccc-3cf8-42f0-8ae3-212be9106abe"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("298c7288-6fc4-48cc-bc57-87382616f974"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("e602e215-ce40-4804-8bc0-80aed05754f7"),
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("e06c7c68-93a1-4c46-88fe-12625a2ee8ba"),
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("a09e3892-97f9-4ce8-9f0c-5e465c99fc10"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("2e71e156-a391-433d-a502-ea14e2f6269f"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("a767e8ba-14b4-4302-b81e-ec4a45870874"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("31d24314-f829-4ab8-bac7-df82dd80ff2a"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4875),
                            Description = "Hành trình cảm động về tình cha con giữa Sài Gòn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "bogia2.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Bố Già 2",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=bogia2-trailer"
                        },
                        new
                        {
                            ID = new Guid("220a7819-1e39-4867-b6ef-2b978c2a66cc"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4885),
                            Description = "Những mâu thuẫn căng thẳng giữa các băng nhóm trong thế giới ngầm.",
                            DirectorID = new Guid("8b9d97e6-c323-402b-9985-d1fcda199327"),
                            Duration = 120,
                            GenreID = new Guid("f4780501-e9ee-4d09-afd5-31ae58ca9638"),
                            Images = "chimuoiba.png",
                            LenguageID = new Guid("e602e215-ce40-4804-8bc0-80aed05754f7"),
                            Name = "Chị Mười Ba: Cuộc Chiến Nhân Tình",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("48dc8e9f-bb97-421d-846c-071f84cfa035"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4893),
                            Description = "Cuộc sống đầy biến động của một gia đình truyền thống Việt.",
                            DirectorID = new Guid("2129855f-8f2b-47f0-9ae3-ecdb85cede0d"),
                            Duration = 110,
                            GenreID = new Guid("0b218867-c720-4450-99a9-5f6be06e1a17"),
                            Images = "nhabanu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Nhà Bà Nữ",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=nhabanu-trailer"
                        },
                        new
                        {
                            ID = new Guid("51dbea9d-16d9-4fb7-b0c5-882aec79c9f4"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4902),
                            Description = "Cuộc sống sang chảnh và những bí mật động trời của giới thượng lưu.",
                            DirectorID = new Guid("d35ecf6f-bb34-4c0f-b38d-6f3ee20062b7"),
                            Duration = 140,
                            GenreID = new Guid("c4438a3b-8ea5-4551-b19f-76957f25599f"),
                            Images = "gaigialamchieu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Gái Già Lắm Chiêu 6",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=gaigialamchieu-trailer"
                        },
                        new
                        {
                            ID = new Guid("3c1f3db4-9578-42b9-b283-2b5019fb2d4e"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4908),
                            Description = "Bữa tiệc đầy những bí mật được phơi bày qua trò chơi mạo hiểm.",
                            DirectorID = new Guid("8163e263-4bd5-474b-b305-7323e99c3ee2"),
                            Duration = 125,
                            GenreID = new Guid("5ab763dc-7638-45cb-99d4-38ae09c52bad"),
                            Images = "tiectrangmau.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Tiệc Trăng Máu 2",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=tiectrangmau-trailer"
                        },
                        new
                        {
                            ID = new Guid("eaf702a2-979a-44ae-bfa3-47e516ba0ddf"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4915),
                            Description = "Hành trình sinh tồn đầy kịch tính trong khu rừng bí ẩn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 115,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "rungthemanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Rừng Thế Mạng 2",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=rungthemanh-trailer"
                        },
                        new
                        {
                            ID = new Guid("aa03c41e-e2c1-4f29-9f6e-d29dcd9199eb"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4920),
                            Description = "Câu chuyện tình yêu đầy lãng mạn và cảm động của Trịnh Công Sơn.",
                            DirectorID = new Guid("8b9d97e6-c323-402b-9985-d1fcda199327"),
                            Duration = 150,
                            GenreID = new Guid("f4780501-e9ee-4d09-afd5-31ae58ca9638"),
                            Images = "emvatrinh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Em Và Trịnh 2",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=emvatrinh-trailer"
                        },
                        new
                        {
                            ID = new Guid("5205f9b8-cd2f-48a6-b1f0-70b7d4f86500"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4928),
                            Description = "Tiếp tục câu chuyện tình yêu day dứt giữa Ngạn và Hà Lan.",
                            DirectorID = new Guid("2129855f-8f2b-47f0-9ae3-ecdb85cede0d"),
                            Duration = 130,
                            GenreID = new Guid("0b218867-c720-4450-99a9-5f6be06e1a17"),
                            Images = "matbiec.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Mắt Biếc 2",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=matbiec-trailer"
                        },
                        new
                        {
                            ID = new Guid("75feef8e-5e63-496e-ae88-fc8f16c40fd8"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4949),
                            Description = "Phiên bản Việt của Người Nhện với những pha hành động gay cấn.",
                            DirectorID = new Guid("d35ecf6f-bb34-4c0f-b38d-6f3ee20062b7"),
                            Duration = 145,
                            GenreID = new Guid("c4438a3b-8ea5-4551-b19f-76957f25599f"),
                            Images = "nguoinhenvietnam.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Người Nhện Việt Nam",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=nguoinhenvietnam-trailer"
                        },
                        new
                        {
                            ID = new Guid("314473de-40f1-4612-b916-28a7c2b38a74"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4956),
                            Description = "Những câu chuyện tình yêu lãng mạn tại Sài Gòn mưa rơi.",
                            DirectorID = new Guid("8163e263-4bd5-474b-b305-7323e99c3ee2"),
                            Duration = 100,
                            GenreID = new Guid("5ab763dc-7638-45cb-99d4-38ae09c52bad"),
                            Images = "saigontrongmuaroi.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Sài Gòn Trong Cơn Mưa 2",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=saigonmuaroi-trailer"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("77d064a9-5a88-42a1-bfa8-9b3d2ae5c0b4"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dd0d78a5-1c5a-4bcf-949b-83669425e035"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("0c28b86b-f78b-4e84-b2c6-31344533fc22"),
                            DateEarned = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5351),
                            TotalPoint = 50,
                            UserID = new Guid("fdc82ea7-c79c-4502-8e18-b37b413a1816")
                        },
                        new
                        {
                            ID = new Guid("b11907ae-c62d-4e67-8866-7c8c07412cf8"),
                            DateEarned = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5355),
                            TotalPoint = 150,
                            UserID = new Guid("8b1388ba-2bb6-4c3b-bee7-6cb7be991300")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("542234a0-76e9-4057-9639-290c342eed89"),
                            MinPoint = 100,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5327),
                            Status = 1,
                            UserID = new Guid("fdc82ea7-c79c-4502-8e18-b37b413a1816")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(2738),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(2778),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(2784),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4182),
                            Name = "Room 1",
                            RowNumber = 0,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4187),
                            Name = "Room 2",
                            RowNumber = 0,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Show_ReleaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_ReleaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("74978454-e40c-4107-8902-e8eebd82744a"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5022),
                            MovieID = new Guid("31d24314-f829-4ab8-bac7-df82dd80ff2a"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 11, 29, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5020),
                            ShowTimeID = new Guid("2f2fc044-1a82-4163-9524-fd702237ca4b"),
                            Show_ReleaseID = new Guid("8c427062-0556-49a1-85bf-ddb11bdcc223"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c416e152-f44d-4910-b116-6402f1351ddb"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5032),
                            MovieID = new Guid("31d24314-f829-4ab8-bac7-df82dd80ff2a"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 1, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5026),
                            ShowTimeID = new Guid("2f2fc044-1a82-4163-9524-fd702237ca4b"),
                            Show_ReleaseID = new Guid("8c427062-0556-49a1-85bf-ddb11bdcc223"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("e1b5e310-6e33-490f-946a-aad0315a1006"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4f3a6317-e8a9-41ed-b925-a5b83fbbce7a"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e417a36b-ea36-4c54-82f9-74a46e3cbfb7"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("eae12e10-89e9-4706-8e55-c9cc3f78e872"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("aa061664-4007-422e-af2f-e84b1309e579"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("76ea70d9-70b8-42c9-85d7-ceaddd5301b8"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("efa90406-3414-420d-ad84-c83d57dd9c78"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("13e81dd2-ac49-44d4-89ca-54f6d31579cb"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5e56a282-4cb6-47e4-85c3-1328672de206"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("60ebe9f0-5e00-4e3a-8cb6-a40dec997cb9"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("922523fc-223e-4c73-9c65-fea4d2f35ca3"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("52e4f802-c306-4a83-9dc9-3aa9eaa4ce50"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ec705a4a-3c6b-4b6e-a49e-82904096aff1"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("98601fcc-82d7-4bfe-9189-9a9fd9e23f5f"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ee88a60f-dcd1-4f10-84d5-23525c28ea70"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a010509c-3345-40d8-8979-a5da17b6a35a"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("04980660-28d0-4a30-b5ef-0826362da43f"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0a300269-0c94-4c0c-a996-c660b2f45803"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f765df2a-3860-4752-bcdd-b6cd0fdc7fac"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("bddbd66b-c934-4a36-93cf-2bde27436014"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("350f80c3-d97e-4faf-8723-c4d8b50a5e1f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a6fdb6bb-785b-4019-b601-de7eee41cebd"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("af91fd5d-021a-4e26-918f-da7d8ddfb9b3"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("63e6dc47-5ea9-439b-99d3-1f67fd0e360e"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b2168a5a-4769-468f-8030-6719063a5a23"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5f4d44f0-9ffb-4949-90c5-58e83087988a"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a13d4f5e-2b65-480b-b15d-4e6255ec0571"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e948322a-eacc-475c-8527-e89ea2adc69e"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ffd2c13e-cede-417b-af94-dbc2653188f7"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4f9d217c-5d2e-42fd-a6b9-11dbe453e217"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("96d5ee67-6fb8-4dcf-85c6-90ae308d6259"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("698e977f-fbd5-49da-b22c-7b044692ebb3"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("97b41ebe-795d-4324-9eef-84f260145d18"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6a7efb19-1582-4c08-a347-2864a72358b1"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("43998c25-6e2d-4973-8a09-92ff2d6b0333"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a99792c7-2a59-4e63-8e66-22e9ec5038cb"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("53576978-fa67-43ac-81b9-a9134ddfa35f"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e7aa89dc-af36-4f14-bd2b-d9b266459930"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2eaeb9e5-9b33-49e7-80e3-95fb3a360cf3"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("97ef8515-1c7d-402e-aac6-9926e8e50e52"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("dc9c9791-546f-4923-bd1d-779a1a41b140"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a41a3941-689c-4f08-a818-de0eba7d8476"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c25812e3-14d9-45bd-b796-ef2f072933b5"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f7a01e4e-733f-401d-a9f9-21634a7a7597"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4175fa01-8e9d-4743-8b8e-b706126dde52"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a4678df0-a80a-430e-9c5a-ba772c54905b"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("dbd2d1c6-bcaa-4fd1-8ce0-925b1a5f2a36"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cae1e57d-0db2-46f9-9630-0ae67708ec8e"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3c1d2b54-6a59-4454-8190-682a03521241"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ab723b8e-93ac-4f80-ae55-f3857c817b38"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d4cce596-2bb8-4580-83aa-c6f228a333c9"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9dd8b051-10f1-4189-bebb-b05598de08f9"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f6127a0d-8e2f-45cf-b23c-d3771cead62f"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("88554110-a6bd-4cb0-8cf1-356a656d0f6b"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("14616062-c695-40b3-a3a0-264f0644cc7e"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("75086f2f-6e85-43c0-9801-70d0d507ba0b"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6b98c745-9746-4eea-af5e-5235666f2d64"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("42b7f590-3819-4170-a45e-7c043b07caef"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a04b7af8-ec3c-400a-b5b6-00ebaf91ba05"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("81bb1395-790d-4d27-9e26-cf001fc755a8"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("70ea8c5a-55ca-46fe-a7a7-6f0d933548e0"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4d974cfc-7b77-4527-abec-4cef44b83d47"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ebf35e91-ee18-427b-bee9-3cd98829501d"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c5bb6163-15ca-4c33-af64-f22f962d7090"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b1c60ec3-b0ec-4231-9c8a-1e35bc4f1058"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5da61d72-a1b3-46a4-9d6a-0198742b90dd"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("bcaee07b-1b4f-419b-b172-5fa6f865b8d6"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6ec6e462-c1ff-43ca-87be-768d94138282"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e6360381-49b5-43da-a0a1-81e28e2825da"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fb9f5eee-da09-46dd-a4a7-c755a622f435"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("963956dd-3964-4d59-a11a-3acbc47b4cfa"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("dccf64af-5b54-45e9-bf66-8cd2932cceec"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5f1b11bf-c59b-40c1-a6c3-0c7f9d4fdccf"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("432d7bd4-961d-45a9-a5cb-02690542b1bb"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("eab0058b-6571-4b38-a591-648a4433da62"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("10ce2ff4-8946-445e-9588-ec99de5dba7a"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9554e31a-cfec-4d95-abd1-61fdfeb86c3f"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a3d78884-2785-4cd2-b7a0-f9439e317036"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f464d7c2-a6c9-4575-98ed-441dc9d7c594"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f5fe6b22-f553-441d-b413-e2ff044c2089"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("10ee1c3a-da1f-48fa-a6aa-4dc62067435f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b42b4fd5-b71d-49d6-8fbd-cd8f06a70242"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8a59d6b4-7cf2-4ab6-892b-c9cc6cc5d0e5"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("922b2cc7-711b-4233-b255-ed9525d43fb1"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0ea79491-a1d8-4b5a-852a-b98de01853cf"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a9b6a8c1-5245-40f3-bafc-97d3193650e2"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a6596226-0646-40c7-8630-ca6a3ef87f00"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("812e90df-d336-41ff-807b-caa93477c3ae"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("20572cbd-2a30-44e3-8db0-d56f22d98791"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b4ea002b-8634-46aa-80e7-7a2cc3360037"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3f2c1700-c53c-4d95-bf00-2c024d2152a5"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ac1673b4-a280-4409-bb15-207f2a9753ac"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fe969cdd-046d-42d9-85b2-779ecc75c4e2"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4826bd69-184e-4aa8-9ee7-54b450529c80"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f9a8c038-d552-4f8d-bf23-ff7a77b217b3"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("840bfa72-bb25-4568-a047-7ec8d0e2a061"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a66f9a75-ed5f-47bc-a9c5-79942efebc25"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("42fbc48c-8444-43ea-a034-4c00f5390dc8"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("91efd30c-65fd-4218-971d-baa9264cbcf3"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a8b0ace9-aa11-4565-b596-641af76e8bea"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("32591cd9-7b86-461d-adf1-1700dbd7c27c"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6dd3d325-cd07-4747-9cac-f9ccad59f07c"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("71448b79-f598-4460-b0c5-a41e706821ca"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d9a8daab-fcb2-4e34-ae5c-679c58ed0d6b"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5b1c89da-8ddf-430e-ac45-94821e8300c4"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f8108b23-05d9-41aa-9497-834800ffe3d0"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b82588f2-dbfc-47f1-964e-4cc4811eba83"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9d2cc54d-310b-41e5-89bb-02919321d03f"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("43bfe225-3fed-4fc1-b8c5-326acb0479c9"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4be3b289-c4bd-452a-a812-32ea07362f10"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c977cf4e-234c-489a-a5e5-881b65906516"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f4a282d5-54da-4e92-a04e-0f607ba6b786"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5bcb648e-55e7-4860-8878-c7cdba687368"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("58602215-103a-42a2-a2eb-92d87644d599"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b72731fc-e1f3-4eff-b6db-b5323e69eb21"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1c3dbdea-f018-481c-833b-9a1970e5af18"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("692a5f79-b234-41ac-8a48-4dfa6b96253d"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fc4b6d41-7009-4dfc-bacb-d652222b58b2"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6f856a63-27c4-46e7-8f46-ef68da9de115"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1fd58498-f960-40aa-bd05-8659e31a84c0"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1c795b1c-12ae-455f-8b2b-d7db5318ccc2"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f296481b-7e11-4ebf-bc6a-18b3da85dac2"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("343ef94d-0e07-4627-9314-bdea560cd3e5"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a9527cff-91e9-4f84-bbec-235f09ac26e6"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fa333d72-7ddc-4c2a-b50b-c58a49a88c68"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("576375ad-e3e8-4bb7-bbfe-97d58adb4531"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0968845a-deca-4401-a300-fe682e32c104"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f278d746-8468-427d-869d-ef57fadff4d7"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c0984a9c-7727-42ac-8b08-d6fad4af576b"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("842c1ad4-6e6c-425d-ab11-36ae399c0720"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4dde06a0-544b-49ea-b1db-396c5e79acd3"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ec0dccc5-d082-49c3-91bb-89d3ab070d91"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("216b5702-4641-4247-895b-e4cc361719ed"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a9f2515d-ddcf-4164-9ab3-a4dd876af411"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4081ce2a-96d2-4e26-bf3c-20a401050f73"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0e0379f3-26dd-473a-8e0a-d358f7c5a3a7"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f0a7dd6d-6334-4eec-ad44-254059ae03d4"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9d023c56-c291-49b8-9f1c-39dbc0f2abcd"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("12ca22e1-5fa8-4ab2-bc36-334bbd079543"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("79431b9d-5399-4840-9334-21dca8e07e96"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2ff6e081-9b2b-4473-b809-d1e87fedf0fd"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fdb9a762-7832-4bd7-add6-49fdac0d5019"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0d77c7bd-5532-4121-beee-fb99fb5c4e41"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4732db89-c07e-473e-a163-27f39589ddde"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b5071285-f55c-4b85-af80-c7105214a7a0"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("175dcfda-332d-4a0e-aa9b-62bd2d385632"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a1247787-2397-48bb-98b7-7f3809f8ad7f"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1fe7994e-a3f5-4701-b314-e81143a392d9"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ab395efb-d9cd-4ad5-b4cb-b3f67510cf67"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5ccdfe98-c1f8-4ba5-9bd6-b113684eceac"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2cf268d1-ef73-4fed-aff3-d5b954b43cc8"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("258587c7-5cd6-4c53-af47-a1888556d21f"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e58a99cc-2ddc-452b-a386-ab0bc18e6c2a"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d8879685-a2ca-4945-8eec-5eef841c055a"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b9a0ce3b-f265-4045-b149-d9b69dc7aaf7"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3c8c14d4-c951-4e08-b02a-4a17f07892d6"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f9a5f0bb-3d41-49c6-8269-a9660ecc74e4"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("38f51593-5a59-4fd9-baca-81d90ea4f360"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2b6f9049-da00-4335-a021-fd67cbe38063"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4418350c-5a05-477a-ac0b-420a59ce751a"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0463b80a-6590-4e5e-8b9e-1b32612df4de"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("47fa9e12-a528-47ef-b3e4-e58426ec3ca4"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c99ad482-1246-4dce-8c64-a978585701a6"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0c83372a-51b8-4412-a032-c1da8f939674"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a13e915c-f00f-499b-a648-395e7c50c7ed"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4c6a41e0-8f72-44d1-8120-4eaf42e20d97"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("168863eb-2023-4571-baf7-81288d84a196"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c09972c4-5668-44d6-b513-6bba3123e806"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3d665853-4376-4af2-9b08-e30d2a99b1c2"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("25b9dd32-508e-4fbe-9f5e-93a53715bd39"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c97c533e-7344-4b25-ab89-bed77ed64053"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f582893d-7496-45ee-a1b3-8d2e7f6a453f"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e7cab6d0-fff1-4f5a-90e7-327eb499d479"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d2bccd58-7070-4752-ab83-fe833dacdff0"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("99395125-cb5d-4e93-a94a-0dfa2200e5c9"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c67c8efc-8be3-432a-a6cd-e221bee06db4"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("be4b646c-0c75-48a0-8c8c-27c31a8c033d"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1d3bf075-6e9c-4e77-a1c7-05c1b3ee5b54"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fce47a2e-7d69-4bda-834c-ec7ea20b8e6d"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e0492023-9c56-4291-a24e-6faf7f6a32dc"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fa04b77e-dcb6-4b17-941b-95acebb18331"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3c6a7916-e464-4566-a40e-0158371862b9"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9e83e244-fd05-43cb-b4f8-e48a78ab9d34"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6e28ff04-15cd-40fb-8e31-5161891d29f8"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0fb402f2-b69d-42dd-a7bf-a720109feb44"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3847f679-9518-4956-96c3-fa7d552a127a"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e3085fff-190a-4439-a414-f01536461455"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("15ad14b9-36c7-4adc-827c-b598ccceefdc"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e2966a8c-eb25-473c-8456-c6a688d98c9b"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e7df4dd2-ee58-485b-bcad-7616c87aa9a9"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e94fba94-7495-45d0-b206-1c928bd85c58"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a0cd0c00-764a-4e39-ac3d-ce0c5a62b19e"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a468ed96-4487-4a7d-aeb6-7eb565a548e0"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d1a9d3a0-785d-4b5f-bc2c-35ab026df0fd"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fa70d85e-3012-4796-9f50-227e655f43f5"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4a600201-fc75-4d6d-843d-4811f46366e6"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1b8d76e9-89b8-4308-8547-78a1b055c8a6"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ef2a5540-8349-4fe6-94ba-438b2e452662"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1c9ff095-2bc4-4a6a-a98b-fe653d49cff3"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a34ae854-182a-44e8-b447-725693b160bd"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("71a4986f-582f-40fa-9280-dd93f243b2c3"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a4f857a8-f2f1-4bdc-9d50-cd41c2b01cc6"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0cefd211-a789-4e76-a085-8915f4ad7b3a"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e93006b8-5729-45bd-9ce5-a8d148927dbb"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("08651043-8dd2-4e3a-a5c7-3a6ac3b0ba30"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("95aa5216-0b18-46ad-970e-73baf2584144"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5b3e5320-f39e-4b83-88d2-d25385b1f6a0"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a07c24d7-c1e7-4b62-b40e-14841d73fb62"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("13229f48-570c-4781-8a91-aa3b188c8358"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("657d8d57-c2ea-4b22-b58c-b25d614758a4"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8c83abdb-977a-4095-8fef-4f381dd69dc3"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4d9dcca8-bd2c-407e-bca4-78085f1ef975"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c6986560-44e7-4fa7-a2c4-45519e74b0fb"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("19e70e63-9f6d-4186-975c-a778e44d1ca1"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("baff3ef1-3b90-47ce-aae1-8e9f552d5243"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2ee6e200-b2e6-4f26-af08-a9d37e433768"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f676bd89-80ac-42c8-b7c8-da0554856721"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c3d6a061-1fa5-4b0a-87b8-7b264e8e1d0a"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9cd7a3d2-9d45-430a-8b62-b8a77b9d26cb"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d6c72e03-733b-4d8c-8fa4-828b756c2ea7"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("425c2fdb-b7ab-4463-b442-58ad4bfbd6ab"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4372ec99-fec0-4d8a-b840-7768d70116ad"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b5efa481-5e29-47fa-a209-ed139f763b9c"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("18519c83-d5f6-4686-adc6-a5beb5768c5f"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("56105f38-f1ad-4842-8d72-fdeaced32e4d"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a468a2a2-bc8c-4232-b052-67a5c953a66c"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b635b9c5-ff3e-4987-a69d-6de98a8778d6"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5904113b-2c61-48a5-9047-48856dbd6206"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("aebeb58b-e33f-4afb-a13b-0c60a9a582c6"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4695f04a-d279-4132-91c3-0d223381eb44"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c0964f37-d369-4db4-9c1f-a7260c77c633"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4cda1489-c4f7-4df6-8d1b-b50c6e33f956"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("252678ce-981c-4112-bd15-9dd3a7d3a104"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6e9dead6-30e2-4115-b4aa-67fca2b2c13e"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c54d6132-b57e-4be4-b0ab-78ed4aad3e17"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6fb7f520-581a-4315-a2da-c4f94572563e"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6e07fd6a-ea42-403c-8125-5cbb94241820"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("66703985-d96b-468a-abf8-9fbb5d92dc4f"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c33c1044-d980-4688-bd54-f17dff383060"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("32f77791-0f6e-4fbd-9384-24188b5a3f99"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1d7cc7b7-8d1f-4e3c-95c3-b982d8e7a6aa"),
                            Column = "A",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ceb8ac65-c517-4bd4-a9f3-3908645bb850"),
                            Column = "B",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8862bc95-de21-484a-bf56-b35221177cec"),
                            Column = "C",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cee08c86-7cf0-43d7-99a7-310498b84842"),
                            Column = "D",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6ef2a17c-bce4-4a49-9b3a-689c8c5a0f9a"),
                            Column = "E",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("74750445-2b4a-4fd7-8093-589c79b0eaa4"),
                            Column = "F",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("58b0ca74-a5af-4de9-98e7-a86e2f69208f"),
                            Column = "G",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2c178e3e-93fc-4e28-a159-95f4d021c2ea"),
                            Column = "H",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9f484baf-1f41-45c2-8d0c-93d28d309a56"),
                            Column = "I",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7073db88-1a42-4ebe-962d-2e57291363a1"),
                            Column = "J",
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4109),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("a22f9a3b-4728-49de-9edf-34f47a1a9421"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4112),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("8f8e74ec-6da1-4b41-bd1b-83feaa46a519"),
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4114),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("2f2fc044-1a82-4163-9524-fd702237ca4b"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("345732f5-5d6b-4f67-8d58-50c995f335b4"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c79d2b15-9d9e-4e4d-9895-fda08e02930e"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fdc2e703-e4da-4fbe-b40c-24845634cde9"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ee76c6ea-e167-4f4b-b7de-f2c6129913cf"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a7383f63-e647-4d2e-b782-2c5a1c7cc15f"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("33ff2845-6dd1-43b5-9757-58c2754e64ab"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fa97c02c-ecfd-42ef-b808-cea62b2271cf"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ff91ce7c-bd47-4996-9de0-dc1ceef2d523"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7cb52e8e-db9a-4832-8519-5964be48c90e"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8c427062-0556-49a1-85bf-ddb11bdcc223"),
                            DateRelease = new DateTime(2024, 11, 28, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(4992),
                            MovieID = new Guid("31d24314-f829-4ab8-bac7-df82dd80ff2a"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 11, 27, 8, 13, 36, 122, DateTimeKind.Local).AddTicks(4979)
                        },
                        new
                        {
                            ID = new Guid("6e97edc2-6f11-4383-b880-95444e49f0e8"),
                            DateRelease = new DateTime(2024, 11, 29, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5001),
                            MovieID = new Guid("220a7819-1e39-4867-b6ef-2b978c2a66cc"),
                            RoomID = new Guid("55407c6c-9137-4d13-9e70-31b9838e65b2"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 11, 27, 8, 14, 36, 122, DateTimeKind.Local).AddTicks(5000)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1df6b40d-6453-485a-9339-7a8f6fdb7043"),
                            MovieID = new Guid("31d24314-f829-4ab8-bac7-df82dd80ff2a"),
                            Price = 100000m,
                            ScreningID = new Guid("74978454-e40c-4107-8902-e8eebd82744a"),
                            SeatID = new Guid("e1b5e310-6e33-490f-946a-aad0315a1006"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("49d91e5c-8d23-4673-98f8-d4c2f7933f00"),
                            MovieID = new Guid("220a7819-1e39-4867-b6ef-2b978c2a66cc"),
                            Price = 2100000m,
                            ScreningID = new Guid("c416e152-f44d-4910-b116-6402f1351ddb"),
                            SeatID = new Guid("4f3a6317-e8a9-41ed-b925-a5b83fbbce7a"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a480d3cd-2a41-4c51-98e4-9d1239717fd2"),
                            Price = 50m,
                            ScreeningID = new Guid("74978454-e40c-4107-8902-e8eebd82744a"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("2f2fc044-1a82-4163-9524-fd702237ca4b"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("2d9f3708-d873-46f8-a535-d7c699dec64b"),
                            Price = 60m,
                            ScreeningID = new Guid("c416e152-f44d-4910-b116-6402f1351ddb"),
                            SeatTypeID = new Guid("a22f9a3b-4728-49de-9edf-34f47a1a9421"),
                            ShowTimeID = new Guid("345732f5-5d6b-4f67-8d58-50c995f335b4"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge3D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge4D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60m,
                            PriceAfter17hWeekeend = 70m,
                            PriceBefore17hWeekDay = 50m,
                            PriceBefore17hWeekeend = 60m,
                            Surcharge3D = 30m,
                            Surcharge4D = 40m,
                            SurchargeCouple = 50m,
                            SurchargeIMAX = 50m,
                            SurchargeVIP = 30m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("fdc82ea7-c79c-4502-8e18-b37b413a1816"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(2925),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b1388ba-2bb6-4c3b-bee7-6cb7be991300"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3606),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("145ee07a-91aa-40ef-9721-3a498de58f8a"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3645),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("60b37219-68ea-471e-8967-e3a4a9bae5eb"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3673),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("29cd0d87-74d3-4f31-98c8-315a2af17f66"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3696),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("823c194e-adcd-468b-9c1c-c508c22f13db"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3727),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("54221ea5-e947-43b1-be5f-30abe2f79d4b"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3751),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("acc78752-f87b-4206-92d0-9e9ff1434d4f"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3771),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2e9262f6-f307-4061-a5be-ac8d5f8fba23"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3792),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("123a6b1d-17a0-4736-bf40-74c1c8198738"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3834),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("93e775d8-b781-4243-824d-b8a65bfe4550"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(3860),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("e533ec40-b314-4d0f-9453-b1ee50f2895c"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 11, 27, 10, 12, 36, 122, DateTimeKind.Local).AddTicks(5382),
                            TimeStar = new DateTime(2024, 11, 27, 6, 12, 36, 122, DateTimeKind.Local).AddTicks(5381),
                            UserID = new Guid("fdc82ea7-c79c-4502-8e18-b37b413a1816"),
                            WorkDate = new DateTime(2024, 11, 27, 8, 12, 36, 122, DateTimeKind.Local).AddTicks(5380)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", "Show_Release")
                        .WithMany("Screenings")
                        .HasForeignKey("Show_ReleaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");

                    b.Navigation("Show_Release");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
