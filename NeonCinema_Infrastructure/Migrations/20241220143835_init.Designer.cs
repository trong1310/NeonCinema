// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20241220143835_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("872f7acf-2847-409e-be6f-1063d870a51a"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7303),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("665611d8-792d-44b0-9595-404ee3481383")
                        },
                        new
                        {
                            ID = new Guid("19f54016-d059-450f-8761-83fea9e6c827"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7306),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("2e6728ca-cffd-452e-8feb-af2aac53a90f")
                        },
                        new
                        {
                            ID = new Guid("331927d7-7fb6-48da-95cf-fb3d6f5b654c"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 12, 19, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7309),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("0fd11f3a-9d54-4d7f-ba60-2ee18434fb57")
                        },
                        new
                        {
                            ID = new Guid("9438b2a5-8ae0-47d7-94b2-da6a6ff2a59e"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 12, 18, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7315),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("561a5629-e969-4518-9b62-980df83f9a62")
                        },
                        new
                        {
                            ID = new Guid("182779ae-c3dd-4f18-8e6d-47c6dcb6da4d"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 12, 17, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7317),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("002876d8-d8b6-473a-abe1-86a32cac8d2b")
                        },
                        new
                        {
                            ID = new Guid("8502a37b-9978-4def-ae81-9891339e5184"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 12, 16, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7320),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("b13db532-2e8c-43f8-bc1f-4826a97df998")
                        },
                        new
                        {
                            ID = new Guid("26e0c676-aebb-42ec-9f40-0c2704b8a9e6"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 12, 16, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7323),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("b13db532-2e8c-43f8-bc1f-4826a97df998")
                        },
                        new
                        {
                            ID = new Guid("2d1c0ff4-36b9-4247-b7ea-b37e0ad7b351"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 12, 15, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7331),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("2457d50c-57da-4cce-8a21-4af939d8db3c")
                        },
                        new
                        {
                            ID = new Guid("37c7a5f4-fb67-4359-8b65-0749b4501d7b"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 12, 10, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7333),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("75eedd3b-3071-40c2-8bd8-6246934a7e70")
                        },
                        new
                        {
                            ID = new Guid("09c96d1c-fd8b-4421-ae16-58af855180ff"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 12, 12, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7336),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("343ee4b9-2e7b-4bfa-93f7-fe31c9022bfc")
                        },
                        new
                        {
                            ID = new Guid("81ea1354-13a5-4a11-be42-f8d1a054e0e0"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 12, 14, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7338),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("234413e2-3658-4d97-ba9b-e869c411b31a")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");

                    b.HasData(
                        new
                        {
                            BillID = new Guid("872f7acf-2847-409e-be6f-1063d870a51a"),
                            FoodComboID = new Guid("0a3ab75f-6b50-493e-a304-0dfe3f016224"),
                            CreatedTime = new DateTime(2024, 12, 18, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7358),
                            Quantity = 1
                        },
                        new
                        {
                            BillID = new Guid("19f54016-d059-450f-8761-83fea9e6c827"),
                            FoodComboID = new Guid("7c91f522-edfa-4069-9081-76084824444f"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7361),
                            Quantity = 2
                        },
                        new
                        {
                            BillID = new Guid("331927d7-7fb6-48da-95cf-fb3d6f5b654c"),
                            FoodComboID = new Guid("0e9c1c39-8637-4396-a090-4532cbbce4cf"),
                            CreatedTime = new DateTime(2024, 12, 19, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7362),
                            Quantity = 3
                        },
                        new
                        {
                            BillID = new Guid("9438b2a5-8ae0-47d7-94b2-da6a6ff2a59e"),
                            FoodComboID = new Guid("0fb34f02-56d5-4a7e-8e08-c34158d55476"),
                            CreatedTime = new DateTime(2024, 12, 18, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7364),
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("872f7acf-2847-409e-be6f-1063d870a51a"),
                            TicketId = new Guid("a948a6bb-c3d0-4997-b35d-6cd66dade47d"),
                            CreatedTime = new DateTime(2024, 12, 19, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7387)
                        },
                        new
                        {
                            BillId = new Guid("19f54016-d059-450f-8761-83fea9e6c827"),
                            TicketId = new Guid("c7ca8129-6197-4e9e-86c8-130d2ce84232"),
                            CreatedTime = new DateTime(2024, 12, 19, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7389)
                        },
                        new
                        {
                            BillId = new Guid("331927d7-7fb6-48da-95cf-fb3d6f5b654c"),
                            TicketId = new Guid("89146321-9b3a-451b-8b9f-98da236f87a2"),
                            CreatedTime = new DateTime(2024, 12, 18, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7391)
                        },
                        new
                        {
                            BillId = new Guid("9438b2a5-8ae0-47d7-94b2-da6a6ff2a59e"),
                            TicketId = new Guid("c7ca8129-6197-4e9e-86c8-130d2ce84232"),
                            CreatedTime = new DateTime(2024, 12, 18, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7392)
                        },
                        new
                        {
                            BillId = new Guid("182779ae-c3dd-4f18-8e6d-47c6dcb6da4d"),
                            TicketId = new Guid("a948a6bb-c3d0-4997-b35d-6cd66dade47d"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7394)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("e919942e-d199-4dec-a084-b7edb5cc0a47"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("78d016e8-4576-451a-8d88-94345f647051"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("3b779821-a75e-45bc-81ed-3bdb3ffe93db"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("86b71153-926d-457c-854d-024271d1e778"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6317),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("266a07c4-085a-4107-bfca-4df360902ff9"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6321),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("ed97653a-37ea-4b28-ac1c-16c2fb3383bf"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("3197d64e-a350-4189-b244-bda8f1f80b9d"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("2001eb05-7135-4600-bef0-5aa5171c0f5c"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("4d62239c-205a-4f2e-b52d-052469eabb72"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("5cdb03a3-af0e-4804-a689-4fce7635819e"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("d47ba4d0-3693-40c9-af3b-493e484d443d"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("28d9eea3-69df-4771-8714-441b412ca624"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("9c919286-061f-4210-9160-1c439792b3c9"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("bd43a266-78a9-44e7-9c15-279c7a20e8ad"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3fa590c7-6f76-4b06-92a5-baf3266c87a2"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5206e0a6-4f71-43c2-9b2d-a383bbc44c6f"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f4356434-eb0d-4e1a-8574-2f4fea9866ae"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9ffc3267-c64f-4e77-8440-9b13a26735dc"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("efbec0c0-18cd-4425-bb61-229d76d3325d"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cab25424-c0b6-425e-83cf-03aa92452625"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("75990cef-426d-4bce-baa8-ba8ccd60b98e"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4a986c28-c44f-49c4-b36f-be2ec5670d6b"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3bd9f07b-cc0c-44cd-a1f9-51bc13ac9e90"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("0a3ab75f-6b50-493e-a304-0dfe3f016224"),
                            Content = "Combo 1",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7248),
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 100000m
                        },
                        new
                        {
                            ID = new Guid("7c91f522-edfa-4069-9081-76084824444f"),
                            Content = "Combo 2",
                            CreatedTime = new DateTime(2024, 12, 19, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7253),
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 150000m
                        },
                        new
                        {
                            ID = new Guid("0e9c1c39-8637-4396-a090-4532cbbce4cf"),
                            Content = "Combo 3",
                            CreatedTime = new DateTime(2024, 12, 18, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7255),
                            Description = "1 bắp bơ + 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 3,
                            TotalPrice = 120000m
                        },
                        new
                        {
                            ID = new Guid("0fb34f02-56d5-4a7e-8e08-c34158d55476"),
                            Content = "Combo 4",
                            CreatedTime = new DateTime(2024, 12, 17, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7257),
                            Description = "2 bắp bơ 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 4,
                            TotalPrice = 200000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("3c06b0d7-9a24-4565-a683-ca27a341d18c"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("218761d0-87a0-4556-b352-269d24b2e50e"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("56558515-b5e3-4a04-82b8-0f3608e9c457"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("870494d0-dc2e-4ce6-a011-a446cc258a16"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("d07332f6-272f-40fb-8517-66e7dd603d13"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("6afd3072-3b79-43e3-abec-9254910f002f"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("9586b863-6fe3-40e7-ba99-93423ea1fb56"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("bb885bfe-4fa9-485e-9093-6254ad52cbac"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("dc3801b1-3ebd-4e55-a6f3-001dbc7e9bb0"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("5e7ffc84-07cd-4546-815c-b567e09883fb"),
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("b53da73b-6fef-4117-adc9-07bc7523066f"),
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("5dd66787-be23-40e6-87de-a6380f7211d3"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("859d14b3-5797-4c72-a15d-8c18b4d8e621"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("abb3dcf4-e4c9-410e-8918-3969c964c58d"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6984),
                            Description = "Một bác sĩ chuyên khoa tim nghi ngờ cái chết của con gái mình sau một cuộc trừ tà, tin rằng trái tim cô bé vẫn đập. Trong đám tang cô bé, anh và một linh mục đã tranh cãi về sự thật, mỗi người đều cố gắng chứng minh lập trường của mình có thể cứu cô bé.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "ngaiquy.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "DEVILS STAY: NGÀI QUỶ",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/4d7xzz0cTVw"
                        },
                        new
                        {
                            ID = new Guid("e8efd407-52bc-4fd9-a17a-03583dc5f9ed"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6993),
                            Description = "5 học sinh nghiên cứu hồ sơ cựu học sinh của một trường học bị chiếm đóng về những trải nghiệm siêu nhiên và các cô gái mất tích. Người hướng dẫn của họ tạo ra những sự kiện kỳ ​​lạ đưa họ đến một cái cây cổ thụ, nơi mà hiệu trưởng vô tình đào được xương.",
                            DirectorID = new Guid("3fa590c7-6f76-4b06-92a5-baf3266c87a2"),
                            Duration = 81,
                            GenreID = new Guid("218761d0-87a0-4556-b352-269d24b2e50e"),
                            Images = "xich.jpg",
                            LenguageID = new Guid("5e7ffc84-07cd-4546-815c-b567e09883fb"),
                            Name = "BLINDING SOULS: XÍCH: TRÓI HỒN YỂM XÁC",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("b0e726df-9faa-4791-90d4-a63a50459afc"),
                            AgeAllowed = 13,
                            CountryID = new Guid("5cdb03a3-af0e-4804-a689-4fce7635819e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6998),
                            Description = "Lấy cảm hứng từ giai thoại nổi tiếng của nhân vật được mệnh danh là thiên hạ đệ nhất chơi ngông, Công Tử Bạc Liêu lấy bối cảnh Nam Kỳ Lục Tỉnh xưa của Việt Nam. Từ con trai của chủ ngân hàng đầu tiên của Việt Nam trở thành \"Công Tử Bạc Liêu\".",
                            DirectorID = new Guid("5206e0a6-4f71-43c2-9b2d-a383bbc44c6f"),
                            Duration = 113,
                            GenreID = new Guid("218761d0-87a0-4556-b352-269d24b2e50e"),
                            Images = "congtubaclieu.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "CÔNG TỬ BẠC LIÊU",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/wqJXnO_TKpY"
                        },
                        new
                        {
                            ID = new Guid("1054fd18-dbe0-48c7-8d5a-287e4063ec7d"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7007),
                            Description = "Một cô gái khiếm thính và một anh giao hàng tìm thấy sự kết nối bất chấp rào cản giao tiếp. Họ sử dụng ẩn dụ về những chú chim nước và cây cối kiên trì để tượng trưng cho việc vượt qua những trở ngại trong chuyện tình cảm và dẫn đến sự gắn bó.",
                            DirectorID = new Guid("f4356434-eb0d-4e1a-8574-2f4fea9866ae"),
                            Duration = 109,
                            GenreID = new Guid("56558515-b5e3-4a04-82b8-0f3608e9c457"),
                            Images = "yeuem.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "HEAR ME: OUR SUMMER: YÊU EM KHÔNG CẦN LỜI NÓI",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/JzY-5ZtVD88"
                        },
                        new
                        {
                            ID = new Guid("c60263d3-d219-4375-8686-1ad9401736c8"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7015),
                            Description = "Trong văn hóa Java, Sengkolo là một thực thể tiêu cực thường ám ảnh con người, mang lại vận rủi và tai họa. Vào đêm đầu tiên của Suro, Sengkolo di chuyển để nhắm vào một số weton là con mồi của mình.",
                            DirectorID = new Guid("9ffc3267-c64f-4e77-8440-9b13a26735dc"),
                            Duration = 99,
                            GenreID = new Guid("870494d0-dc2e-4ce6-a011-a446cc258a16"),
                            Images = "tetamhon.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "SENGKOLO: MALAM SATU SURO",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/-Sux3ihKodI?si=bbzqRn3w7kxqDaEi"
                        },
                        new
                        {
                            ID = new Guid("cfde067c-f50f-419a-ae6b-2c3541c03254"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7021),
                            Description = "Phần hậu truyện của Nhím Sonic 1 và 2, đồng thời cũng là phần phim liên kết với Knuckles (2024).",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 100,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "SONIC.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "SONIC THE HEDGEHOG: NHÍM SONIC 3",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/2gFjV9v7QVE"
                        },
                        new
                        {
                            ID = new Guid("6a0fc096-7eff-409d-9db7-6014807a734f"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7028),
                            Description = "Bộ tứ báo thủ bao gồm Chét-Xi-Cà, Dì Bốn, Cậu Mười Một, Con Kiều chính thức xuất hiện cùng với phi vụ báo thế kỉ. Nghe nói kế hoạch tiếp theo là ở Đà Lạt, liệu bốn báo thủ sẽ quậy Tết tung nóc cỡ nào?",
                            DirectorID = new Guid("3fa590c7-6f76-4b06-92a5-baf3266c87a2"),
                            Duration = 120,
                            GenreID = new Guid("3c06b0d7-9a24-4565-a683-ca27a341d18c"),
                            Images = "botubaothu.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "BỘ TỨ BÁO THỦ",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/2k0jK_sWmwE"
                        },
                        new
                        {
                            ID = new Guid("451a6609-1152-461d-83e3-f98c91109d83"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7033),
                            Description = "Lần đầu tiên nhìn thấy cô gái yêu nhạc rock xinh đẹp Jinny, cậu bé Song đã yêu. Chú Pong – một cựu Rocker giúp Song lập ban nhạc Bad Boyz Band để Song có thể mời Jinny tham gia. Tuy nhiên Jenny lại lọt vào mắt nhà sản xuất âm nhạc tên Arm.",
                            DirectorID = new Guid("5206e0a6-4f71-43c2-9b2d-a383bbc44c6f"),
                            Duration = 110,
                            GenreID = new Guid("218761d0-87a0-4556-b352-269d24b2e50e"),
                            Images = "tretraukhongduaduocdau.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "BAD BOYZ BAND: TRẺ TRÂU KHÔNG ĐÙA ĐƯỢC ĐÂU",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/GKqrTQGHE3s"
                        },
                        new
                        {
                            ID = new Guid("f94dce99-a897-4b22-a8c2-c275b3e281dd"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7039),
                            Description = "Đây là một bộ phim hài về gia đình. Phim kể câu chuyện về một người đàn ông là sinh viên y khoa ưu tú quyết định trở thành một linh mục.",
                            DirectorID = new Guid("f4356434-eb0d-4e1a-8574-2f4fea9866ae"),
                            Duration = 110,
                            GenreID = new Guid("56558515-b5e3-4a04-82b8-0f3608e9c457"),
                            Images = "chuyennhabanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "ABOUT FAMILY: CHUYỆN NHÀ BÁNH XẾP",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/X3SY9XUlQAA"
                        },
                        new
                        {
                            ID = new Guid("463d9004-d3ad-4fc9-bc99-4543317a70e2"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7046),
                            Description = "Nakrob, một kẻ lừa đảo bất động sản trẻ tuổi, phát hiện ra một khách sạn trên sườn đồi bị bỏ hoang gần bãi biển. Nhìn thấy cơ hội, anh ta quyết định biến nó thành một vụ lừa đảo khách sạn sang trọng.",
                            DirectorID = new Guid("9ffc3267-c64f-4e77-8440-9b13a26735dc"),
                            Duration = 100,
                            GenreID = new Guid("870494d0-dc2e-4ce6-a011-a446cc258a16"),
                            Images = "chayngaydi.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "404 RUN RUN: CHẠY NGAY ĐI",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/jS6TZkBB0lY"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("5b2d714a-cee6-4945-acb7-38aceac6c786"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6445ced7-cdca-4766-93c8-1eb3d646ed81"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("568fbd71-e0e3-475a-8249-b387fc4d4383"),
                            DateEarned = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7428),
                            TotalPoint = 50,
                            UserID = new Guid("665611d8-792d-44b0-9595-404ee3481383")
                        },
                        new
                        {
                            ID = new Guid("bf71be9c-8a86-4231-ab94-fe3ff0053ebd"),
                            DateEarned = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7431),
                            TotalPoint = 150,
                            UserID = new Guid("2e6728ca-cffd-452e-8feb-af2aac53a90f")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountMax")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("18777456-fa8e-4e5f-9f0d-4fac6660d4ce"),
                            MinPoint = 100.0,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7413),
                            Status = 1,
                            UserID = new Guid("665611d8-792d-44b0-9595-404ee3481383")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5363),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5379),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5382),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6346),
                            Name = "Room 1",
                            RowNumber = 12,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6352),
                            Name = "Room 2",
                            RowNumber = 12,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Show_releaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_releaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("9d68c6a6-cbb3-443e-ae22-069411e426ed"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7106),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 30, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7104),
                            ShowTimeID = new Guid("8c4b21da-92b7-48bc-aea5-fbf7a80d773b"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3b5e272c-7044-44de-8957-07daba65cdf8"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7111),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 29, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7109),
                            ShowTimeID = new Guid("30e5de4c-ebef-4a67-b7ed-913b7d39595a"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("464e72b6-4c28-4ad0-8cb1-1c5a7aacb29d"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7116),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 28, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7112),
                            ShowTimeID = new Guid("7c531546-aca9-4cc5-8093-2117c401ee52"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d44d42b0-b5de-4d2d-99ae-257f6b6596cb"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7119),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 27, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7118),
                            ShowTimeID = new Guid("2d20440e-295b-4a77-b2f9-12d4dc9de95d"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d696b65f-7554-440c-b86f-2c0d7d43d64f"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7122),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 26, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7121),
                            ShowTimeID = new Guid("39c987d7-985d-4f42-94e6-0b0631004b8b"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c2a8665c-a5b0-4485-9606-5688c0139f83"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7125),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 25, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7124),
                            ShowTimeID = new Guid("f4c99958-4965-4164-9fd4-3e46f2c7ef67"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2914a021-90e1-4a50-a28e-6404da60a732"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7134),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 24, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7133),
                            ShowTimeID = new Guid("ce540010-7cd4-44a6-99ea-0f4f70f017c1"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1d8bd015-a90b-49ed-a5c2-f9f6aac44152"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("021c55da-a8be-42f0-801f-8d6987753e76"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1c20b10c-5ba2-49f9-830b-24a6d5c841e4"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f5340148-e01d-48d6-b7d2-a184091ed3c4"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("84bdf707-b543-4a82-ad71-ad73239ec226"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b9053dd4-f315-4081-8d9d-970800f709ee"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d00e928c-6f31-4b33-810f-8ce08c0159f1"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c58b1014-8ee9-49d8-b687-b2f0e28f9f4c"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f7460fd-185d-41ab-ab26-cf925b4fabb4"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("304a8ea1-baad-4010-8372-12d7490b87b6"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c7fa03ee-50ae-48cc-aa7b-bf33d1ce29c0"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("50939927-d75e-46f3-8f7d-58ecb8c93215"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("89a9fce9-c165-41c9-ae5c-6ce78c1810a9"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f050800a-0036-49a8-a0bb-640afde68cfe"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ae726f9b-5140-4812-b224-8d3e9dcf3fdc"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95f35a0a-018e-4158-a358-e33e5c8013c5"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("971f482f-5949-40b7-83ec-1e3b65d88036"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("63c21a15-958c-463f-8da2-4c00c66d6228"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("31e0c6b7-6e05-4db9-a906-6973d1511d06"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ce9adee3-a8c0-4f04-8a6c-4030bb4ef03c"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("125b4bbf-80d5-4b63-b8e4-6245285d1b2a"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a004e644-f0d2-4276-a611-8c2f9617c7ac"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fb44d3a8-76e6-4129-820e-2c1cb9bf7ba4"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d89efd1b-c4b0-43b4-8f33-485c3e53c8e2"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e43f01c0-1d0f-4abf-b2fe-d8fb58d2be9b"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3f554bbc-26f9-4aa5-a016-649e7ee96441"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9797b62f-c9a8-404d-9aed-d4bb22e1b0ac"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("65a27e30-d4e1-4a64-b49e-043df0c3bc8a"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1f3bfa04-723b-414e-bf76-e54709418880"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2db3ed7c-3866-40cb-ab96-68bae3d4be1a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("16223b38-6978-449e-8839-19a60830ddea"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("644b278b-d0e9-4701-9c17-154bcad574d5"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1490e771-a567-4ca3-84be-9ffb592d1bb9"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ece9695a-0fed-4d55-99c2-f3d0661511f2"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e1deb6b0-d382-45ed-8f1a-aa94e97f5942"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fe633c65-79b9-48aa-9c74-74543b91cc1e"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("82e96c03-f75e-4d22-bbc3-1bde3a02ee01"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a253236b-42ee-409f-a9bc-1f1a446f9c93"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fdb7ec51-cd30-407f-aef6-e3e5aa8c3bb4"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0bfdd849-6af6-45c1-923b-d2cfc505b6b5"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c712eea5-1bee-4648-887a-6f87aa2c0679"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d9ad0abf-9859-4d19-8cb0-30aee0569ade"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3c00b890-0c16-477a-891f-1474b4a26d45"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("31f756eb-18da-4983-a4ea-187c9175ccb6"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e18b634a-6e08-423c-8e7c-cbb5e9cf43ff"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d85edbf7-f2bf-4ef0-9d9f-5c0e36594f02"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cf11ae14-9ed4-4b02-a7d9-690a4aa024a4"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4ba2d8f3-1f68-44d2-ba8a-2ce51c4f8876"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c781089-e74e-4062-a873-55af7e4f2184"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d8c1d561-ed48-4d8b-b103-563e5396340b"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fe08ea6c-d9bf-4968-b47b-9d741427742e"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c10c654-3700-4d9b-81d2-cba8ad518ec4"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6110b5e5-95f8-4455-aa8a-6e237728fee8"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a762b97d-c642-46d2-9cc2-656ad217c8c5"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("30aff201-b8a7-402e-9410-37059b5af27f"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3fe7be7b-97fd-41f8-b51a-e923b6948ab3"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2249d8ad-b98d-4101-a590-abd7fffe3a2d"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6bbc619e-03c2-4470-99b0-9ff310423799"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f9ec2770-b07f-4091-8d7b-c201ef257722"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e49f0208-419d-472a-9255-a21675315d47"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bbb4f2cd-6dd0-43e7-9ebd-19cb39608c01"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("19c7ff4b-247b-4a58-8e0c-b7c00970e0a0"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fc45747a-3500-43a7-941a-cdbca36bf53b"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("58103fe0-bdc8-4f20-90b8-ccd9a6f4d66c"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c8b5c1de-3296-4dc0-a2de-7c2591aff347"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("14754d4b-b01a-4f82-bc43-930b0ea0cc78"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d3162ff5-3964-47f3-a7c4-16b8817cbad5"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5d2d1e94-9f83-44d9-9be9-16d84444c7e7"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1c262613-dc94-494d-b432-e98eff3efe7e"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("43cbb0a6-70ff-4e42-bd58-325a293c12fa"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cdf8f387-f5b9-4138-a1af-87fdf11579ce"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("11a94732-c5b2-4dc9-a18c-0b7b1a344583"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b8d0e293-4483-419e-be74-e31c521b9d8e"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b62a8ef4-5f46-44a3-b01e-23835a404bd1"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c850db16-29d8-44d5-90e5-6e10af29f9fb"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e8d6e3b9-2e35-48dc-906d-c01e266d47f7"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eaf43ce1-de93-416f-9cc7-1f3a8ba5f8eb"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5e86bd50-b954-418e-b779-458fbc01b240"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7033627f-ae6b-41cc-bac7-8715478650fe"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f74ec7c5-8fa6-4d22-99f3-81a62ca1c80c"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b54f5ace-5119-47a5-a631-d9882011424f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5773f349-a735-4136-b395-4ec3850b4dac"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dbd15d44-59e5-4d25-9e33-d996fb514bed"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c52ce40f-60c2-4340-8010-8f99defb2be8"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("32cad2a4-bc06-420a-b7a2-cf5c328090ee"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6626584f-f962-409f-8849-62406751e234"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("60633f69-a3c1-4a8f-beef-363cceb27454"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ada29c39-7de2-4274-8246-08f7185146bc"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8f97de22-3077-48be-9333-b98b2027dc36"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("762f9d0b-9d6f-4bbb-992f-332a69fa9970"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("21788357-bc6e-4014-8bcf-851b3add144a"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2ae9c763-7c53-4572-bc4b-1c45e225f732"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7d951923-cb15-49ef-bcc2-fd65f7666b54"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("059af141-91fd-4c2b-a436-a81d1f83b5e3"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c1e9850c-db58-4493-a458-980b0e7bbdbc"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("77540e0e-9639-4bd6-9a75-c82a9094bb01"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6ec61ee8-c4d9-49b1-a838-f342529d11fe"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("05abd391-a7a5-4ad3-8f85-1163b49c77b9"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("488af5c3-c84d-4c77-8fa0-37660096fee6"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4ff3e74c-3c6b-4438-8932-23ea3019eab6"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("33e38c7b-3613-4cd7-96e5-e03833d8fa1d"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4983c34c-f755-462e-8a2a-f1261b21e4bd"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("befbe883-562d-4da8-b01a-8816d101a11f"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("838ed820-638e-46a9-89bf-2a7c17a54169"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5175351a-c578-4a8d-a9f2-e22b61e1e68e"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("191c40d4-2459-4476-9352-74d97c376c9e"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0e678362-3959-4647-854c-a0202cf5e3c0"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("16bde20d-6b9a-47e0-b7ae-3d8fd24fd96a"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d7590e91-5d07-4f85-ad34-f36815abdc4b"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("05cb27bc-7ab6-474f-9e19-c34e73493ce2"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bc0138ed-5b55-4ad5-8078-d264ab8fc14b"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e26be36b-6728-4526-bec7-4a85719e3e26"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7f64d3fa-419d-4fba-bb94-db3be49e72bc"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c9931681-247e-490a-851b-e300f6787f26"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("555ef1ac-b079-4f56-8447-e90597127093"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("34bbc71d-f7f1-4f74-8bbe-a56f911a9aa7"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8fc9b9aa-6f49-4bca-97cb-fedf1f4dde90"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("05694c42-646d-49e3-9028-a9f729fc2188"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d44ce049-6584-4e1e-b6f2-e3d1c7276947"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2ee83260-3870-4f19-a7b5-794bec32a17b"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4ff708e2-0648-4912-95c3-d0ee26cf725e"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3db65096-7a33-4833-ad08-f6465f781e08"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ea7c3576-611d-41a8-a107-c10e870bafe8"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a1708361-33ee-494f-b939-f5d0ec5c6f97"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("04733ce5-e272-49c4-9b58-884ef25abc05"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9158fc56-4775-4e23-90b4-9fc6eae8ecbb"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b7088e35-90f4-43a6-ad1a-50a656681591"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5091a36e-90ec-459f-bf72-81fd18d6659e"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("539a1c87-9aab-40b4-8582-200413c1f45d"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("83fa106b-6162-4578-a6e1-0416e1d1198f"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("872c000f-c267-4586-90a5-7967cfae2bdf"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("141fcd5a-bba0-4ed4-b053-c4020213cbd3"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cdf0574e-0e96-4c43-9fb1-99a917e546f5"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cf080fac-bfe9-4bdc-9001-26ec7ba31c09"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("20846dbb-99bd-47bc-89a6-ee08e7ef11c7"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("96098bc0-39ab-4052-95ff-d16799143696"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6abc4955-083e-4bd2-9394-56bba809a096"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2288fa2f-f46f-42e1-b730-89f38ca6fe48"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0434786c-91ed-4df0-9b0c-37b90340066f"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b5101ec4-e65f-411e-91c8-c3eef7ca30e1"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("efbc8543-c8f7-49d6-9f7e-112429aa4afc"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("06ff42bb-4bb2-45af-976a-d8dc8b3c6562"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e4566cbb-acfd-4958-9d3b-2794276dc82e"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5c0550ff-7391-4e7a-9f5f-525a6a693c95"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7920cf22-691b-4d0c-82b7-39c0f96a9220"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cc947724-cde5-474d-8417-845c60b2049b"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7cf3753c-cb4c-4449-8c4d-2f12a5cdc94e"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("891c05f3-57de-46a3-bb1b-5d1ede2c6dd0"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("24aaebb8-a074-4534-add2-b49adb738bf0"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e04b40f3-6e60-4c4a-94f3-93150294e697"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ef9b7738-d70a-4239-9475-854cf39d871c"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6d95e142-95ab-4274-82e2-b361dffdad2d"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("60f35c7a-4d66-4a35-87e0-599c8866ca12"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("924491ed-9a04-4e0d-a5f0-659610c036cb"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d5abde5a-c9ba-4fbe-a187-7a7d24bd9380"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6785b35f-5043-40be-a410-031f70a5cd45"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5df355fe-a1a7-4972-827f-573989dfbbe1"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fca79a62-5090-4c6c-8764-6c81bad703b3"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c98c2101-b365-4213-9210-e43d2366091b"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c43673fc-8dc8-41e9-b4f7-5fb9c9054022"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("702cb288-9a27-492b-b1d9-8d3f6f116ada"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("99c99765-ee06-49a7-bf50-ce0b0086fa72"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("62975242-2768-49e6-9727-1b91ce6de9bb"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("86eb8a38-3632-4367-9844-f4132067655b"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7a704719-7dc7-4760-8791-2e4a06b20731"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0a3af5c1-0476-4b21-8cf0-8a479947250e"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1aac8648-9fc4-4f95-85ed-b52311eb3a6d"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("25ee88ab-0fdb-4279-a8c3-9952ad0dc30b"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("19a2a1f0-5914-4712-8d89-9b74ca712781"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a4a3a4f8-6d96-43bf-80d7-23991fa7f4ae"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fc074f55-5f9a-475b-9e10-a30581bc9c27"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e3034088-651d-4391-8dbf-55be157079e2"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d9704251-185e-449a-9313-bd14e27f7c0a"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ea0c01d4-206a-4424-87d9-65fefb83b53d"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1b33fa97-fac5-42c8-9376-7abe12f0ea68"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("64e17d84-6a5c-4540-9bd5-4b02c9668386"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3e870991-cec8-47a5-a517-a11050b9a80f"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d400b6ef-df2e-49fa-9de3-7103d458fe25"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1b7488d5-649a-4971-a4fd-7293bb26d385"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("02ce3c6e-1b08-447f-8fbb-7a008e5a67b4"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("51523e9e-1113-4f59-8753-c5195a241a1a"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2ed76056-7ce0-4ec2-a4c3-94aba18819a2"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b8176406-8548-4499-aec4-29d9359c7697"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e70e1e7b-7a99-4a5a-8201-5ad7e99169ae"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f8d2e82e-c6d9-4d24-8ac9-0ffa54e4640c"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("31cd3a93-b846-4f5c-98fc-03d3a46cb0b2"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("60b9788f-57f6-4d9c-9812-d13c391f1582"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("71f4ed98-10a2-4216-9459-fabf2bdf3acc"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1b2b6d2d-d157-4735-b94c-f8bc67ac1927"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("292d7488-6bfe-4235-ac1d-73454584811c"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ae549346-b2bc-4dc7-bc24-1ce3c0e94490"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a5a2f4b2-006a-4ea6-bc6e-6c2486a8c30c"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("21bd4e7a-0dd3-4277-90b8-b4067454b671"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a02ab03e-01e3-4fbe-89e1-54acf702be58"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f9848305-1976-4939-a806-5c57491715ac"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aeab05f8-41c6-4629-a06a-c9831b96f123"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("55afbb0e-85ca-499f-b145-77b57b3a4522"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("79b3a1be-a406-47fe-ab8b-39196fa78918"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dc0c8f6d-3627-4f49-a9f1-9aeac33d3ef8"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("10f11eb9-f3b2-45cd-b28c-e5593070c245"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("36d02e58-635b-492c-904a-9673af0ae386"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("70d0907f-4fc8-43fd-b24a-4c29290da745"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d4ef5724-c9fc-453f-b2fb-f880b4224aaa"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("580c8a50-290b-4d3a-b13e-32e63dd32da8"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("52c88f65-e8ae-4b8b-8902-c78918618dba"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4894116c-ed72-4ae3-9953-70fa46b3e9be"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("76561104-03f9-4384-951f-c118704f5f99"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fd8965f2-1216-4806-843a-cb6d70f70cdd"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d8f5b335-0210-45a3-8ef2-8d41a4a793fd"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("30e1b232-c214-44e2-8920-763d12f49bc7"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fe34b139-b1e3-4bad-bf1e-e53f56f78ae8"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03102bcc-780a-4f27-8674-a339f85ef01d"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7fdf5538-6660-4bda-8033-7b42649447ab"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("238f74a8-e87c-4be2-bf32-f1225194cc71"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("51b542f9-cb16-40ee-801d-98d3e21e64b9"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a6ce8491-5e89-44a4-b290-c16cef737d33"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bda81bdb-30f9-4dbb-b15e-74abebcea2f6"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1af7a536-80cd-4160-a2d0-09e59a256d11"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0817521d-aeec-484e-afa7-ee2072d8c800"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e2aa7db1-2e48-4bdc-a840-84fbee83fbc0"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("980de14b-da3a-469d-a817-5a1daf67c847"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1d963c8a-cc8f-4e80-adcd-30835fcb9eb1"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c6107042-07c0-404d-b84c-e821a7696f28"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2fd3766a-dfb8-40ec-bff7-ed3b655538c4"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0f1e35aa-07f4-46a0-9dc3-4c85c2072c7b"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a81561a9-ef9f-416f-899a-dc43913f03ee"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("24cb10eb-b7f5-4d85-8623-90162438170a"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5a19cc14-8c0a-41b9-9ec4-3a07cf36a7fa"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2b43bf1d-2f70-4bc7-980d-fb4e505863df"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b062c19a-3798-44b0-a008-436d87fc1f3e"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3978dbb0-506c-4119-82cd-34b7ca09aee0"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("421ea1e5-0914-43d0-b730-e3876601c6b7"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b54bc7ee-70f3-471e-9f01-ddf09a6b4e72"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("497457a5-ccd3-4792-9c15-b50964a54281"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("caab21b7-e317-4b85-b64b-0df0eb8d9e09"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b84d7e60-4b95-4873-a701-bc2a77590cef"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d021547c-827c-4d46-a3de-2ebc691e35b3"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("92bcfd1d-08c6-4947-83f7-aedf7e0dbbcc"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c30ad71a-5974-468d-85c6-61a02709e7ad"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9cb30bfa-26a4-4c64-8eef-b12c858a1589"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b4213b61-2bda-4a67-b2c2-101c7580699c"),
                            Column = "A",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("76d21304-d251-4154-acd0-eed84bf0c185"),
                            Column = "B",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("62b01a63-afb4-4a96-9ad2-99744446ea94"),
                            Column = "C",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("24d119b0-c064-41bb-b60d-ca037d38141d"),
                            Column = "D",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ffaae7b1-2a2a-4091-8df4-fde38178b0a3"),
                            Column = "E",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ab3f9427-b4f5-4a90-b53e-5cc4c6de1bd7"),
                            Column = "F",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f30612e6-729b-4470-b3cf-904ee354b60c"),
                            Column = "G",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8aea8610-fa7f-43ac-a145-163b2c963f69"),
                            Column = "H",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a2301df6-135b-4fb0-8b14-2598db660198"),
                            Column = "I",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ddd82bd3-b52e-4d2c-b7f7-64b93e2aa21a"),
                            Column = "J",
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("seatEnum")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ShowtimeId");

                    b.ToTable("SeatShowTimeStatuss");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6294),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("0bcc6f4b-ed7e-4236-a689-d808ec43fb49"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6297),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("1f786c88-eed1-42a3-8675-2b3c08c8d90f"),
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6299),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("8c4b21da-92b7-48bc-aea5-fbf7a80d773b"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("30e5de4c-ebef-4a67-b7ed-913b7d39595a"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7c531546-aca9-4cc5-8093-2117c401ee52"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d20440e-295b-4a77-b2f9-12d4dc9de95d"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("39c987d7-985d-4f42-94e6-0b0631004b8b"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f4c99958-4965-4164-9fd4-3e46f2c7ef67"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ce540010-7cd4-44a6-99ea-0f4f70f017c1"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7edf38ac-debe-4586-8778-cedc18c773af"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("54205f76-545d-4f74-925b-2d1b4eded27e"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("85f67169-0304-4d5d-b6f6-ef92ee571450"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("eaa83ddf-53ce-410b-85ce-ce41ce0654a5"),
                            DateRelease = new DateTime(2024, 12, 21, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7075),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 20, 21, 39, 35, 667, DateTimeKind.Local).AddTicks(7068)
                        },
                        new
                        {
                            ID = new Guid("b82135b6-bd9c-49d9-8f0f-c8b4ac8c2075"),
                            DateRelease = new DateTime(2024, 12, 22, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7083),
                            MovieID = new Guid("e8efd407-52bc-4fd9-a17a-03583dc5f9ed"),
                            RoomID = new Guid("6887c045-3c4e-41c7-be25-0f453ad7dca1"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 20, 21, 40, 35, 667, DateTimeKind.Local).AddTicks(7082)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a948a6bb-c3d0-4997-b35d-6cd66dade47d"),
                            MovieID = new Guid("0676b1cb-d0e3-494f-9b39-b82aadd44aaa"),
                            Price = 100000m,
                            ScreningID = new Guid("9d68c6a6-cbb3-443e-ae22-069411e426ed"),
                            SeatID = new Guid("1d8bd015-a90b-49ed-a5c2-f9f6aac44152"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c7ca8129-6197-4e9e-86c8-130d2ce84232"),
                            MovieID = new Guid("e8efd407-52bc-4fd9-a17a-03583dc5f9ed"),
                            Price = 2100000m,
                            ScreningID = new Guid("3b5e272c-7044-44de-8957-07daba65cdf8"),
                            SeatID = new Guid("021c55da-a8be-42f0-801f-8d6987753e76"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("89146321-9b3a-451b-8b9f-98da236f87a2"),
                            MovieID = new Guid("b0e726df-9faa-4791-90d4-a63a50459afc"),
                            Price = 3100000m,
                            ScreningID = new Guid("464e72b6-4c28-4ad0-8cb1-1c5a7aacb29d"),
                            SeatID = new Guid("1c20b10c-5ba2-49f9-830b-24a6d5c841e4"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("78d016e8-4576-451a-8d88-94345f647051"),
                            Price = 50000m,
                            ScreeningID = new Guid("9d68c6a6-cbb3-443e-ae22-069411e426ed"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("8c4b21da-92b7-48bc-aea5-fbf7a80d773b"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("86b71153-926d-457c-854d-024271d1e778"),
                            Price = 60000m,
                            ScreeningID = new Guid("3b5e272c-7044-44de-8957-07daba65cdf8"),
                            SeatTypeID = new Guid("0bcc6f4b-ed7e-4236-a689-d808ec43fb49"),
                            ShowTimeID = new Guid("30e5de4c-ebef-4a67-b7ed-913b7d39595a"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge3D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge4D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60000m,
                            PriceAfter17hWeekeend = 70000m,
                            PriceBefore17hWeekDay = 50000m,
                            PriceBefore17hWeekeend = 60000m,
                            Surcharge3D = 30000m,
                            Surcharge4D = 40000m,
                            SurchargeCouple = 50000m,
                            SurchargeIMAX = 50000m,
                            SurchargeVIP = 30000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("665611d8-792d-44b0-9595-404ee3481383"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5480),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2e6728ca-cffd-452e-8feb-af2aac53a90f"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5847),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0fd11f3a-9d54-4d7f-ba60-2ee18434fb57"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5870),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("561a5629-e969-4518-9b62-980df83f9a62"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5891),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("002876d8-d8b6-473a-abe1-86a32cac8d2b"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5909),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b13db532-2e8c-43f8-bc1f-4826a97df998"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5937),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2457d50c-57da-4cce-8a21-4af939d8db3c"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5956),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("75eedd3b-3071-40c2-8bd8-6246934a7e70"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(5987),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("343ee4b9-2e7b-4bfa-93f7-fe31c9022bfc"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6005),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("234413e2-3658-4d97-ba9b-e869c411b31a"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6025),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("55c46c4d-a88d-41f5-84f3-8caa0cb92a8d"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6042),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("118fee57-1e97-4b45-9b86-14d59b2e8ed5"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(6098),
                            DateOrBriht = new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "giaphipp@gmail.com",
                            FullName = "Phùng Tiến Giáp",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "LK25tQh1RqkKbrq4C2l6fw==",
                            PhoneNumber = "0862774830",
                            RoleID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("00450e07-df6d-447c-8c5d-dfd248174f8e"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 12, 20, 23, 38, 35, 667, DateTimeKind.Local).AddTicks(7450),
                            TimeStar = new DateTime(2024, 12, 20, 19, 38, 35, 667, DateTimeKind.Local).AddTicks(7449),
                            UserID = new Guid("665611d8-792d-44b0-9595-404ee3481383"),
                            WorkDate = new DateTime(2024, 12, 20, 21, 38, 35, 667, DateTimeKind.Local).AddTicks(7449)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", null)
                        .WithMany("Screenings")
                        .HasForeignKey("Show_releaseID");

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("ShowtimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Seat");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
