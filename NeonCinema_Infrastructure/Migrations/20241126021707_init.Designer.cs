// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20241126021707_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("7da7748e-d62c-45b9-8b5b-501de02b3ea8"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5610),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("42a6eb44-3f2f-4a2e-8e23-d34439e768bc")
                        },
                        new
                        {
                            ID = new Guid("86e39416-8457-48d2-9572-6d666f83d540"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5616),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("79c36a65-1f8d-4c1f-a343-604ff5b3dc2f")
                        },
                        new
                        {
                            ID = new Guid("bfa2fa66-fa82-419a-b6b7-1eaf743db0a5"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 11, 26, 8, 47, 6, 833, DateTimeKind.Local).AddTicks(5624),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("5c0ef7b5-1ee8-4332-86c3-cdb0e30e4ecb")
                        },
                        new
                        {
                            ID = new Guid("7a4ccfa2-6421-4a48-a83f-e0107f33d141"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 11, 26, 8, 32, 6, 833, DateTimeKind.Local).AddTicks(5626),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("c5e3a059-884c-4e56-ba28-2315e4bb9c0d")
                        },
                        new
                        {
                            ID = new Guid("86154b16-1a92-48d7-b324-31f8c9660067"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 11, 26, 8, 17, 6, 833, DateTimeKind.Local).AddTicks(5629),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("bf7c6159-0370-41f6-89bd-3a6f0a7ea7da")
                        },
                        new
                        {
                            ID = new Guid("d7ed166c-9591-4859-83b3-814b945815e5"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 11, 26, 7, 47, 6, 833, DateTimeKind.Local).AddTicks(5632),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("ad2b2f2c-f101-443c-8417-53ad43327bbc")
                        },
                        new
                        {
                            ID = new Guid("4ac183a3-07f0-41e7-a8eb-39ecba595323"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5635),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("ad2b2f2c-f101-443c-8417-53ad43327bbc")
                        },
                        new
                        {
                            ID = new Guid("896952f4-4789-458c-ae95-a90dc39631d2"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 11, 26, 7, 17, 6, 833, DateTimeKind.Local).AddTicks(5637),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("74495c18-beee-4150-a20b-d663a6973304")
                        },
                        new
                        {
                            ID = new Guid("2779796a-29c7-4c81-b7ca-a394d2291715"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 11, 26, 6, 47, 6, 833, DateTimeKind.Local).AddTicks(5639),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("b06222c4-f043-4cf7-a112-6485470a7226")
                        },
                        new
                        {
                            ID = new Guid("3544fc7d-eb4f-48b5-83c7-160e7e96960b"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 11, 26, 6, 17, 6, 833, DateTimeKind.Local).AddTicks(5644),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("16ce2b28-f372-4837-b996-ab172c713fdb")
                        },
                        new
                        {
                            ID = new Guid("a4a93a7a-6edd-4926-a990-a2345ce94a81"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 11, 26, 5, 57, 6, 833, DateTimeKind.Local).AddTicks(5648),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("6d90c9e2-7a86-450d-9ecc-65fe7800174e")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("7da7748e-d62c-45b9-8b5b-501de02b3ea8"),
                            TicketId = new Guid("52e4ff2b-8c6e-444b-bb59-ea69b10d2ec4")
                        },
                        new
                        {
                            BillId = new Guid("86e39416-8457-48d2-9572-6d666f83d540"),
                            TicketId = new Guid("186d361e-d7d2-41bf-ae7d-64947dcae261")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("0553f8c2-932e-4bed-88a2-54d54c2f495a"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("303639bc-f9b0-4680-bff7-6f20c7723705"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("0d7b0cd9-1b7c-4440-bf6c-a1928bfb08c1"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("5c42b476-6a1f-4e9e-9008-f3543867a819"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4585),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("a96f5d8c-f3d7-4121-903d-88d76d306949"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4589),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("39ef0d87-6c12-4bce-a4c8-b3abdcf8b3b5"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("c16544da-8c56-4b69-afee-29b750697306"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("7be7bb32-72a1-42f2-ab62-a71859d84ab3"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("d44ecf78-0e45-4371-9f59-9324f77abefc"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("d13e491b-adcc-44de-8d77-c3facaeabc64"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("d433e37d-1b5b-4a2e-af25-667b020d24aa"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("2d3c61ca-eb48-4cea-90c9-421a4d5f623d"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("57b3323e-a648-4722-81b3-fdc0b5a0164e"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("56ee9420-544a-4958-8c7b-a258f13a0fff"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03253950-83de-441b-a604-9835a92edd0f"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7b45bce0-3380-4799-9916-06dabebe8690"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("87c95c7c-e324-47a4-a0e5-9f39f7ee0cb1"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1f802416-a02b-4c37-8e28-99f70a58dc21"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4e520403-6d3f-4de7-be4d-39265ff5d9c0"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9b9abca6-e046-483b-abdc-d73007738a79"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c8e1421a-174b-4a49-b978-3450e9e1f7b5"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2931935c-8e88-4f38-8d15-972665074f2f"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("80ba9ea6-dc3b-4cf6-8b1c-07943c188d70"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("f12fd76c-4aa0-40fc-9068-b7dfac763e9d"),
                            Content = "Combo 1",
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 20000m
                        },
                        new
                        {
                            ID = new Guid("57dd6c97-df7a-4d00-afbd-d62702d1ebe7"),
                            Content = "Combo 2",
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 220000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("9cd90fd8-709d-4009-a80e-6da734854248"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("faa178af-49c9-4bab-8670-b4cde03209a2"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("9751e419-d686-4ffc-ad87-14449310772d"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("c130de70-00a8-4f5f-9840-7c0b0f9a0f7d"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("cba709d0-3256-4151-8253-f28063aca957"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("de65a019-e9f2-458b-b484-4c35efe80724"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("fd7cf549-d902-49fd-9f37-6cbc05db3f92"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("369bd13a-c532-4d0c-b258-9ba64954e39d"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("24694a28-532b-4ba1-89c4-f365e56ad0e4"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "en"
                        },
                        new
                        {
                            ID = new Guid("b7c87c90-6a37-403e-bf6f-76fa499944d2"),
                            LanguageName = "vi"
                        },
                        new
                        {
                            ID = new Guid("964ad539-9bef-4657-94f0-81e2f8c58f1b"),
                            LanguageName = "ja"
                        },
                        new
                        {
                            ID = new Guid("2de027e6-6477-471d-8d50-461f20ce09cc"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("e5efe4a6-c3e1-4038-ba9f-e3c039224647"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("25a6eb31-d097-4b6b-9a90-c5a857916662"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("c6d4353e-8ede-4999-8229-f7821fb4f02a"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5264),
                            Description = "Hành trình cảm động về tình cha con giữa Sài Gòn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "bogia2.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Bố Già 2",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=bogia2-trailer"
                        },
                        new
                        {
                            ID = new Guid("b80eaa86-a702-41f2-af67-cfc3554fdfc1"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5275),
                            Description = "Những mâu thuẫn căng thẳng giữa các băng nhóm trong thế giới ngầm.",
                            DirectorID = new Guid("03253950-83de-441b-a604-9835a92edd0f"),
                            Duration = 120,
                            GenreID = new Guid("9cd90fd8-709d-4009-a80e-6da734854248"),
                            Images = "chimuoiba.png",
                            LenguageID = new Guid("b7c87c90-6a37-403e-bf6f-76fa499944d2"),
                            Name = "Chị Mười Ba: Cuộc Chiến Nhân Tình",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("e5a70c6d-1fa6-42c1-ae06-f15c73583d51"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5282),
                            Description = "Cuộc sống đầy biến động của một gia đình truyền thống Việt.",
                            DirectorID = new Guid("7b45bce0-3380-4799-9916-06dabebe8690"),
                            Duration = 110,
                            GenreID = new Guid("faa178af-49c9-4bab-8670-b4cde03209a2"),
                            Images = "nhabanu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Nhà Bà Nữ",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=nhabanu-trailer"
                        },
                        new
                        {
                            ID = new Guid("eeb1bae9-075d-473c-a1c1-89c8ad95dd20"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5289),
                            Description = "Cuộc sống sang chảnh và những bí mật động trời của giới thượng lưu.",
                            DirectorID = new Guid("87c95c7c-e324-47a4-a0e5-9f39f7ee0cb1"),
                            Duration = 140,
                            GenreID = new Guid("9751e419-d686-4ffc-ad87-14449310772d"),
                            Images = "gaigialamchieu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Gái Già Lắm Chiêu 6",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=gaigialamchieu-trailer"
                        },
                        new
                        {
                            ID = new Guid("8f947c19-187d-48d9-8b21-7f2cfcccb239"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5297),
                            Description = "Bữa tiệc đầy những bí mật được phơi bày qua trò chơi mạo hiểm.",
                            DirectorID = new Guid("1f802416-a02b-4c37-8e28-99f70a58dc21"),
                            Duration = 125,
                            GenreID = new Guid("c130de70-00a8-4f5f-9840-7c0b0f9a0f7d"),
                            Images = "tiectrangmau.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Tiệc Trăng Máu 2",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=tiectrangmau-trailer"
                        },
                        new
                        {
                            ID = new Guid("8c1c90d5-7087-4825-8144-fab28eb2edc7"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5305),
                            Description = "Hành trình sinh tồn đầy kịch tính trong khu rừng bí ẩn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 115,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "rungthemanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Rừng Thế Mạng 2",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=rungthemanh-trailer"
                        },
                        new
                        {
                            ID = new Guid("2d8e700c-7430-4fb1-ad72-547f6bcc5bcf"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5311),
                            Description = "Câu chuyện tình yêu đầy lãng mạn và cảm động của Trịnh Công Sơn.",
                            DirectorID = new Guid("03253950-83de-441b-a604-9835a92edd0f"),
                            Duration = 150,
                            GenreID = new Guid("9cd90fd8-709d-4009-a80e-6da734854248"),
                            Images = "emvatrinh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Em Và Trịnh 2",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=emvatrinh-trailer"
                        },
                        new
                        {
                            ID = new Guid("95cf92ad-75ac-4648-874e-2aae85366293"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5317),
                            Description = "Tiếp tục câu chuyện tình yêu day dứt giữa Ngạn và Hà Lan.",
                            DirectorID = new Guid("7b45bce0-3380-4799-9916-06dabebe8690"),
                            Duration = 130,
                            GenreID = new Guid("faa178af-49c9-4bab-8670-b4cde03209a2"),
                            Images = "matbiec.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Mắt Biếc 2",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=matbiec-trailer"
                        },
                        new
                        {
                            ID = new Guid("183fcf19-ae43-4831-b713-e787856ba847"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5326),
                            Description = "Phiên bản Việt của Người Nhện với những pha hành động gay cấn.",
                            DirectorID = new Guid("87c95c7c-e324-47a4-a0e5-9f39f7ee0cb1"),
                            Duration = 145,
                            GenreID = new Guid("9751e419-d686-4ffc-ad87-14449310772d"),
                            Images = "nguoinhenvietnam.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Người Nhện Việt Nam",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=nguoinhenvietnam-trailer"
                        },
                        new
                        {
                            ID = new Guid("6e49a42b-ce4b-4041-af54-b2e23885691e"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5335),
                            Description = "Những câu chuyện tình yêu lãng mạn tại Sài Gòn mưa rơi.",
                            DirectorID = new Guid("1f802416-a02b-4c37-8e28-99f70a58dc21"),
                            Duration = 100,
                            GenreID = new Guid("c130de70-00a8-4f5f-9840-7c0b0f9a0f7d"),
                            Images = "saigontrongmuaroi.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Sài Gòn Trong Cơn Mưa 2",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=saigonmuaroi-trailer"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("6a974be2-3476-485b-8166-d102118ab9f6"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a6fe1659-4804-4254-b88c-c7e21246d7f8"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("cf1b9273-54dc-40cd-9ebc-0c64795249ef"),
                            DateEarned = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5728),
                            TotalPoint = 50,
                            UserID = new Guid("42a6eb44-3f2f-4a2e-8e23-d34439e768bc")
                        },
                        new
                        {
                            ID = new Guid("d37e7195-7da4-4e51-96b9-5465f8f2f777"),
                            DateEarned = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5732),
                            TotalPoint = 150,
                            UserID = new Guid("79c36a65-1f8d-4c1f-a343-604ff5b3dc2f")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("04d0b938-dda8-4339-8212-3cb0b86b7464"),
                            MinPoint = 100,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5709),
                            Status = 1,
                            UserID = new Guid("42a6eb44-3f2f-4a2e-8e23-d34439e768bc")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(3472),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(3495),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(3497),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4621),
                            Name = "Room 1",
                            RowNumber = 0,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4627),
                            Name = "Room 2",
                            RowNumber = 0,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Show_ReleaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_ReleaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("b640b127-7637-4015-ae69-b48c7622882d"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5409),
                            MovieID = new Guid("c6d4353e-8ede-4999-8229-f7821fb4f02a"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 11, 28, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5407),
                            ShowTimeID = new Guid("1f7bfa72-b454-489e-92e5-828ec8c66de0"),
                            Show_ReleaseID = new Guid("f557903a-7341-43ec-b2fd-699990121633"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f791e9c9-b4c8-4571-945c-c57252c62b55"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5415),
                            MovieID = new Guid("c6d4353e-8ede-4999-8229-f7821fb4f02a"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 11, 30, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5414),
                            ShowTimeID = new Guid("1f7bfa72-b454-489e-92e5-828ec8c66de0"),
                            Show_ReleaseID = new Guid("f557903a-7341-43ec-b2fd-699990121633"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("edfc4dd7-091a-4f5e-b8ed-5938d52f26b1"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1ec0f120-c8aa-4352-9c18-aac5e14120c4"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7a6bf7a8-0bad-4547-a978-387578cb9f49"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("75f64d23-e247-4052-b793-21bcb9e0f690"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1f723419-d10b-4b50-a7cc-47146077aec3"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("da823647-19ff-43e4-b337-1b0179a50554"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("aee8e3c3-11e7-4754-9a46-2629b7959f0d"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("976cefb9-66a2-46c0-b8c5-44ab98b35364"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a787ce7a-165b-4fcb-93a1-bfebc9911b75"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ed458319-e863-46d1-913f-981bb4ce4199"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("675af43f-5c2d-4cb9-908a-835cbc44e6f6"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("08f3e984-052f-4f1b-884c-9cc4d3b595c8"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f566b360-7ce4-4d3d-846a-48754aaceade"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4f64cebc-8fd9-4a9a-ada1-2dea96a22842"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9260892e-059b-4fa0-96af-9bdb083802d0"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5c3c925c-f00f-4f1d-968e-162633d1cc5c"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("62a41439-dc41-4d40-8b41-a496920a9cf1"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ff232541-c1b8-4931-9950-5f716ed6ec98"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("45997e39-a8f3-4acc-9852-4d6737af2fc4"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9812279c-0a40-42b0-b358-2b601d5c1662"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3ca7b643-24ad-497b-acb6-474c33cc8834"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4de53a28-7488-4507-bd06-024c68dce677"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2534b1ee-5cf4-4e6d-b844-26c9ce827cc9"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e63c0638-7a93-4f2b-b4ea-dc2ebc1005dc"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ab677b57-bb24-4651-a09d-2035f20c496d"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7ddf3137-b6a9-4252-b1a9-617d3be90e7e"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("edc4f900-1706-46eb-a9a1-48a565db3740"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("91f8dcf7-9fcc-4d76-88ac-2d0ec0f11d09"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0fa6ce36-157d-4884-a622-335fbfe78905"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("befdf689-348e-4eba-be34-e67faaa92063"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("be2719c8-0554-4489-ab33-85d5c2714323"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("14976b50-641e-4816-bdb2-abac39accf58"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("55ed0d7b-3cfa-496c-8e6d-ef2b4083d859"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("db5ddc95-2122-4041-b6e8-6d5a79767db9"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f838c016-eb1b-4655-ab94-e558c93cc3b3"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e0e285e1-e88e-4bba-86da-767627d9483b"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d245760e-4d09-49a5-8b57-fd0dcf43c78d"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3ac1c3c8-dafe-44b7-bab3-3df2b3e8700e"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("147bc502-24f1-4c3b-9a55-c0643856df9b"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("286e4bb1-318d-40e3-bef2-f5dd5f8ed1ec"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0b83b445-5c67-44cd-89f8-9352cbfef432"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e053f98b-27ec-49a9-ae0a-9161d65ff020"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("06575929-a15f-4d45-822a-f9593767a6d0"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5cd67040-39de-478a-b07c-fbf901a9bc9f"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("702bb477-c755-4b64-aba4-ba6f49d6160f"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("697c6518-2b58-42d4-8a18-c003415fbb27"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("82b9385e-61dd-4106-aad3-2fd0bf3c2be1"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("798b7b86-ebe8-4257-902b-92ea9429680f"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8141c459-aff7-4b9c-99ff-5255d1135ada"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f40ca320-5d43-4ef5-998c-96844546decd"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1e55c9e2-a043-4a02-8a9e-0a7c5bd7986f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1afd68c6-cfcf-4bec-b6ed-e3499352241d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5093aadb-e1c7-4123-81a6-0df1fd330172"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b2849d72-64f8-47ae-89dd-bc97c39d51fa"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3d2ae700-01c8-4bce-aba7-925b03aebb25"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("62895c29-fd7b-4491-b72b-0b0323fd4b59"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("09c5f803-4586-4caa-8474-b5edaa1c9be4"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3483242d-fa92-4c59-a77d-f06c52af17f8"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b19ee4f5-b91b-4bfe-ae66-3426f7fa4b44"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("aa61bd7c-005d-4acc-b4cf-b9c1ea0b8404"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5e82cedf-41dd-4404-a0aa-5688fd68d274"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a61459e8-7292-48fa-a9b2-73f8a7e40d23"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("df7e4397-28f2-4340-9865-fbaae03ef43a"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("70fdb784-bdf5-435d-83e6-26b7f3315526"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5a34c627-09ec-4b42-ae13-12a0afc7d920"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("80e57b16-731a-4784-b815-8fa511e0ef7c"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2846119a-9e48-4c92-9e89-cdfe22c2c52b"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f50c0f87-4b3a-4476-9868-786cc8d29a51"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a9b3d542-df47-420b-aba5-291b587d3262"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a537d5a9-e08a-4389-a08c-5abb5147830d"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cf85b160-1ff6-474b-a5dd-8a73bad120b7"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("23fa9c14-58f0-42df-bfdf-536aaae8c282"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f4e1fb07-d61e-468b-b0a2-bb08692925fa"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("22aefad1-2ccb-4f62-aab1-cf3d537cf4cd"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0c4d2222-0c35-4067-a3c2-23c19a38ea49"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4b18bfc8-4c6e-40d2-bfeb-511aa829556c"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a3f6e5c7-7a3c-42fa-914c-19e7c49b353a"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0a4653ec-efb4-49f9-8be8-2e096773db33"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("502faa25-dc0c-4909-8647-6b8ee3ae814c"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7a79dc3d-4749-4a17-b9ba-b3fbd7dc421a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("221a363e-bc05-4679-9805-bf5f76ff304f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1518f811-81b3-4099-b471-6b5439be6a18"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5eb0f473-5644-44a2-b19c-26ad5a38baef"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3ab80427-fdce-4a59-9e28-fdeb46561b70"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("96402bc8-4850-4ea5-ae78-982bc697d324"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("453ead7b-485e-4c3d-a2a2-fae8401b9dfd"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cd98b634-dcad-4cf0-adf2-a48bdf047fb4"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6ce9c773-8a3a-41d7-82d7-c15e5b2fd4dd"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("906155bd-6206-4115-af94-cab97108b5e9"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("93cf8ffb-395e-4a4d-88f0-6c3b2ed90b4a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3ec39c96-bbb6-408f-a614-e1097959d3ac"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2496043b-3a52-4fa9-bb7e-9e3ff0bd3451"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("143aeebe-091a-4486-bd3d-584a9deedcbc"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c89348c6-6d4c-494e-8225-6b51cb26b2e6"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("bd068051-2387-4030-ae97-9e2b01fb850a"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b78d1b35-071a-4dd4-b7cc-f54e6b0b6bb0"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e8d4baef-7387-4120-b1c7-8cab014def16"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d2d37ccf-c06b-4a7a-adde-24779c58ccac"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a9163026-dde8-472f-a7d2-c7000c13cba0"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2dd04fa6-59d5-45d4-b39c-46db28dd210c"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ba6ec660-45a5-4ca6-9c70-87ed8e786b9e"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a2234309-e93f-4b8c-9294-695d0ecef201"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("74cbd69c-de19-401f-a541-dbdb9a4e231e"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("505defd5-1d8a-4bef-9571-136e7faf06bb"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3e2d3369-8d5b-4732-a4c3-73fea0acde61"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("92c86667-4a07-40d7-b204-047f663ff27b"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d80e4a98-06ee-4b37-9b27-418f83bcbf83"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6452b331-a156-413f-b27a-f37b4c437b6c"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3b43dcc5-d155-4eac-95be-997c1cb79657"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d6ccf5c1-1eab-4d7f-802d-e606617b7941"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d41251eb-2166-44be-b3d5-253e0d1aa006"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3063048d-b88d-49d5-a380-3cb51a8829c5"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cfb85004-ca7f-4d25-826c-3ce54e656cdf"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("147718cf-56ac-4335-8405-55cabfc7b038"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c0de7bb4-be92-45d8-9bdb-9d91945088c2"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8860562f-ee81-4179-91a1-ca9f77ca32c5"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("84145ed6-1008-4056-a582-ff0c38993e56"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5bceb489-72de-4d54-9566-594954437d70"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7d3db00c-034d-4966-8327-bd6ecfd572ad"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d600625e-f793-428b-abda-82f0b92f1d21"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cf20efa9-cdbe-41d1-821d-2f67bf7e15b6"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("58feee8c-eb43-42ca-997f-db308c219092"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f563dec3-2cb5-4cfc-82f8-25c3c0dc076f"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ca8fc10a-8da5-4d2b-8766-df8f9f92736a"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e827ae73-0413-4ea7-bd5f-22aad5e38851"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f7d3e19d-9cba-4d22-b211-a9645b06f8a1"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("267182b1-379d-43f8-a647-1071b4ae7461"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("84c651ee-dcd2-44e1-b0ee-fb6d766f42ce"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("874eafea-d7d6-4ae4-bbec-55d63ce211e4"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9310e2a3-efbf-4c83-aa4b-1639f1e055f3"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("bc997e4a-be7f-48d2-956b-7495b17f6b69"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("068a61c5-9cde-4f56-a5a8-4b68a8630434"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c70c7cbc-407b-4699-bd77-e5e7bc06989f"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2172df84-36d9-4847-98b0-84343a28c95e"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7d78e7e0-6c11-40f1-a60b-b26ac68ec8bd"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9a4474f0-66b9-4009-8170-35a187fa172c"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9221ab41-302e-47f0-88f3-076b41e70815"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3ad77d2e-4a41-4e6d-8aeb-304390f44339"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("969824a1-2798-416f-ba03-06f2a719914f"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7d332635-aadf-4728-b164-0e7a3a7e7184"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("46a6153d-82e2-4c00-b005-07a63d44c66e"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c94c1534-ac8e-449d-a0e1-3f29d57b2917"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9e795a14-5a1b-4ab1-8091-985fd349deb7"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a5ee2a54-825c-446e-8288-81b935d9b50b"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6fdabf74-2609-4138-975d-5294984032f1"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d234f026-11d4-4caf-93d5-bf0b52877039"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3ecbb027-d76e-4f4a-9a10-c9b5ce6dfcf6"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6c19b69b-55c3-402c-973e-a1e2bbbb8bb8"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8e967205-87ba-4406-862d-9647d33170d2"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c6e362c0-50c7-4e40-9766-de147b4d73a5"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7e5a2964-e88f-485d-964a-11ab5c7ea7b2"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("219f0324-b235-4166-a4a5-25a03c072c51"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3e6b9131-54d5-43a9-b911-8d00b188ca7f"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c5b4d7ac-1d72-43b9-a9c2-d38e925c2c74"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5579e4ce-67a1-45b9-8240-9187c3fcc5fc"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d56b599b-7e95-4077-abf3-bbcec55efefb"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9305055d-4420-45c1-a8a7-bf225f85f64d"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("37b2ab01-026b-4b98-b6fd-5c7c8e8ce629"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d1427dda-9168-4a4a-a950-999367b81ebb"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("dbe8d204-79c9-498e-842b-3b0c9b7a8ca9"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c4e6b57d-95aa-408a-9560-90f31bc7be4c"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8574a2a5-686d-47ff-8921-c653501e3d78"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a88a56da-d9c1-4ea3-81ee-26f155c25c5f"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4370a823-57a8-49a9-b584-b1608f8800ba"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("38364028-bde5-40ba-bb05-a2a997e68645"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b3066ba5-b4fe-4b3c-b9ad-51290d484ba1"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e727edd7-960f-41a0-b284-94cb31a69ebf"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e874b3e2-b308-4cd6-bd70-0072d60a9268"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8868ef3b-524c-49ac-9d0d-418d0530d9f3"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fb5a77cb-d05c-4a60-8a44-f115dcdbbfbe"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("436acf78-e0c9-470a-b429-8aa2e9a8b997"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("44b265b1-9552-4b2b-bfa7-06cd23e5f74f"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6123e90c-8124-4438-bafe-de2ba718fcbd"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5593b277-d51e-4d14-a926-b99a1bceae81"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e0fc7a88-1b7b-4ea0-8213-cb5eea732434"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("605511b6-dedc-4610-b837-f983db58d95e"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8c7a3963-cb10-4457-8afb-a0f139d9c873"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b985fd65-7787-4c22-a8ff-a37793541dae"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6f207662-24d3-4ba1-be8a-f809937b2c41"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("85d5f856-d400-4426-991d-eb93eb584b49"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8a7f7205-1b21-4f5b-bde9-097f23dee387"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0d341a0d-e402-4416-8456-6a365fde50ea"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("edbdfefb-6c40-45a7-9f88-8e58452c42de"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c1999db0-7eb4-4865-9223-5a1737d89339"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2104d1cb-73bb-4c92-8d54-055fa82d9784"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f5553c2b-4154-455a-952e-df389ffe7a34"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6d716e25-352a-49d6-97ac-c468996b3e53"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8337f93d-cdd4-43bf-ad9b-178f206d520a"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("433bc67a-9a6a-484b-827f-4801271333a3"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4fb9873e-f3a1-4b69-98b3-d4e019093a23"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6de36333-0eb9-4a77-975a-3b5c3a1964a0"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("618a740b-000c-46d1-9e2a-d902edff6af4"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("442aed37-0f9c-44cc-ad04-542f51b87f41"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8d8b9b38-49fb-49ed-ae03-d200102c243a"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b35860b9-50f1-416e-96c2-f9ace0626529"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0921b24f-7be8-4df7-85b3-67aa4190065b"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fdee337d-4989-4fe1-af16-4388741471c0"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1d86d28e-61bd-4719-8f54-bdfe8b51e9ef"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1ad8e2bc-cb9b-4d5b-97fd-3349fd772e61"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1a41b7b9-9b94-4be5-b03f-c117cd70b980"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("07213105-84e8-4c2a-9efa-61f12beff9cd"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d7d2e42a-64d1-4802-8ff8-dfbc194aa507"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ce45d78c-8ef8-46d3-bdee-af8183eb4c02"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0cdb7b62-bce2-49b9-90cd-db703661e033"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2014ed8a-c6ae-4008-8dfc-67bf8dcc3145"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("de625a04-f257-4a6a-b163-72e12f97208e"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("45245b5f-ff6e-4ccd-97b2-68c73529d787"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8758b1f2-57b3-458a-90f9-ede7ae1443af"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("445ab527-0028-4b94-8f40-5a39d01136cc"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a21c1b53-b265-4cff-9b3d-3da863429b9f"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f721a40e-8d5a-45cc-b8d1-5eb16dcb32b1"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("aaa8d40e-d343-4b0e-aa12-cabad722a0c7"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8db8f5d0-e9d7-479b-b8e6-a1039f62d2c5"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("48ec3d67-af2c-4313-8897-c45e7963676b"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ba474629-2516-4ca4-b090-98d4488d9a1d"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("420de416-5ca3-489a-a135-f77358bf98f5"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("14474aea-37b5-484b-a69a-01364b477868"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9b217669-d49a-43ff-9edf-325bafb6b855"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("66b7f29b-a5f4-44a0-8405-b65fdf600231"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e7bb48d0-8135-42c5-8d55-fdc747e11b21"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4df461f6-843f-4ed1-94a6-df301b9c60a0"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9705174f-58cc-483a-8146-b576ee6fdf67"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3c0a9ad3-1c7b-49bc-adff-407855e92084"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("bd5bd5df-9419-4041-93ce-fcb55aba1745"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("aac96122-5d53-403a-bf02-964ed85876a4"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9a2fe3e0-b61d-4ae3-ba30-0aa045855a36"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7eb81063-a3b3-46e2-bc03-e9832d3024e4"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("95e56fd8-6383-4487-905c-c9e605737db9"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8fd34e41-c24e-4995-bb0f-b8de992e2794"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a4bfa81f-b5e8-4a53-9548-b97077d8438d"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("95bdf334-1961-46ed-92d6-d6923cabc779"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("597dadce-af87-4142-bef7-fed457cfaef3"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("20c8395e-716d-4e8d-bb1b-db252519a1dc"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7b4d33ff-f65e-4663-8a6b-ea2320856d36"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("320fa792-3749-4501-9187-499764615a6b"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("75650382-30a6-403b-b767-e856f0b779fc"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("934103b4-d0d9-402d-a336-714a18feba85"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8300b2f5-03e0-45cd-9b13-6eea8902b4b0"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("81bfa33b-0fe4-4cac-854f-e6e40cdeedf7"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b50a203c-5f8e-4e4c-9389-0aff9dd8e965"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7de2fe33-9765-4141-abf9-858e1d35756d"),
                            Column = "A",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c02209c9-7516-432f-b442-cbbe98574114"),
                            Column = "B",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("51f9f807-b5c3-4a95-a8f8-e5b65c7c60b5"),
                            Column = "C",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f7a04a32-4f37-4e38-bba6-662e9f909ff9"),
                            Column = "D",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("eaa6150a-eed0-4374-afd0-ed6f05e5a727"),
                            Column = "E",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5700b5e3-7ca7-412b-836d-f67861156569"),
                            Column = "F",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0f27890a-2177-4efd-805a-1fad2258c3a2"),
                            Column = "G",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5116c43c-6a00-4bf8-9deb-902402ad8e07"),
                            Column = "H",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("248b15f5-4758-4ca0-82db-4b8b66940a54"),
                            Column = "I",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1f2a6679-3424-47b0-8904-b763c797ddf4"),
                            Column = "J",
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4548),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("35d105cf-1801-49d8-9033-95c645dc8ab7"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4551),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("d7241173-c94c-4f4a-945b-a81d20aa9ced"),
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4555),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("1f7bfa72-b454-489e-92e5-828ec8c66de0"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("628ad6e2-da9c-4ecd-93bd-591b26a68878"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c38f997b-dc64-4f7f-825c-96dfbf3a4720"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f9887893-4352-4f95-8ad8-372c936ca583"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f5a9aa3d-603b-4b7a-8e50-a8f5f4cf5516"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("76c30b72-81be-482d-a23b-d214d1aa27f5"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f5dfbd64-e28d-4819-9b8a-e0488f316978"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("abaf4ea1-97a4-4c26-a601-545185d37578"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ed32bf83-7689-4c75-a9cb-e56e8ee5045f"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("390bb6a5-f4f0-463a-a5a8-6e559d85e39d"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("f557903a-7341-43ec-b2fd-699990121633"),
                            DateRelease = new DateTime(2024, 11, 27, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5374),
                            MovieID = new Guid("c6d4353e-8ede-4999-8229-f7821fb4f02a"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 11, 26, 9, 18, 6, 833, DateTimeKind.Local).AddTicks(5369)
                        },
                        new
                        {
                            ID = new Guid("ba60981f-539a-4e8f-b049-1db58e3d9de5"),
                            DateRelease = new DateTime(2024, 11, 28, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5381),
                            MovieID = new Guid("b80eaa86-a702-41f2-af67-cfc3554fdfc1"),
                            RoomID = new Guid("f3e43305-b39a-4582-b2f4-9353df9f5614"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 11, 26, 9, 19, 6, 833, DateTimeKind.Local).AddTicks(5380)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("52e4ff2b-8c6e-444b-bb59-ea69b10d2ec4"),
                            MovieID = new Guid("c6d4353e-8ede-4999-8229-f7821fb4f02a"),
                            Price = 100000m,
                            ScreningID = new Guid("b640b127-7637-4015-ae69-b48c7622882d"),
                            SeatID = new Guid("edfc4dd7-091a-4f5e-b8ed-5938d52f26b1"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("186d361e-d7d2-41bf-ae7d-64947dcae261"),
                            MovieID = new Guid("b80eaa86-a702-41f2-af67-cfc3554fdfc1"),
                            Price = 2100000m,
                            ScreningID = new Guid("f791e9c9-b4c8-4571-945c-c57252c62b55"),
                            SeatID = new Guid("1ec0f120-c8aa-4352-9c18-aac5e14120c4"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("303639bc-f9b0-4680-bff7-6f20c7723705"),
                            Price = 50m,
                            ScreeningID = new Guid("b640b127-7637-4015-ae69-b48c7622882d"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("1f7bfa72-b454-489e-92e5-828ec8c66de0"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("5c42b476-6a1f-4e9e-9008-f3543867a819"),
                            Price = 60m,
                            ScreeningID = new Guid("f791e9c9-b4c8-4571-945c-c57252c62b55"),
                            SeatTypeID = new Guid("35d105cf-1801-49d8-9033-95c645dc8ab7"),
                            ShowTimeID = new Guid("628ad6e2-da9c-4ecd-93bd-591b26a68878"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge3D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge4D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60m,
                            PriceAfter17hWeekeend = 70m,
                            PriceBefore17hWeekDay = 50m,
                            PriceBefore17hWeekeend = 60m,
                            Surcharge3D = 30m,
                            Surcharge4D = 40m,
                            SurchargeCouple = 50m,
                            SurchargeIMAX = 50m,
                            SurchargeVIP = 30m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("42a6eb44-3f2f-4a2e-8e23-d34439e768bc"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(3623),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("79c36a65-1f8d-4c1f-a343-604ff5b3dc2f"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4012),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5c0ef7b5-1ee8-4332-86c3-cdb0e30e4ecb"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4041),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c5e3a059-884c-4e56-ba28-2315e4bb9c0d"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4069),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bf7c6159-0370-41f6-89bd-3a6f0a7ea7da"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4103),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ad2b2f2c-f101-443c-8417-53ad43327bbc"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4129),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("74495c18-beee-4150-a20b-d663a6973304"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4162),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b06222c4-f043-4cf7-a112-6485470a7226"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4186),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("16ce2b28-f372-4837-b996-ab172c713fdb"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4210),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6d90c9e2-7a86-450d-9ecc-65fe7800174e"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4261),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0a6a1be3-4cb5-46de-b86b-cc83589b6b7d"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(4289),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("db8da23a-e4e9-4be3-b1bb-7935ae2d407f"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 11, 26, 11, 17, 6, 833, DateTimeKind.Local).AddTicks(5764),
                            TimeStar = new DateTime(2024, 11, 26, 7, 17, 6, 833, DateTimeKind.Local).AddTicks(5763),
                            UserID = new Guid("42a6eb44-3f2f-4a2e-8e23-d34439e768bc"),
                            WorkDate = new DateTime(2024, 11, 26, 9, 17, 6, 833, DateTimeKind.Local).AddTicks(5762)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", "Show_Release")
                        .WithMany("Screenings")
                        .HasForeignKey("Show_ReleaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");

                    b.Navigation("Show_Release");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
