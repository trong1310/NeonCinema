// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20241204042627_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("7bce3afa-2ff7-435a-8ec0-dd1f711940c9"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6242),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("a346656c-9d3a-4a8e-8b11-716e505ce33e")
                        },
                        new
                        {
                            ID = new Guid("b16032f4-59b3-4bb3-ad0d-e9a71cb1e5e5"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6246),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("bb2e847d-653e-4d81-bd86-ee657b7c8c37")
                        },
                        new
                        {
                            ID = new Guid("a419fc9e-bde6-4874-ac8b-e4dac7abe71b"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 12, 4, 10, 56, 27, 425, DateTimeKind.Local).AddTicks(6249),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("5e16021d-8a76-44d6-9d24-0454abafd5cc")
                        },
                        new
                        {
                            ID = new Guid("5a460503-7c76-4402-8d3b-5971806e3dee"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 12, 4, 10, 41, 27, 425, DateTimeKind.Local).AddTicks(6251),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("6ca66297-0bc1-4626-bbb2-d4c13919117d")
                        },
                        new
                        {
                            ID = new Guid("3a86415b-eed2-4eaf-ac58-85f3112c015b"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 12, 4, 10, 26, 27, 425, DateTimeKind.Local).AddTicks(6254),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("841bc285-c4b0-416f-be0c-721b04ea77f7")
                        },
                        new
                        {
                            ID = new Guid("af0eb3ba-1f01-4009-8a3f-2178d9fe118b"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 12, 4, 9, 56, 27, 425, DateTimeKind.Local).AddTicks(6259),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("6f8fa817-a327-4658-a485-3317e3d35389")
                        },
                        new
                        {
                            ID = new Guid("dde96cf3-8234-4be4-bcc9-1fe624689e3c"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6261),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("6f8fa817-a327-4658-a485-3317e3d35389")
                        },
                        new
                        {
                            ID = new Guid("ffcee602-3717-49f2-9a66-9a3d18326b7c"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 12, 4, 9, 26, 27, 425, DateTimeKind.Local).AddTicks(6264),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("ec8a14bd-8bdf-4bf6-82bc-2dc53cbff9ca")
                        },
                        new
                        {
                            ID = new Guid("e5de5af1-962f-405d-bd94-e4bf68187bf0"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 12, 4, 8, 56, 27, 425, DateTimeKind.Local).AddTicks(6266),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("4d8822df-e584-4a41-acdf-59ee82e33fcb")
                        },
                        new
                        {
                            ID = new Guid("f937a5ae-a299-4411-a2a5-38467c279f10"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 12, 4, 8, 26, 27, 425, DateTimeKind.Local).AddTicks(6269),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("2bd50832-ca9e-4906-9ddd-254cb18ed9f6")
                        },
                        new
                        {
                            ID = new Guid("b1ea2632-0633-4fe4-9328-bbc5fa4f1e67"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 12, 4, 8, 6, 27, 425, DateTimeKind.Local).AddTicks(6271),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("300e5932-ed4e-4293-9cf1-dd51d66c3d93")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");

                    b.HasData(
                        new
                        {
                            BillID = new Guid("7bce3afa-2ff7-435a-8ec0-dd1f711940c9"),
                            FoodComboID = new Guid("8c708a83-3f4f-4ccb-a3cc-1a7958573aca"),
                            Quantity = 0
                        },
                        new
                        {
                            BillID = new Guid("b16032f4-59b3-4bb3-ad0d-e9a71cb1e5e5"),
                            FoodComboID = new Guid("24f68a83-c0e5-4529-ad27-f307067d186e"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("7bce3afa-2ff7-435a-8ec0-dd1f711940c9"),
                            TicketId = new Guid("9c253c50-542a-4ad9-b9fd-1e41f6b6526f")
                        },
                        new
                        {
                            BillId = new Guid("b16032f4-59b3-4bb3-ad0d-e9a71cb1e5e5"),
                            TicketId = new Guid("c85cb4c3-6d68-4c86-adfb-b0bcc38c839d")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("40006293-826c-4f47-8e1c-f7cf5a77e49b"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("a07c6418-88a9-480f-abd9-edb3a4fcea3f"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("77b4fd71-7c20-4232-bbdf-75c1efcc7e24"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("a7c79796-4d90-4f09-ab5a-3efbbd04141b"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5240),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("62748bbc-1649-43e7-9f5d-bc219e338600"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5246),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("13f906e8-fb3e-4be2-8e1f-8451fc8d1569"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("4a4353d1-d993-483c-a72d-8ab581260553"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("57c6e914-005b-463b-a147-cecee5ffbe88"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("2cc3ec46-aa03-4334-b6b6-2c6dcaa743b3"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("1542000f-dfc6-4b6f-9203-4cfb503e247d"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("197d0917-2ba7-4202-ab6b-ff7c6ac598b9"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("7b63335b-e9a9-41c4-b733-9d0960797cae"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("ae6d41e9-c2ab-4660-9ee8-fa1c7fdb8b08"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("fc55a49c-6c40-4737-8f10-6d58fb187ebd"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("75958069-5026-45b5-8080-9ff46dcaf49a"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("64341265-9424-4132-b24f-0ef13da155ee"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("379d577f-90bf-4001-90fd-b60954bcc88a"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d5a3627f-59f9-4061-b514-426547be2449"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e6ba2787-cb8a-4ff8-b19f-80ed9087df61"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9083da3c-4a3d-4424-8d36-b35f39a73b7f"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("010afa30-37a6-487a-a192-767ea7296803"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("57472fd7-a6a8-4d02-be19-cc7d3f60cd93"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a503688c-813c-4155-9b13-d72276a8d2a9"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8c708a83-3f4f-4ccb-a3cc-1a7958573aca"),
                            Content = "Combo 1",
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 100000m
                        },
                        new
                        {
                            ID = new Guid("24f68a83-c0e5-4529-ad27-f307067d186e"),
                            Content = "Combo 2",
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 150000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("8e518039-7beb-47ee-8369-ca4839fb13d9"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("176f6c8e-074e-4f9f-856a-bce976c159d7"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("e48e247d-88ad-4380-999a-d953f478e326"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("2c0915e5-0663-4cdb-9c31-a76fff740726"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("34ae4bf3-81d2-431b-b824-0a639fe5d226"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("37f9eefc-83a9-4f9d-be62-c00d3912d334"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("f26d7b58-3273-4606-8840-1ce930ad84d5"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("95ee320a-5521-472f-89be-f7e63ee49bee"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("1b9a46b7-6837-40e3-bb9e-0d28db8fe13c"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("e303bcd9-6bb5-46e9-a5f9-bb50720eaf1c"),
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("aaed63cf-a73d-4bd6-b421-95137260ee15"),
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("3d528bd1-1736-4144-a840-4aacaf6cc455"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("78ec1525-8549-4f0b-82ef-8cb2b9720e06"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("6242abac-8af5-418a-b381-31bfefcc658e"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5914),
                            Description = "Hành trình cảm động về tình cha con giữa Sài Gòn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "0e9f825c-5346-44f1-a94d-7078909ce83a.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Bố Già 2",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=bogia2-trailer"
                        },
                        new
                        {
                            ID = new Guid("86736908-a3aa-4645-a292-eb7b26c4b935"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5923),
                            Description = "Những mâu thuẫn căng thẳng giữa các băng nhóm trong thế giới ngầm.",
                            DirectorID = new Guid("75958069-5026-45b5-8080-9ff46dcaf49a"),
                            Duration = 120,
                            GenreID = new Guid("8e518039-7beb-47ee-8369-ca4839fb13d9"),
                            Images = "161cd6ca-380d-4627-8071-2d5af03a1cf2.png",
                            LenguageID = new Guid("e303bcd9-6bb5-46e9-a5f9-bb50720eaf1c"),
                            Name = "Chị Mười Ba: Cuộc Chiến Nhân Tình",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("0115da72-2d76-406b-9fed-83770a0b6028"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5931),
                            Description = "Cuộc sống đầy biến động của một gia đình truyền thống Việt.",
                            DirectorID = new Guid("64341265-9424-4132-b24f-0ef13da155ee"),
                            Duration = 110,
                            GenreID = new Guid("176f6c8e-074e-4f9f-856a-bce976c159d7"),
                            Images = "100f852c-f5b4-43f0-8560-84ab0b42b9b9.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Nhà Bà Nữ",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=nhabanu-trailer"
                        },
                        new
                        {
                            ID = new Guid("ae567b22-4eea-4ef1-ae51-f1d817d29141"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5937),
                            Description = "Cuộc sống sang chảnh và những bí mật động trời của giới thượng lưu.",
                            DirectorID = new Guid("379d577f-90bf-4001-90fd-b60954bcc88a"),
                            Duration = 140,
                            GenreID = new Guid("e48e247d-88ad-4380-999a-d953f478e326"),
                            Images = "11d330e9-7ab3-49d6-bb78-0ab3acabf6cf.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Gái Già Lắm Chiêu 6",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=gaigialamchieu-trailer"
                        },
                        new
                        {
                            ID = new Guid("af015912-d39b-4230-a5a9-c619124daa44"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5944),
                            Description = "Bữa tiệc đầy những bí mật được phơi bày qua trò chơi mạo hiểm.",
                            DirectorID = new Guid("d5a3627f-59f9-4061-b514-426547be2449"),
                            Duration = 125,
                            GenreID = new Guid("2c0915e5-0663-4cdb-9c31-a76fff740726"),
                            Images = "2d2a89fa-61c6-4662-a2de-ab4b337c88d7.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Tiệc Trăng Máu 2",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=tiectrangmau-trailer"
                        },
                        new
                        {
                            ID = new Guid("b92bffaf-f37f-4d32-bbd4-628e0b5b1719"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5952),
                            Description = "Hành trình sinh tồn đầy kịch tính trong khu rừng bí ẩn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 115,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "rungthemanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Rừng Thế Mạng 2",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=rungthemanh-trailer"
                        },
                        new
                        {
                            ID = new Guid("16cfc6ef-72a8-4e83-b3c6-39525a10ed92"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5962),
                            Description = "Câu chuyện tình yêu đầy lãng mạn và cảm động của Trịnh Công Sơn.",
                            DirectorID = new Guid("75958069-5026-45b5-8080-9ff46dcaf49a"),
                            Duration = 150,
                            GenreID = new Guid("8e518039-7beb-47ee-8369-ca4839fb13d9"),
                            Images = "5b626704-f3d1-482f-b77c-903284966efa.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Em Và Trịnh 2",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=emvatrinh-trailer"
                        },
                        new
                        {
                            ID = new Guid("f248c23a-b48d-4e5b-beee-b8d8315a2310"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5968),
                            Description = "Tiếp tục câu chuyện tình yêu day dứt giữa Ngạn và Hà Lan.",
                            DirectorID = new Guid("64341265-9424-4132-b24f-0ef13da155ee"),
                            Duration = 130,
                            GenreID = new Guid("176f6c8e-074e-4f9f-856a-bce976c159d7"),
                            Images = "7502d22a-c967-400c-bc8c-3062d00c7fcc.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Mắt Biếc 2",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=matbiec-trailer"
                        },
                        new
                        {
                            ID = new Guid("fcf10605-d9ce-4300-bffb-1679703c82b9"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5973),
                            Description = "Phiên bản Việt của Người Nhện với những pha hành động gay cấn.",
                            DirectorID = new Guid("379d577f-90bf-4001-90fd-b60954bcc88a"),
                            Duration = 145,
                            GenreID = new Guid("e48e247d-88ad-4380-999a-d953f478e326"),
                            Images = "96cc9263-2adb-46f1-a015-fe0a18c4b781.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Người Nhện Việt Nam",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=nguoinhenvietnam-trailer"
                        },
                        new
                        {
                            ID = new Guid("1432fa80-d8ba-4c14-926b-7b23ea4ac61a"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5980),
                            Description = "Những câu chuyện tình yêu lãng mạn tại Sài Gòn mưa rơi.",
                            DirectorID = new Guid("d5a3627f-59f9-4061-b514-426547be2449"),
                            Duration = 100,
                            GenreID = new Guid("2c0915e5-0663-4cdb-9c31-a76fff740726"),
                            Images = "96cc9263-2adb-46f1-a015-fe0a18c4b781.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Sài Gòn Trong Cơn Mưa 2",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=saigonmuaroi-trailer"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("ced8c8dc-767e-4e9a-8489-a6dc610dd26e"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bd3b90ce-7064-4d8d-a60f-3258bf632dc7"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("13fcfd99-c0a4-4173-89be-7e45cc05ae8e"),
                            DateEarned = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6352),
                            TotalPoint = 50,
                            UserID = new Guid("a346656c-9d3a-4a8e-8b11-716e505ce33e")
                        },
                        new
                        {
                            ID = new Guid("ead1bb56-dea6-4a7d-966b-76ca3a2162ac"),
                            DateEarned = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6361),
                            TotalPoint = 150,
                            UserID = new Guid("bb2e847d-653e-4d81-bd86-ee657b7c8c37")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("837f0be7-fd5b-4445-a2e7-c48a01ab41fb"),
                            MinPoint = 100.0,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6332),
                            Status = 1,
                            UserID = new Guid("a346656c-9d3a-4a8e-8b11-716e505ce33e")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4242),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4263),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4267),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5276),
                            Name = "Room 1",
                            RowNumber = 0,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5281),
                            Name = "Room 2",
                            RowNumber = 0,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Show_releaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_releaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1619d12b-fafb-4f95-bea6-6fae713d5095"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6042),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 14, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6041),
                            ShowTimeID = new Guid("37e1dcee-879e-436a-9686-fb7fdd76ff22"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("10de605d-9e95-432f-bead-f3b1049e32c2"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6047),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 13, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6046),
                            ShowTimeID = new Guid("4e56ae66-6d47-4845-8117-e2710051ed83"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4dd618ca-35b8-4f6b-b74d-3cda3b735e5c"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6050),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 12, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6049),
                            ShowTimeID = new Guid("ae7b29a3-da9b-4b46-8240-0f72e2d86269"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a38d7cd9-a687-4c6c-a17e-3c8476c56121"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6053),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 11, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6052),
                            ShowTimeID = new Guid("d4ebf1fb-e06b-4fa6-9828-59f3552a09b7"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1e308f3f-5c3e-4ce2-91c9-61ec848d46c0"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6056),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 10, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6055),
                            ShowTimeID = new Guid("2fa9dda0-32b1-4534-b3da-27aeb2da0c46"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("01871d81-6705-4510-9a71-ad60ee8ea402"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6060),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 9, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6059),
                            ShowTimeID = new Guid("a253a506-bf10-4665-8430-e2a1e2e7e605"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bfc21cd3-9306-4cd7-a318-7e2167883f3c"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6065),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 8, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6064),
                            ShowTimeID = new Guid("bec15caa-9929-4a16-89dd-5e7558b459ea"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a9778c51-ee6b-4bc0-be59-776e495fa273"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("db01fbec-f488-4f07-8c32-7048a225c27f"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("71fab55b-dd4c-453a-85bd-7d311ff0e8c7"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0e0b76e6-b3d8-4282-ae46-acf57addf050"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b5b21cfd-a4f1-43bd-829f-83d5463b415c"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("86ed52fb-6c37-4bd5-a11b-d6cdb28e910a"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("57e72c78-9066-4dd6-90ed-9165e455a9bb"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e83eec1f-3a96-47d1-8d46-86a49fd42f71"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("86d95dec-38fa-439e-8106-71f862adf060"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5d83ccd4-c154-43ca-b52a-6103bcccf36c"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ba933ae1-4ade-429c-9a33-9eed6b382769"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("875c71f8-553e-463f-b69c-ffce8490f8bf"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b471899a-84f4-4b3e-b748-469b4da7364f"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b1448214-498e-4f4d-8f53-ce6f441b60fc"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9db587e4-096b-4495-bd05-5465661896a5"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0c6d3392-e7f2-4231-ab5a-d3f9d2ba8b49"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("95fb1d7a-5a6e-4369-b080-979200f35412"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("56837ba8-0935-4a70-bc34-7c15a4d6db41"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("dc0291e6-2adf-426f-80b0-fc26aacd877f"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9cd18437-560f-4d7c-b82f-cb004daa683d"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("67869ebb-9d03-4eb4-bc20-e6196cda21bc"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2cbff2cd-068d-49e4-aec3-778a87cab2b9"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("53ec1a7e-fab9-4b40-927c-6f65cb8952fe"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8e32fbd2-a50b-4a39-a95b-9e3f19cdccb3"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a2ec2d3a-9465-4382-9d60-f0448015c94b"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0d89fa16-ff07-45d4-8622-086f98a0f4fe"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("48d0bf3a-6680-4eed-aee4-72f7c7ef1d09"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4c4b4d17-2e00-472a-90cc-a7b9a2220735"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7b0cdea6-9241-435c-a6a2-7d348bc64862"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("03a5eb0d-0a98-437f-873e-cd4ddfc5b6ec"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1654e623-6320-42e0-a837-84a3d83ae68c"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a7e11b06-7ae5-42ac-a3d9-c71e1e1e2c89"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("840f95e1-3f82-4cf2-a4b3-e03ec9665660"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("326d00b1-a2d9-49cb-be2b-d21af7636d5e"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b923e0c7-77d0-406b-9531-b70be948ecf7"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e5d0b161-52a0-4a38-90b5-a518145cad22"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3dc9a441-faa0-4eb7-a29c-daf9f0c43b3c"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("19f30343-ab4e-4cb1-b312-9bb52d28f1b6"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3e688657-8dbf-4ba7-9ff2-711adcececdd"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("651e8bea-7dc2-4fcc-bb1e-4a0f96e3666a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7c01cf55-3cfd-46fb-aa91-5630c57be733"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1199076d-08c4-470b-b74a-e407405869ec"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d19e4c3b-2cf1-4bbc-ac04-88d3c7f50595"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("39b81d0f-3cd0-443c-b2b2-867ff34c513e"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ae554b08-a7f5-40bc-ad23-15b9cafd149b"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8332a097-8caf-4077-9291-c9a2847d8964"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6281b397-1159-4c8d-b4de-14c231952070"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4d9e4670-9262-4282-8731-d8cef5b613a7"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9477899a-594d-4fc0-ad5c-6a3583314727"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ecd5a394-76b8-48d1-bf84-a26f74a71e86"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bf90eb2f-5d5d-477a-a1b4-b72c437c027d"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("daaab1b3-4490-4162-9a89-685936ecc23a"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("aa9b109a-6b0c-428c-bbde-f039697d9454"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2a7f0f71-78c2-4109-821e-91ccec5f6be0"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2be06788-323a-4f46-8864-913c51f9e731"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bfbc62f0-17eb-4c1a-8673-c329143656b4"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("98f3a033-ab08-4311-bcfb-8682fd67571e"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("78485323-45db-4720-9a75-f7935b9323a2"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8b466897-73e2-47d7-a183-6aef6473c72c"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d6589f23-4dce-4530-ba59-ec71b9d114a5"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fc15afc0-acec-436b-a56e-22c6a78596a6"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("142da1ae-5c28-41af-93a4-bd9a80e8c5cb"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("aa891025-756b-4cd7-a9ea-9a55e38e0e06"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("24b51593-5f2f-4f91-9f7f-2d384b786a1e"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("aee32996-622b-4e41-a637-efcbf40ac883"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d3326c2b-04a3-4f3b-8452-80ef11449a50"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("28e0f2a5-7eb4-4025-925b-173d24d769c2"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ad300380-7703-4a48-b018-44eeb6841e9d"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("31d49071-8702-40c6-bad0-3b07c93038c7"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("848a95ba-033a-4eb0-bb00-f29e870d668a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("659523c4-3cd7-4a98-a40d-3b0a3b066e03"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5d3a7098-23ee-4dcf-b1c6-f5876f083a5c"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f99417f5-8cf2-4bfb-baa9-3c4acbf4c2f2"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("96a0c7ce-52f3-4099-93db-50decb2ef43b"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fa19b776-95cf-45ee-a646-4820583401c0"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("adcf26a4-a7fb-4ea7-90b1-84317c1b5c87"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("caa1efe7-b2a8-4c8f-a9bf-e6d9411b5757"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("083fd0b6-d97e-4078-87a0-4fb72ebae932"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f3d95af8-edcd-44b9-9aef-74b10bb1f566"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("71329d46-abde-4458-ab85-bc2fa929e3a1"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("35d0c80a-6e03-46c5-9cf9-38bbe212cca9"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("227e3470-6830-45f0-acc2-24829ad50c8d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3363df88-fde5-40c2-9513-30e2524ef6ab"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("643c9b62-3c85-47b6-b1fe-70a4f042dd3c"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ac8e0b13-2721-456a-8cde-51c2849ae0af"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c14a1da1-5a93-46f5-a48a-ab74cd4a25ef"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a980504f-aa49-4f32-a3b1-599322be9a18"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("260f2c36-b9c2-40e7-939f-fb0e8fa666e3"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4a6ab416-ce60-40c6-adf0-dc42ad42a552"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b25a2b16-95a8-4c3e-a690-7f674b7b37c5"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a0389c33-5c2b-4fea-92a3-4af25fccec00"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5ac0211a-f9e6-4b42-8e81-879277dcb12d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0d3ce9e1-3f0e-4a3f-b47b-01a077b00d4d"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e3cb3c12-a016-43b4-921e-1fbd37b23673"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("61d523d0-668b-4d80-80a0-5a825d9d4b81"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("242dd433-2558-4193-a330-298d0a108677"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("907c8d25-b7d6-41e6-9c1e-c1db20745cc2"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("53e174cb-5474-47e7-92aa-0a2aab0ce648"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("de292e8a-718d-4432-bc3a-9acd0bf61e37"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("06923b61-3cd6-45f2-b423-5bc71bcaa07a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("76232d5b-5978-44a8-9f92-abec1e2999fe"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b310e555-e4d2-4755-bea6-5d138b03a318"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c3d95292-2452-45f0-9308-698b054f43f4"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("89f934df-66d3-4556-8c87-6d3ac18590a8"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6abc6bb0-1a3b-4afe-81e4-c5519bf65936"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a78aca01-a745-41d9-92d8-f0d87a8dc50b"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("abd603a4-e127-4f74-a975-03598977ac85"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cb2b6c59-aaca-4644-8f2e-bd7d88077249"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3980fc34-1e7c-42b5-bc7a-107115a1c990"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("eff2e444-a534-430a-8bfc-2cfba013379f"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e55ae2a8-e0be-4f0b-a249-feed208d8c4f"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("380db9fe-fdf1-44b5-b92c-c53fe4b53f32"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f5fc0105-6bbe-4cae-915b-b9cdbe57be2e"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5e28e3dd-8437-42ab-8072-056a9fcf0e2e"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2db70921-715a-4ce1-883d-d9706b2e549f"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f4f5b445-219d-4f1e-936f-b2294c194161"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3dd8b1b8-12f2-44f3-ad56-2d6cf0483e40"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ace7e377-c0c2-4bd5-abab-ba2774e7d5b7"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fef49601-61aa-4335-8502-d9a8f120d564"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7197136c-bad7-47a4-8b00-ebd084157798"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c9862634-9bb1-4789-8f05-0137b0dd8694"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("76ed401e-5704-4d45-bf78-a855b5a393ff"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9daad252-3548-4dca-984a-c8036f4dd44f"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2be0ec55-fc40-4e64-9053-68833438132c"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("611ffa5d-3e0a-4d04-b7d4-ab49ec0441db"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2afc7816-1017-4106-9ac2-699f4bf17b05"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b9e6ff2b-7d3c-4300-8df4-556bfba7dc5b"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e11761e5-b56e-438f-88ce-c2935db9f9d0"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3b15d559-d970-436c-990b-f071904b452b"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b058ec23-1b9e-486d-860e-3f6171502f28"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d47760cb-dbf1-49bb-a421-2a2883c33e1b"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("83ca156d-0163-46af-b989-f69dcb289964"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2844ffc8-1452-4e51-a76d-90b604cc87f9"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f5229878-ceb8-46db-9905-222bddd24fb5"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2894902d-ee42-427a-a127-ae50cea91d64"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e88e8fb5-f9f4-4cdb-8f20-3186038dcf78"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a032b18a-4d78-4a38-b830-29bdeb54e5b1"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ceb67489-162a-4457-9808-58287887b2eb"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5fd75b1e-51a7-40c9-966a-2451c7b15bb5"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b084f967-c8b2-4459-bc8f-661ec7e1a0f2"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f7ddf20c-1ad3-44b8-a097-20ede00a40a5"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("240b3ae0-068f-4a61-a3bc-d70a63a52858"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d7dcc49b-b6ba-4433-a1f6-ff08b4875098"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9e3eafd6-ac56-4bfe-b1aa-4b41c1a6bcfd"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("62c3ad93-437c-4fa4-9fe9-9aa3b4000e5d"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("67f79df2-4e06-4f10-87ae-165813fe5104"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("01dfb491-f330-4441-a977-ed822ab3179d"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5e1830f7-c098-4830-b6c7-0a5f0f486b56"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4db03d1d-3cbb-4f89-8a20-7c0a14e8abc1"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3b694462-c5e2-4707-ba29-37b6c7932876"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3a74c610-5036-4f28-a153-bb7b06b343c5"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("417d2d3f-4949-4f97-947d-275c44aed8cd"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("70067cfb-4a27-4d0f-bc60-2faa82ad3328"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e23664b5-c500-48dc-9773-7ead90b183e3"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ba33affb-edef-4c24-94bd-05e229a6e292"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f05a2ea9-a05d-4358-9586-adf27aecf162"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("49704293-fe35-420a-a41a-6c921be37719"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("acd61c10-9906-4947-89a2-f65e205e03d1"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("583f56ae-0b22-4e60-963b-c8e3bfa3c171"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5d7f961b-6339-4fe2-8b48-b53f46aaf64e"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("43861e6a-4f11-444b-a04b-a7163c4f956f"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0dc7793d-aa69-47e0-b89b-19cec7bee733"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1be88a39-a1ae-4b47-b319-a390b492cc06"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fc282267-008d-4371-8a07-9d04b1eaa8a3"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6b6987b5-7b62-44f9-876a-a79915808bbf"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4b86304a-e7dd-412f-9ce7-f23f3d7d3a3f"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4c3c507f-50e0-4963-bdd2-87806cdb44db"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0fd2b6af-42c6-490f-bd89-a99bc7f5e50c"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b091f1c2-c710-443a-adb9-f7eb99d28e3d"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9d8361f4-5f4f-400b-9b88-a52c54c40597"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d2e8cbf1-fe16-43c4-9e59-c70badb9e50f"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("89147adf-0a04-44b7-981e-866ec1734773"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9f45b2d0-9edb-42fe-90fa-31a4cc06db0f"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("279679c6-9911-444a-bf01-010bc7482fac"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5c12e0c6-ddc3-4a47-a91a-7b3f17e4a136"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("785b3dd4-ebfd-4612-b9e4-a43803c04d94"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f80b8f3f-20be-4b4e-9628-e5160ffe2e93"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1d5493a3-5188-4a5c-80f2-a4fc828342d4"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9040522f-bae6-4800-9e99-32d6b528f7c9"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("61e781fa-51de-477f-b2f9-c66e92ba3473"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ad7f56bd-d0ad-4681-956a-de9d080ab1aa"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ef95194e-dd91-4c19-ae6d-b61ac7d7358e"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b5fcff0b-d97c-4a8d-98d5-3b637433b028"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a8980432-d4d6-4e1a-9b78-e260a2ce73c7"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("69ba90e2-c055-4f75-b4cf-1467066b99a4"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ae9a41c6-10e6-4430-ae7f-ca85b00c8ccc"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e23ff475-8427-4675-94fe-2be6b1e4b0b4"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("85539c17-026f-49b6-8792-d047d43bbc36"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c2e7ba95-3583-47c0-bee7-842c6b6168d9"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("79dee2bf-d761-4824-8fa7-6a7892c03a20"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a664cfce-41c2-4f22-99e9-a2f307f605a8"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4c7bd4d4-0271-4426-8faf-81014deb1e4b"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1ec95423-7795-4aab-bbec-6659052d34d7"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("845e1653-2fb5-4de1-b5fd-bfef7563828c"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("08b53a1d-bd3c-474e-96ea-fbc291f6571e"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ae5c9a06-6fc8-46cc-b04d-244220fcaa02"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("851c6a5f-a81a-4ce3-8c3d-fd088c115d59"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f3b00d66-d28f-4700-b75c-8d5c714054d6"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("39212356-aed9-4f9b-8b66-7b7e1162a089"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c0dea2fd-7bca-4802-ad47-ff5feb740777"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cc97f46d-22de-4346-87ee-0e071e004ef6"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8309cda2-688f-4115-907c-a3395a41bd21"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("879987f0-153a-48f9-82a1-1e46a0b62ba8"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c11bda5b-3e39-4ab5-94b8-7226444740ef"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("810e73a3-46e9-4e7d-9b2e-7c8d0ddc498c"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bd030ab8-3eaa-4bc9-9ed9-dd8e252b51c7"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c27bf718-aea8-4e35-b10c-b802ddee03ee"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("06d02604-c478-43cd-953f-66827bf629f6"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c9c80c8b-e24c-4644-b0d5-23b2577ed3fe"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("67cb4d60-b5f9-4b00-8bad-31e2c73e4f7e"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c6ae1c14-e2fe-4502-9226-7d4294c56d62"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("902b68d1-1f64-45ae-b054-61e206b0976b"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("31c27497-81d4-4c1c-abe8-2ccc2dc95b2e"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("be6f01cc-9659-4e20-808c-a94a13d1f660"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("39f65c16-5895-4086-831a-476c4ce9e258"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("789a80b2-a937-4d2b-bbcc-7f672421558e"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0194f9d4-d881-432b-a6fe-1bd834e61b35"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f085015b-70f5-4183-bc39-e845bcf235c7"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c40bf605-7d43-4930-a4e1-b8663413937c"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8437e942-cbe4-45d3-a83c-6ce4efdca8e6"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a711b3f5-3ac2-46f1-b3de-8c8e4851b47c"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("989d918c-e0bb-4e24-9325-7fa99205bab9"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9d95ae16-cad6-463d-b66e-8f72c5b20484"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e379e5d5-233b-42c7-b511-617ad15ebd4e"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fbea6aa9-b3fe-4520-8440-1283550dc66c"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("907e9b86-37ee-452f-892d-3f154c6b6e60"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("662eb1e0-3935-4852-b278-7a16f0aac705"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("191d2047-8c11-45d2-9c69-a81bf2829d5f"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bc575380-f173-47cc-8689-66e54315a3ba"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1353f4ca-ef18-4c03-ab1c-b806621ee162"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("45b1db02-18b9-48d0-bbd5-c9f7e94da252"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e992bc43-f67f-43a6-8e50-4d4c27366b5d"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cb84d238-feef-4ca8-83a2-63088fc1c712"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0b6c4eca-9661-474b-afc6-f010096be682"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e1e06e98-0bfe-42ea-a79c-7c8c5b71eaeb"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7654fc9d-4ed0-4b97-bb70-7e7e033212e4"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("55b8a42c-8c9c-4cf9-8795-0ca4dfbebaf0"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4c6ad34d-c012-405f-a15c-6a310af9851c"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("de984dfe-ac16-4d6e-ba92-c911b4de656d"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("274f14c9-c726-412a-a92f-6d05650bcc53"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4672a7be-6de8-4b4c-90de-a5abca4b8a9c"),
                            Column = "A",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3ed5c325-484d-4a0e-b5f8-47352d8194a1"),
                            Column = "B",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8453fa3d-c030-4225-8954-7b99740b984f"),
                            Column = "C",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c5f92988-5cfe-48b7-961d-fcad43762f17"),
                            Column = "D",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4348d312-c6e0-4128-8ae6-9035910ea099"),
                            Column = "E",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("36fef0f1-2904-4686-bfd6-1e36ed33fcf5"),
                            Column = "F",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fece896c-6454-43e0-83a8-e0a452107b2b"),
                            Column = "G",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("258810fb-a1c3-428d-b5b2-46654f2795e3"),
                            Column = "H",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0f89ae7b-71cd-48ad-ad10-446b59ddb0bf"),
                            Column = "I",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("44fae659-46f4-43e7-984b-711b3d07d12c"),
                            Column = "J",
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5214),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("8717eb7b-4664-40ce-b39f-3ab38084b717"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5217),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("f7a9bc18-3ea1-4220-a37f-a1ee7ffacaea"),
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(5219),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("37e1dcee-879e-436a-9686-fb7fdd76ff22"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4e56ae66-6d47-4845-8117-e2710051ed83"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ae7b29a3-da9b-4b46-8240-0f72e2d86269"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d4ebf1fb-e06b-4fa6-9828-59f3552a09b7"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2fa9dda0-32b1-4534-b3da-27aeb2da0c46"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a253a506-bf10-4665-8430-e2a1e2e7e605"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bec15caa-9929-4a16-89dd-5e7558b459ea"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7119381c-0c9a-4da9-b5b7-2c081712b71e"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cc1f4832-a921-458e-b7fe-588f0a1d17b4"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9b8337f7-0a1d-4f9d-a5e9-f58a774d0ef7"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("800155f1-c2c0-46df-bbdf-96de70396dee"),
                            DateRelease = new DateTime(2024, 12, 5, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6017),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 4, 11, 27, 27, 425, DateTimeKind.Local).AddTicks(6013)
                        },
                        new
                        {
                            ID = new Guid("f2dcf050-eaa0-4bff-b4df-576737d750d4"),
                            DateRelease = new DateTime(2024, 12, 6, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6024),
                            MovieID = new Guid("86736908-a3aa-4645-a292-eb7b26c4b935"),
                            RoomID = new Guid("471e33b7-0d25-44e4-b2cc-f6991fec8db2"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 4, 11, 28, 27, 425, DateTimeKind.Local).AddTicks(6023)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("9c253c50-542a-4ad9-b9fd-1e41f6b6526f"),
                            MovieID = new Guid("d90fdffa-fa8f-4871-a057-636cf571d619"),
                            Price = 100000m,
                            ScreningID = new Guid("1619d12b-fafb-4f95-bea6-6fae713d5095"),
                            SeatID = new Guid("a9778c51-ee6b-4bc0-be59-776e495fa273"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c85cb4c3-6d68-4c86-adfb-b0bcc38c839d"),
                            MovieID = new Guid("86736908-a3aa-4645-a292-eb7b26c4b935"),
                            Price = 2100000m,
                            ScreningID = new Guid("10de605d-9e95-432f-bead-f3b1049e32c2"),
                            SeatID = new Guid("db01fbec-f488-4f07-8c32-7048a225c27f"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a07c6418-88a9-480f-abd9-edb3a4fcea3f"),
                            Price = 50000m,
                            ScreeningID = new Guid("1619d12b-fafb-4f95-bea6-6fae713d5095"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("37e1dcee-879e-436a-9686-fb7fdd76ff22"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("a7c79796-4d90-4f09-ab5a-3efbbd04141b"),
                            Price = 60000m,
                            ScreeningID = new Guid("10de605d-9e95-432f-bead-f3b1049e32c2"),
                            SeatTypeID = new Guid("8717eb7b-4664-40ce-b39f-3ab38084b717"),
                            ShowTimeID = new Guid("4e56ae66-6d47-4845-8117-e2710051ed83"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge3D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge4D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60000m,
                            PriceAfter17hWeekeend = 70000m,
                            PriceBefore17hWeekDay = 50000m,
                            PriceBefore17hWeekeend = 60000m,
                            Surcharge3D = 30000m,
                            Surcharge4D = 40000m,
                            SurchargeCouple = 50000m,
                            SurchargeIMAX = 50000m,
                            SurchargeVIP = 30000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a346656c-9d3a-4a8e-8b11-716e505ce33e"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4378),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bb2e847d-653e-4d81-bd86-ee657b7c8c37"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4746),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5e16021d-8a76-44d6-9d24-0454abafd5cc"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4772),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6ca66297-0bc1-4626-bbb2-d4c13919117d"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4794),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("841bc285-c4b0-416f-be0c-721b04ea77f7"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4814),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6f8fa817-a327-4658-a485-3317e3d35389"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4853),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ec8a14bd-8bdf-4bf6-82bc-2dc53cbff9ca"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4876),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4d8822df-e584-4a41-acdf-59ee82e33fcb"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4895),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2bd50832-ca9e-4906-9ddd-254cb18ed9f6"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4915),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("300e5932-ed4e-4293-9cf1-dd51d66c3d93"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4935),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f17ad8fa-c4cc-4c7a-a094-263a9aa89c23"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(4954),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("71f629cd-4d09-4ec4-82de-2e9904904f31"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 12, 4, 13, 26, 27, 425, DateTimeKind.Local).AddTicks(6387),
                            TimeStar = new DateTime(2024, 12, 4, 9, 26, 27, 425, DateTimeKind.Local).AddTicks(6386),
                            UserID = new Guid("a346656c-9d3a-4a8e-8b11-716e505ce33e"),
                            WorkDate = new DateTime(2024, 12, 4, 11, 26, 27, 425, DateTimeKind.Local).AddTicks(6385)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", null)
                        .WithMany("Screenings")
                        .HasForeignKey("Show_releaseID");

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
