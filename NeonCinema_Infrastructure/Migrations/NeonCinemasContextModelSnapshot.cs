// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    partial class NeonCinemasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("c809a17d-ea49-45f7-9be4-f1612101b715"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3917),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("b138cd93-ee4f-4941-9a88-a07e32b39b09")
                        },
                        new
                        {
                            ID = new Guid("627f667f-6dd1-4501-af12-29a80bb141f7"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3924),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("3cfd43ef-f249-4ab7-ac9e-553609f3d9d3")
                        },
                        new
                        {
                            ID = new Guid("93bfaa54-934e-4dd7-93f0-fc5c05f18037"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 19, 22, 650, DateTimeKind.Local).AddTicks(3927),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("c1211a01-29ec-4ee7-a011-cd9ad2164b02")
                        },
                        new
                        {
                            ID = new Guid("4b9cf38e-6457-45d6-a78d-296d7fae0f59"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 4, 22, 650, DateTimeKind.Local).AddTicks(3930),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("14e174ec-ce3f-4f7a-9d74-14e41a97625c")
                        },
                        new
                        {
                            ID = new Guid("98c0bb78-980a-4b0d-a135-1ccc4f3cf4e5"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 11, 22, 12, 49, 22, 650, DateTimeKind.Local).AddTicks(3938),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("84be52af-8292-4c05-8a2b-0f6b9a1aeb61")
                        },
                        new
                        {
                            ID = new Guid("6110a993-4427-4184-89ae-80ac4b19ade7"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 11, 22, 12, 19, 22, 650, DateTimeKind.Local).AddTicks(3945),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("a7c8044a-c0b0-43e2-9da5-55521ab27a68")
                        },
                        new
                        {
                            ID = new Guid("62940c88-b9ef-44e5-ba72-183751798df4"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3949),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("a7c8044a-c0b0-43e2-9da5-55521ab27a68")
                        },
                        new
                        {
                            ID = new Guid("7784e7ec-3a5f-4320-b0ee-2d5ed5cd4f98"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 11, 22, 11, 49, 22, 650, DateTimeKind.Local).AddTicks(3952),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("bdca9c05-e13c-49f6-9c92-6a73f493f420")
                        },
                        new
                        {
                            ID = new Guid("cae93145-47ed-49f7-914b-69776afed526"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 11, 22, 11, 19, 22, 650, DateTimeKind.Local).AddTicks(3956),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("4d52fec9-7fee-461c-92f0-5c07b9a76c82")
                        },
                        new
                        {
                            ID = new Guid("6b7dd135-ba43-443d-b270-196f27a10a0f"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 11, 22, 10, 49, 22, 650, DateTimeKind.Local).AddTicks(3961),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("2cf4fc41-d606-411c-97c3-fc994bf08b52")
                        },
                        new
                        {
                            ID = new Guid("01480894-7683-412f-9ce4-b0fd89f7984b"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 11, 22, 10, 29, 22, 650, DateTimeKind.Local).AddTicks(3964),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("dddc958e-f2c0-4c14-85b5-eece5d2bcec3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("c809a17d-ea49-45f7-9be4-f1612101b715"),
                            TicketId = new Guid("a8d54afe-93a7-4b62-bb09-e6111c16df72")
                        },
                        new
                        {
                            BillId = new Guid("627f667f-6dd1-4501-af12-29a80bb141f7"),
                            TicketId = new Guid("913f0326-1533-4b12-b600-d90e9302837e")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("3cff7106-f1d3-4363-b1a7-224424de90c0"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("968bd795-aefd-4b19-b1c0-0a306413414d"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("c1ba0f48-f3b1-48d9-b20e-667b67f64d1a"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("6117b259-7699-4049-bd72-d5630a82360e"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(2315),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("dc47209d-41e8-4e13-970d-c997e51d067a"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(2322),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("20e2448a-dae1-43cb-b52b-652974f0765c"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("8b025953-fb87-4106-8000-dadd6eb44dab"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("be26292c-d207-4504-91c6-e07a020694bc"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("575bd13d-4eb6-4258-ab7a-891196499532"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("e210b20f-a1a6-452d-bd99-b68fa3a86921"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("023cea70-9950-4fff-8c78-621842e190d6"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("e090c2b3-2d67-4730-a727-bcf998c05e7d"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("67cfeba5-8c64-4f42-98cd-152f8851e8d8"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("fde07115-88bc-41d2-983d-efb678ee24dd"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("53b1413c-8a97-44ce-9c3d-653b921f05d2"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d4e7d5b8-8aa7-4bc4-bd4c-133c2d92e78c"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9af6ac32-495f-4341-85b9-6fb7c138f8e9"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d59e661b-38bf-4c66-90e8-4433c6369f61"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3d3b6c47-4825-491d-9a4a-d7f1050882b8"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9aa71eb9-19f3-4a5d-8d2a-8956fd168785"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c8fbba22-6da0-4c13-8f53-6e162bbfbf37"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8691fa2e-94c9-417d-b5fa-393ed04fc504"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("662ad7b7-112f-42a0-9543-caa5b886422b"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("cfa6da51-7f27-4f9d-a9a0-282d430f6f00"),
                            Content = "Combo 1",
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 20000m
                        },
                        new
                        {
                            ID = new Guid("aa047db5-90b8-422a-88e6-6919518a5585"),
                            Content = "Combo 2",
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 220000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("07aa7d2c-dd17-4d76-9d63-71039f75994e"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("053ee2b2-be16-4065-97bf-402e0a53e3c8"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("4a0a0cfa-fb86-45af-a1a5-efd0cd78459a"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("bbc5bce1-390f-4f32-8b3e-2d018c5284de"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("147c2aa9-83f7-4fc1-ac85-a1d982f1b535"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("70e1e5b2-67d8-4a52-97b7-c0fc3da87c2d"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("ac5d60bc-0043-43b9-9f59-817c9cd34f9d"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("1c26f0e7-e309-419d-b7ab-d247c3e5ac98"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("5abbb3e8-9110-4932-9bd0-4bf817a68c0f"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "en"
                        },
                        new
                        {
                            ID = new Guid("5ef8ef6e-b2d0-4105-90fe-cfc5aac8b8c8"),
                            LanguageName = "vi"
                        },
                        new
                        {
                            ID = new Guid("a91dce54-b279-4cee-9107-8138983d76b8"),
                            LanguageName = "ja"
                        },
                        new
                        {
                            ID = new Guid("c4c7b819-b1d0-485a-9f47-9588892a1bfd"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("f3ee53a1-4b17-4fcf-87c6-ef1b71fff555"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("f0511b15-375b-4deb-b831-726a0c6a59a6"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("55a4ac91-39fc-4e96-9ea8-9ccbfc8a4373"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3414),
                            Description = "Hành trình cảm động về tình cha con giữa Sài Gòn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "bogia2.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Bố Già 2",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=bogia2-trailer"
                        },
                        new
                        {
                            ID = new Guid("e444aa6c-29ca-41b4-b6b7-ee24a23eca5a"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3428),
                            Description = "Những mâu thuẫn căng thẳng giữa các băng nhóm trong thế giới ngầm.",
                            DirectorID = new Guid("53b1413c-8a97-44ce-9c3d-653b921f05d2"),
                            Duration = 120,
                            GenreID = new Guid("07aa7d2c-dd17-4d76-9d63-71039f75994e"),
                            Images = "chimuoiba.png",
                            LenguageID = new Guid("5ef8ef6e-b2d0-4105-90fe-cfc5aac8b8c8"),
                            Name = "Chị Mười Ba: Cuộc Chiến Nhân Tình",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("e083ddce-cf0b-4acb-8d85-ae1522b2be7c"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3442),
                            Description = "Cuộc sống đầy biến động của một gia đình truyền thống Việt.",
                            DirectorID = new Guid("d4e7d5b8-8aa7-4bc4-bd4c-133c2d92e78c"),
                            Duration = 110,
                            GenreID = new Guid("053ee2b2-be16-4065-97bf-402e0a53e3c8"),
                            Images = "nhabanu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Nhà Bà Nữ",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=nhabanu-trailer"
                        },
                        new
                        {
                            ID = new Guid("2be5c82d-566c-4e6a-a636-c7b7f8d90760"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3453),
                            Description = "Cuộc sống sang chảnh và những bí mật động trời của giới thượng lưu.",
                            DirectorID = new Guid("9af6ac32-495f-4341-85b9-6fb7c138f8e9"),
                            Duration = 140,
                            GenreID = new Guid("4a0a0cfa-fb86-45af-a1a5-efd0cd78459a"),
                            Images = "gaigialamchieu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Gái Già Lắm Chiêu 6",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=gaigialamchieu-trailer"
                        },
                        new
                        {
                            ID = new Guid("4ab10d5f-67e5-414a-8f59-f59a48b1441e"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3464),
                            Description = "Bữa tiệc đầy những bí mật được phơi bày qua trò chơi mạo hiểm.",
                            DirectorID = new Guid("d59e661b-38bf-4c66-90e8-4433c6369f61"),
                            Duration = 125,
                            GenreID = new Guid("bbc5bce1-390f-4f32-8b3e-2d018c5284de"),
                            Images = "tiectrangmau.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Tiệc Trăng Máu 2",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=tiectrangmau-trailer"
                        },
                        new
                        {
                            ID = new Guid("770d9a8d-78a8-417d-8f64-2914c6a45f1b"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3477),
                            Description = "Hành trình sinh tồn đầy kịch tính trong khu rừng bí ẩn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 115,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "rungthemanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Rừng Thế Mạng 2",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=rungthemanh-trailer"
                        },
                        new
                        {
                            ID = new Guid("c6db356c-8e69-49b7-a0dc-35be6702973a"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3486),
                            Description = "Câu chuyện tình yêu đầy lãng mạn và cảm động của Trịnh Công Sơn.",
                            DirectorID = new Guid("53b1413c-8a97-44ce-9c3d-653b921f05d2"),
                            Duration = 150,
                            GenreID = new Guid("07aa7d2c-dd17-4d76-9d63-71039f75994e"),
                            Images = "emvatrinh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Em Và Trịnh 2",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=emvatrinh-trailer"
                        },
                        new
                        {
                            ID = new Guid("7638a948-005d-4982-8e8e-036ab9e56bc0"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3494),
                            Description = "Tiếp tục câu chuyện tình yêu day dứt giữa Ngạn và Hà Lan.",
                            DirectorID = new Guid("d4e7d5b8-8aa7-4bc4-bd4c-133c2d92e78c"),
                            Duration = 130,
                            GenreID = new Guid("053ee2b2-be16-4065-97bf-402e0a53e3c8"),
                            Images = "matbiec.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Mắt Biếc 2",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=matbiec-trailer"
                        },
                        new
                        {
                            ID = new Guid("c87bc449-7804-46f9-974d-083af5f28e42"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3504),
                            Description = "Phiên bản Việt của Người Nhện với những pha hành động gay cấn.",
                            DirectorID = new Guid("9af6ac32-495f-4341-85b9-6fb7c138f8e9"),
                            Duration = 145,
                            GenreID = new Guid("4a0a0cfa-fb86-45af-a1a5-efd0cd78459a"),
                            Images = "nguoinhenvietnam.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Người Nhện Việt Nam",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=nguoinhenvietnam-trailer"
                        },
                        new
                        {
                            ID = new Guid("169fd978-6ac6-4961-8215-7f84682ad3ef"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3516),
                            Description = "Những câu chuyện tình yêu lãng mạn tại Sài Gòn mưa rơi.",
                            DirectorID = new Guid("d59e661b-38bf-4c66-90e8-4433c6369f61"),
                            Duration = 100,
                            GenreID = new Guid("bbc5bce1-390f-4f32-8b3e-2d018c5284de"),
                            Images = "saigontrongmuaroi.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Sài Gòn Trong Cơn Mưa 2",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=saigonmuaroi-trailer"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("4efccab0-5b52-49b0-8491-25cec841a19a"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0cea9a36-d057-43c9-a3e2-4571f3cbdd44"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("bb0fa470-b9f0-40f1-a287-a9dfdc4461af"),
                            DateEarned = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(4148),
                            TotalPoint = 50,
                            UserID = new Guid("b138cd93-ee4f-4941-9a88-a07e32b39b09")
                        },
                        new
                        {
                            ID = new Guid("6460f5c2-e98c-4272-b227-c3f62aa82ba7"),
                            DateEarned = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(4155),
                            TotalPoint = 150,
                            UserID = new Guid("3cfd43ef-f249-4ab7-ac9e-553609f3d9d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a4d85645-95ef-48ec-92cd-56c075c00e42"),
                            MinPoint = 100,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(4051),
                            Status = 1,
                            UserID = new Guid("b138cd93-ee4f-4941-9a88-a07e32b39b09")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(754),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(780),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(787),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(2361),
                            Name = "Room 1",
                            RowNumber = 0,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(2369),
                            Name = "Room 2",
                            RowNumber = 0,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Show_ReleaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_ReleaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("9b4f7532-79ee-4c96-a85d-14f3ac8f013e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3610),
                            MovieID = new Guid("55a4ac91-39fc-4e96-9ea8-9ccbfc8a4373"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 11, 24, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3607),
                            ShowTimeID = new Guid("1369a3eb-a1fd-4da7-ba70-7ab3c3450a53"),
                            Show_ReleaseID = new Guid("d781d179-3ac4-4674-9d49-2f73f8f3ff37"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("87eb3673-5dbe-498d-9c0f-56033e37d6c1"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3620),
                            MovieID = new Guid("55a4ac91-39fc-4e96-9ea8-9ccbfc8a4373"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 11, 26, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3618),
                            ShowTimeID = new Guid("1369a3eb-a1fd-4da7-ba70-7ab3c3450a53"),
                            Show_ReleaseID = new Guid("d781d179-3ac4-4674-9d49-2f73f8f3ff37"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("f9882a79-ad9d-42bf-ab99-484e391a79b5"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("343ab268-91c5-4537-a895-5cde175b711a"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ef0f91ce-d76e-4f2b-9fba-15862a942d3d"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("32ee7ee4-4d84-4858-8b9d-0e9b4668d516"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5d5bafca-1478-47b6-b12c-6cb1b99325f0"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9d9d4009-1c88-4c74-b469-2c2f6aa804e5"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e8583431-5184-4b12-a470-38e8dec48b07"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("212b7050-2a07-4337-8143-372e551a4b6b"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("99aa2ae2-f482-49ff-a331-fd576cdb8c8e"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("813e6f17-2ecb-4885-9706-27d430486839"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ff2452c9-e67e-42fb-a062-5836a258e3a7"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cab206e3-46c5-423b-a5ad-cdf4cc4b30da"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4cac1b77-73e2-4243-b0c6-36275a62e07e"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7944e75f-45ee-4a82-8422-8838f777d354"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f7e3d259-ef12-4770-969d-ae516d5a217d"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b4ef87f3-9a5d-4e9d-80f8-bbf44c6123bd"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cf00ef38-686a-491e-b042-e1c76ea9957b"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4a9a36a5-2da3-4a23-bd8d-0783b08b91a5"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("aeee83dc-f005-4bbf-a9cc-094c0f821447"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e3e86f20-81cf-41f5-8071-a29a3494b4d4"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("11ccc609-623a-4b78-acc8-c0b297f7aa93"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e9c68579-880d-40ab-b939-8553990bd146"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8b644123-cea1-4847-a287-fa7b94c5329a"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("649eb8d6-3143-404b-b224-9e21f2d606e3"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("16a2b6b3-9948-483d-99cb-9a7eb7bc9cce"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("93fdeb1b-ccfc-4329-8ea7-af48a5f1959a"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d46cbc79-b14a-4478-a826-ee4f99987dab"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("191e0c17-52d1-47c5-89c9-23877ed97eb7"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fa081088-ed48-404e-8802-de2ad1202ed5"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2bcae8e0-a0e5-411f-9f45-f97fdab87c90"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9c44dc51-cd06-4711-9f1e-6b2926a803f1"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fae58ba4-5243-4bd8-866a-f37a89e2c88d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ea635520-1a85-4f7c-9a15-e94bc49e6f8f"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cd5ef85b-b0a9-42f8-95c1-74209de29bba"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a55cfbab-5061-4d1d-a279-037c27232c67"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3d7b9f9e-9881-42bb-888e-b8634dd0975d"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f9db0a2b-ce09-473c-98ab-f1d26eae8939"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7f97792f-8362-410f-a1ce-07a45d0e3c50"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("264b50e6-4032-4c0a-bfe7-f53c5d0cf5e3"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1c495e0b-ea76-4823-9032-39cd7aa6f9a9"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2afcaf7b-c591-4726-925e-e2e956917185"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("49be70f0-fd2f-460c-853a-1e070c63bd64"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9931782a-de88-4183-b7f7-ffc6c2ca95a3"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4149ef7d-d2dc-46a8-ba40-ba18eab3587c"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1d904b6c-ac93-43ad-b6dc-968c60be5212"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3e609606-d9b3-4f7c-b3cc-d6ebab913c2c"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c3ed5ac7-44dc-4380-8852-acb9c81ff1e5"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("00f1f7eb-f0ef-4022-b73b-6d676569c33f"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d9fcf40e-deb7-43c1-a118-e695a9929e03"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8b03c38b-ddad-44d8-a135-1c9a8ee6c764"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cc34aa04-8dff-446e-9d97-3c5096d12e45"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1931b706-ca5d-48d6-868c-e634ccb6cd7b"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("16157c0f-4b31-4f8a-b26d-a01b7f7dfc0d"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("10a274e9-b770-489c-b168-e6872ec7ae5a"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6aec0ab1-cec9-4f8c-813f-f8d74d44e208"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("053f5cd9-c3b7-43bf-a183-d328b3786b5b"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("107ee1e3-004f-411c-a20e-d3be5edf0169"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("afe63e24-de1f-454e-a1b2-b2930da0c395"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("181c8426-5781-4830-b002-ff8506f6e457"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0a219caa-2568-43fa-9c31-0bc146ede645"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("18da639a-af4e-4a6a-afb9-f7a430eb647e"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("da89e5df-41ba-45c8-be7f-37f074e6341d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("57662235-d9f6-4709-bae8-00c647cc474c"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("79cd6fe8-7770-49dc-9f9f-bdebd57a4d93"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("29dd7db2-fe56-4286-be8a-9b1a8382b5b0"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e8fd8e6b-9ead-4768-b501-3ff781140a62"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a13e8a1a-1591-493c-9bb0-970adb524b21"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("afd6a9df-c3a6-47b5-bf9f-41d809f62aee"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("42f47ee7-8695-4b4a-a076-6c51f95c0cd7"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c824c035-009b-430a-a5b5-1c53d9f69811"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0ab60795-1303-4d67-a759-001b40e63377"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0f1fb18f-fa11-4c5a-8157-67701fb04261"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f70d70af-4750-4128-9cbd-182007a7ff71"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5754804e-e736-4da9-900f-8111eff3dfd5"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a9c432ad-1e41-48b9-99a7-1000b4eaeb59"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("917def69-eb74-44bb-bc7a-dfcb82abdf1f"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5fc9d005-dbd2-4dae-8ff0-4466b5a08f42"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9c066e28-8fd4-45c2-8b8f-820212dea858"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c43a409b-290d-4908-8cc9-e2faa7ccd2b5"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("62d8ba85-67eb-4c40-b096-4bfc64e066cb"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("288e5b4f-4158-4f90-8c86-d293eb538630"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("10571dd9-8030-4bfe-b33e-1c95526ffe76"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4d97e412-f594-4237-89ff-71b5cf8447eb"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c0617c4f-6033-4a76-a083-de33843ff1e2"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("771fa63c-4cb2-4f71-b556-d9c04bea096f"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("27f83c44-0d22-4de2-b00b-630c6ef5a02c"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3c3290ca-416d-477a-bfcb-4e892d1d6f09"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("15b6cbcb-2620-4678-a789-b5263d62b111"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a9212dc7-c4d0-4dcb-a597-5ec543dae243"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("508b77ab-3f92-4b3a-a307-9ad9659efcf1"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("582119c4-e5ba-4b07-a4e8-0432d0319869"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("80a3250d-f35e-4ae1-990f-948a9a1f0631"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("bda61e9a-bd17-44d5-8f74-798c9190c8c7"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6343affa-6002-4acb-92d3-f3e72d07f427"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2d8f040e-8969-41d7-841c-ecbe7d1870ac"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1cf82a4d-eb90-488d-a3a7-1bc873b1cd54"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e9cfeefd-964f-48a3-97b0-4dc980c68027"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3be30f6b-304d-4300-8f0e-12aa72fbd141"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b97e1aae-4a3c-454b-ade7-62299a78fb2e"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("65838305-c143-4445-8534-21403f41a3a2"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b9fc4a45-f611-463c-a88c-a669ff1a9930"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d7a1fd82-882c-4ec3-856c-238b83f785bd"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d83c0091-5a8b-438a-a2d7-0a4a88452965"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("cfcda634-9690-4c95-bced-492db97e34cb"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6a4fedbd-83a9-4d76-85bf-1140b243f008"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a0e10ecf-0ed1-48f2-89cf-7fd8ba0e76ce"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fe296ab6-2b17-4504-8597-cee9c0a6cd6d"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("91d84008-6c2b-4266-a627-6bde485dc55d"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8dde7137-465e-48ea-b253-14a55dec4ab9"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("93016de9-9b6d-48dd-a59a-53fa26df16bf"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ab68beaa-21b7-41b0-aad8-b688a0f06095"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4bc7ca3c-4d8f-41e7-967b-0339ce6e03b1"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("05163e07-8f3e-46a5-be03-6650ff876211"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e5451988-c100-4641-aee6-f129f2d92055"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4379887c-1d01-4a4f-870b-08d9e1ed715f"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f20c23b1-c0d8-4695-bbf1-df6990f04fc2"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("81dd7a26-0a65-4f54-b197-df2b666dbcaf"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("dc1c0c02-4a15-4a14-9070-6790a9023f40"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c934a57d-da65-411b-9e8d-b1cc8e13026e"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("00389ed3-dc87-4b98-af51-45cf406129d2"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9c8225be-939d-40e9-a3b6-540137e077ea"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("95275c1d-5e37-4191-8540-dadcc05b6e5b"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a4b4c2fb-733f-4be1-ba0a-22cb46d7da22"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2d28fb23-e679-4bc2-b04c-69d0d74e9bff"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("017db34b-3b9b-4c0f-b410-e9490ce94b1b"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8e207522-c90e-4fa0-af97-9b517cbf75f1"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("99428314-80ab-4129-b1bc-1470fb634e81"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b6e41779-0b60-4e95-977a-7e9bbad3944f"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c9cf2206-79d0-491a-bb62-0d11a5ea6115"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("86e5141b-95f6-4dd8-b1f8-8914a89278ab"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a80f302b-fe83-41e5-b698-996be93d1ae6"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d86366c8-cf28-46c3-b2d5-8592c24a04c4"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("19ba5e4d-d00c-412e-b38a-3615e6f6f1b4"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b6a4f52c-759c-461c-93a7-fd0dea282790"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("0ae0b837-dc34-49b4-af00-4b4e1eecfef6"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("eaf95ebf-8c30-4239-a801-71ffe48ae46e"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("14da7d7a-3581-4e91-b380-582a43f72cf5"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e942ddd3-893e-4b00-81bd-b4ce4de8f56a"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c371fd38-23ba-4b09-8c10-cf84fef89570"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("75d95faa-e5a3-43d3-92ef-2a925b17c5c3"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f59c5e85-18a6-481c-8d6f-b657ab6df422"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a395e2a7-728f-4896-8dab-87ffa19f84b7"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3a64f557-f434-4239-9ce3-7f32cd651faa"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("53820b93-b3a7-432d-a613-b5e038c0190d"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f8d909c0-2820-46e6-814c-b16548dd2511"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("73994edf-7b41-4b8b-bf59-85a67f3176d3"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8861ad34-6809-4ac8-9b24-02f7a8e9e093"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9a73af3a-668f-4f9c-99d6-7b3e79c6c003"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a88080d3-db9a-452e-ba59-c6256a22b039"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("44855c67-4508-46fa-bf74-378613291a5a"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f2e64eaf-87fc-4289-8833-ec079febd2f7"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("62d7a539-7226-4a65-907b-534d1803429d"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("792d9e23-434f-428c-bbf5-69a518e28e7d"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4327c4b3-16ee-4d1e-8be1-4abacd0de361"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f0a68b00-a9b9-479a-a396-12cfb8ca08e4"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("59cf69c4-555e-4351-8f04-12e7cc88b811"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("79f5eab4-d19a-4332-967c-eebf1fe08228"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c5ee1630-8858-47dd-ae6b-44279b8660a0"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5c86bcf9-d32d-4f64-a7ce-ff7fcd9f2be9"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f52255f6-9dd9-4d95-8d14-efd0957c35b6"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e118136a-5e8e-420e-b2bb-36588568b05f"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fefe1711-afb3-4634-a7ab-7e0b4f01e3c3"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c77ec69c-566b-4b37-b72d-682b7b19dc94"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a160583a-df0f-4071-a98c-ce85b4a4c1fe"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("539b561e-3624-4457-a100-b6a266e6dc2f"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("11c478c7-797f-4c23-8905-247ba4551d50"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9721bbea-e8fa-47b7-96f5-5daf01b940a1"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("96f2ce1f-4216-4b4b-b4e3-77dbda7ea874"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4e6a354b-b639-4e85-a568-f7cb64e1be60"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("294b5c20-254a-4677-becc-65944743e8c9"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("43524099-e478-4d8d-90cf-a306b31d39b9"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("30ff28c7-ae17-4e33-a71c-ff43095c4c75"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("85c6e55c-1bed-4fa0-a701-34329e40d577"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("892f816a-fba0-4c60-888a-b980232be2e0"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("36d15942-5f61-41b5-a52e-96ba6dfd8c74"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("59013bfd-2fc7-4077-848d-d272007299ab"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("46737410-b3e8-4229-b4df-1173a7043b06"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("71dd26c3-874f-4af2-94ec-a1295c0ad7dd"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c1a4644c-ead8-40ed-b444-20bffb55db55"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a08ead39-1bbc-43f6-a38f-d4852f953a8b"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d81901b4-7e23-416d-b7d6-79fd74a2ec4d"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("a0cad77f-025f-4fea-8525-6bbbdd6e6cad"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4501c526-4393-48f1-964c-ab72445671c9"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f8d8030d-ad34-442d-ad1f-0182c64ff718"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("435f2adc-ca7a-46f7-9b27-85ba0b79faff"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3c9a1374-d217-421e-b5ea-16fdda33ce21"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("22c8ce74-cd75-456b-abcd-61e1051b1bb7"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8eb54ce7-120d-4461-bf5e-5fe7f626e0e1"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("3087194e-2413-4db2-a869-784404f1be83"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("360ca5e5-ddb2-4e0e-986c-b9f9aec515eb"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("91f0c9e5-10b7-4dfb-9adc-1e422f2f2e1a"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fe57aa94-75d4-4f18-af28-09783bb444e5"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f60f4051-4922-468c-83d8-93271663338b"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2e1fe4d9-256c-43b5-a1e4-a1b44475fb3b"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e71c7128-fb29-4345-8a08-98c8ade3cd98"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("abdef1dd-07d4-4d03-9a8f-613e00e07fac"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("63182338-cb23-49e9-b411-7e3a0ffc68dc"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6b4547c5-198f-41fe-bfc7-fb3839e29c0e"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7357ec64-a1f6-4c01-90af-4efe90948436"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("4ad3135e-538b-42d0-b08d-c52915ccb2d8"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("25b0ad7e-dd79-4b03-a6c3-87481b1641c0"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d559d6a1-029b-4d08-9142-7f79b68c846e"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("167a113a-1aef-42c1-8e05-60f2b0196b39"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2e795832-766f-45e3-9f06-81402abef447"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f46a27bc-fef0-4072-84b1-b4152542ef42"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2226f2ff-dd63-49f6-9678-326a655320ac"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("dd9890ef-6d3e-44ef-b791-bf3f8a6e2010"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("498203c1-b87a-4215-9634-3ebd8e2442e6"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("acaa01e1-9273-48f1-928e-dab6be13cf58"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1193893a-7b44-48f9-93d6-cecf59929407"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b51798a7-1b95-4a24-a4f7-7ae26f57c252"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("69be9f16-6c5d-4c2b-8d6f-557bcd99540b"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d08a1b99-4874-447d-861d-4c9c0637b7cf"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("d46928ed-a9f2-46ac-b06e-285faaded8b8"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("6bd798f2-09b1-4c4d-9a9c-adf422b85257"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("847a22bd-35a5-4aa9-b397-5f1911ffd4ee"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("eaa13259-23e3-4706-b9ae-ad85c24d6fee"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5f2e8fc9-5c6e-46b1-a7d9-f9175cb209ca"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5611a8e7-68b7-443e-b617-d428a18c8366"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("30bf6b26-c026-4c3f-af2f-4c7a273f30de"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c3507653-f296-40ac-bf8d-fb614c751235"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("2b32a7c5-9224-40a1-b44e-88a44a126fa4"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5466e03e-004d-41d7-b10c-9151327ed8a2"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("563738b2-d03a-46aa-9ae3-021b67b2df41"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("f3a5652a-d767-4f8c-89c5-da620eec5681"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("80871677-0bc4-468d-8cff-be2b707720c3"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5a33e03d-09ea-45a3-b1b8-b435325bfca7"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("29d48872-011a-4cd3-a23b-65576dcaae20"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("de11516e-9126-4245-808d-3f95d508795a"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("551ab299-a4f2-4a2b-98a9-5c1c64d697de"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("ec5b9f74-db93-4c51-8835-dc38b186ce8a"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("8b03bf42-c781-488e-8a03-0cb92b5c4494"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("69c2ccca-3ff0-40cf-9858-cf9bc91b8377"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("35dbb435-8210-4645-b1d2-553150de3855"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("58dd8c53-3397-477c-a7d1-0a784aa5308e"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("023cdb5a-ad69-4d71-9eb0-c07aeb965eaa"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b47e95be-e096-4c14-a48f-9c545a0ca7a2"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("fdcaf8d9-7983-4f9d-94e2-c3151a1dae9e"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7c428606-dca3-4107-9081-e61bdc4c5dc7"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("7a384cb6-a8d2-45af-ae26-63cc3ad34bf8"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("20bb6359-a0bf-45fc-88ad-7fabe5ed2fd2"),
                            Column = "A",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("e2381648-b8dd-4351-8e87-13ab069bc1a9"),
                            Column = "B",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c186ebe0-6c6b-4fb3-bd1d-b7e261196768"),
                            Column = "C",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("b117c738-bc27-490d-be8f-654ab54a0dfd"),
                            Column = "D",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("1ca17b47-d7f8-4ed8-b543-2bceb0219771"),
                            Column = "E",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("72998a3a-ecea-403e-9e87-cc3fc6f3a35f"),
                            Column = "F",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("9dfe9f2e-2df2-4637-a49e-e644110e1fc1"),
                            Column = "G",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5a7e6879-de2a-438a-9c54-97d850a53c65"),
                            Column = "H",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("79a81293-5873-440d-84c9-35b165e8fca1"),
                            Column = "I",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("5f9f34d2-2013-414e-ae31-69de85dcb169"),
                            Column = "J",
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(2262),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("a1a1d2e2-d1a6-4b26-8229-2d3178fa85cf"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(2268),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("120911cc-7ca6-419d-b322-bf05dbd93b44"),
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(2270),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("1369a3eb-a1fd-4da7-ba70-7ab3c3450a53"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1be33fda-b9bb-4960-bd5d-fd9cd6f188e2"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0e5c088c-a261-4a86-95ad-09c3b603436b"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("85aedb00-c72a-4330-8bdc-86428f8b07ea"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("008e6a3c-a82e-41b1-b2ef-fbce3ae02caa"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0f689538-05bd-4540-ac54-c30dbde04107"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6001f9df-d03a-4660-803b-2552283e2de5"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fc11b69e-8a5d-4b08-ae7d-bdab3da02155"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3c2ec207-dd4d-40ca-8e85-c63df1803c4c"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("32cf12f9-b7cf-4cab-9652-7f3b4fb86fc1"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("d781d179-3ac4-4674-9d49-2f73f8f3ff37"),
                            DateRelease = new DateTime(2024, 11, 23, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3568),
                            MovieID = new Guid("55a4ac91-39fc-4e96-9ea8-9ccbfc8a4373"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 11, 22, 13, 50, 22, 650, DateTimeKind.Local).AddTicks(3562)
                        },
                        new
                        {
                            ID = new Guid("8abb34b3-c1c4-4044-b8eb-73a14fad9d07"),
                            DateRelease = new DateTime(2024, 11, 24, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(3577),
                            MovieID = new Guid("e444aa6c-29ca-41b4-b6b7-ee24a23eca5a"),
                            RoomID = new Guid("a0fd6bb5-6b44-43df-8855-252a63a00ef5"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 11, 22, 13, 51, 22, 650, DateTimeKind.Local).AddTicks(3576)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a8d54afe-93a7-4b62-bb09-e6111c16df72"),
                            MovieID = new Guid("55a4ac91-39fc-4e96-9ea8-9ccbfc8a4373"),
                            Price = 100000m,
                            ScreningID = new Guid("9b4f7532-79ee-4c96-a85d-14f3ac8f013e"),
                            SeatID = new Guid("f9882a79-ad9d-42bf-ab99-484e391a79b5"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("913f0326-1533-4b12-b600-d90e9302837e"),
                            MovieID = new Guid("e444aa6c-29ca-41b4-b6b7-ee24a23eca5a"),
                            Price = 2100000m,
                            ScreningID = new Guid("87eb3673-5dbe-498d-9c0f-56033e37d6c1"),
                            SeatID = new Guid("343ab268-91c5-4537-a895-5cde175b711a"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("968bd795-aefd-4b19-b1c0-0a306413414d"),
                            Price = 50000m,
                            ScreeningID = new Guid("9b4f7532-79ee-4c96-a85d-14f3ac8f013e"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("1369a3eb-a1fd-4da7-ba70-7ab3c3450a53"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("6117b259-7699-4049-bd72-d5630a82360e"),
                            Price = 60000m,
                            ScreeningID = new Guid("87eb3673-5dbe-498d-9c0f-56033e37d6c1"),
                            SeatTypeID = new Guid("a1a1d2e2-d1a6-4b26-8229-2d3178fa85cf"),
                            ShowTimeID = new Guid("1be33fda-b9bb-4960-bd5d-fd9cd6f188e2"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge3D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge4D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 70m,
                            PriceAfter17hWeekeend = 90m,
                            PriceBefore17hWeekDay = 50m,
                            PriceBefore17hWeekeend = 60m,
                            Surcharge3D = 30m,
                            Surcharge4D = 50m,
                            SurchargeCouple = 200m,
                            SurchargeIMAX = 100m,
                            SurchargeVIP = 150m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("b138cd93-ee4f-4941-9a88-a07e32b39b09"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1034),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3cfd43ef-f249-4ab7-ac9e-553609f3d9d3"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1507),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c1211a01-29ec-4ee7-a011-cd9ad2164b02"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1554),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("14e174ec-ce3f-4f7a-9d74-14e41a97625c"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1599),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("84be52af-8292-4c05-8a2b-0f6b9a1aeb61"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1638),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a7c8044a-c0b0-43e2-9da5-55521ab27a68"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1674),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bdca9c05-e13c-49f6-9c92-6a73f493f420"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1705),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4d52fec9-7fee-461c-92f0-5c07b9a76c82"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1737),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2cf4fc41-d606-411c-97c3-fc994bf08b52"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1772),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dddc958e-f2c0-4c14-85b5-eece5d2bcec3"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1818),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f64252d0-fb65-4926-96b4-be35019462ba"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(1853),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("3e398695-ee06-4a63-8650-cef9648fb731"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 11, 22, 15, 49, 22, 650, DateTimeKind.Local).AddTicks(4191),
                            TimeStar = new DateTime(2024, 11, 22, 11, 49, 22, 650, DateTimeKind.Local).AddTicks(4190),
                            UserID = new Guid("b138cd93-ee4f-4941-9a88-a07e32b39b09"),
                            WorkDate = new DateTime(2024, 11, 22, 13, 49, 22, 650, DateTimeKind.Local).AddTicks(4189)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", "Show_Release")
                        .WithMany("Screenings")
                        .HasForeignKey("Show_ReleaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");

                    b.Navigation("Show_Release");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
