// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    partial class NeonCinemasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("9f88a78a-3e02-4745-808e-7d68d20f0abc"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5305),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("57af0c2d-deef-49b7-942c-547fc0b68078")
                        },
                        new
                        {
                            ID = new Guid("a42e65e3-d770-446c-8586-cdd9fdf49e48"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5309),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("8cfa2e3a-79cd-4123-bc4d-c242fc99a172")
                        },
                        new
                        {
                            ID = new Guid("cf166114-9766-4676-ba68-a534f8caedca"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 12, 11, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5311),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("6862d8dc-d801-40c6-a6dc-bf6b893e7f7a")
                        },
                        new
                        {
                            ID = new Guid("0f56a8ea-afc1-4565-b65f-e5bcd3201446"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 12, 10, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5313),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("1d444bf4-122b-4a2f-b6cb-1c863fc8e7ae")
                        },
                        new
                        {
                            ID = new Guid("8ca936fc-38ef-43de-8abc-e22f90eeb028"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 12, 9, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5317),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("677eb1dd-a966-479f-aa26-02ebbb6ede81")
                        },
                        new
                        {
                            ID = new Guid("112cecff-a9e8-497d-adee-a64c8f48b591"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 12, 8, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5321),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("02ff5cda-020b-41b0-b4fe-3e5e26ffb2f6")
                        },
                        new
                        {
                            ID = new Guid("aca8c410-852f-4a05-bbe6-e8fdbb0f86f1"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 12, 8, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5324),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("02ff5cda-020b-41b0-b4fe-3e5e26ffb2f6")
                        },
                        new
                        {
                            ID = new Guid("0850d9ad-27d0-4948-aea2-8f35452c31b8"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 12, 7, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5326),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("f6d710f6-6794-4e3b-a9dd-13c6b8a83082")
                        },
                        new
                        {
                            ID = new Guid("59d08dea-dc45-4df4-919e-5585243b3034"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 12, 2, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5328),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("f0ea6645-7166-4514-9c43-cfad9f3c0290")
                        },
                        new
                        {
                            ID = new Guid("b4657a1c-4d6e-4403-a836-b893296dc6cd"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 12, 4, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5337),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("5a13504e-cce4-4f25-bbc3-62c65c2885a6")
                        },
                        new
                        {
                            ID = new Guid("1919da4e-de11-40a8-9dc4-fe56919c37d6"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 12, 6, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5339),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("12756bb9-dcf7-4747-87ff-510c4e049ab0")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");

                    b.HasData(
                        new
                        {
                            BillID = new Guid("9f88a78a-3e02-4745-808e-7d68d20f0abc"),
                            FoodComboID = new Guid("6a58ef37-f303-428a-b309-64f0472293c0"),
                            CreatedTime = new DateTime(2024, 12, 10, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5361),
                            Quantity = 1
                        },
                        new
                        {
                            BillID = new Guid("a42e65e3-d770-446c-8586-cdd9fdf49e48"),
                            FoodComboID = new Guid("2710ac23-36ac-449b-8fa8-28b344af517e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5363),
                            Quantity = 2
                        },
                        new
                        {
                            BillID = new Guid("cf166114-9766-4676-ba68-a534f8caedca"),
                            FoodComboID = new Guid("f46417de-b2e3-48dd-91c2-322633bbaf12"),
                            CreatedTime = new DateTime(2024, 12, 11, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5364),
                            Quantity = 3
                        },
                        new
                        {
                            BillID = new Guid("0f56a8ea-afc1-4565-b65f-e5bcd3201446"),
                            FoodComboID = new Guid("3ab81ce7-8ac4-4826-b57f-b5ae756a7c36"),
                            CreatedTime = new DateTime(2024, 12, 10, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5366),
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("9f88a78a-3e02-4745-808e-7d68d20f0abc"),
                            TicketId = new Guid("c8d1f9c9-7358-4f2b-b0b1-26eafa898430"),
                            CreatedTime = new DateTime(2024, 12, 11, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5384)
                        },
                        new
                        {
                            BillId = new Guid("a42e65e3-d770-446c-8586-cdd9fdf49e48"),
                            TicketId = new Guid("315fe0ae-9782-400a-b5d5-6f44836ab6e0"),
                            CreatedTime = new DateTime(2024, 12, 11, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5386)
                        },
                        new
                        {
                            BillId = new Guid("cf166114-9766-4676-ba68-a534f8caedca"),
                            TicketId = new Guid("94bfc761-61a5-4452-b080-5f8bfbd85587"),
                            CreatedTime = new DateTime(2024, 12, 10, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5388)
                        },
                        new
                        {
                            BillId = new Guid("0f56a8ea-afc1-4565-b65f-e5bcd3201446"),
                            TicketId = new Guid("315fe0ae-9782-400a-b5d5-6f44836ab6e0"),
                            CreatedTime = new DateTime(2024, 12, 10, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5389)
                        },
                        new
                        {
                            BillId = new Guid("8ca936fc-38ef-43de-8abc-e22f90eeb028"),
                            TicketId = new Guid("c8d1f9c9-7358-4f2b-b0b1-26eafa898430"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5391)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("352f7313-d541-4d31-9b44-4831f0776e51"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("23e5b1ce-5140-4668-ad7e-bf82c47f766d"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("d382e186-2556-4de0-9975-8bb646e815f2"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("97e33c1c-53fc-4e6a-a0b1-3376f4093876"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4271),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("24b756ec-6343-4c59-badf-362747d528bb"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4275),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("73a9529c-b12d-4cc3-8eac-38c85b5ea437"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("cec87460-6ea9-4271-9328-6c2976da18c2"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("558a4808-807e-4ed7-8c72-b12b280b5628"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("6db5a7af-f98e-4614-badf-afa19656a053"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("a321833d-b3c9-47bc-93b2-72c5dcbf832f"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("1889d446-8628-491a-8b29-066d89434bab"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("614f5f0e-f194-4528-a5a3-243fa2e2bd8f"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("8a417891-810f-45d7-a410-b08ee09b1621"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("dc6d6cea-2ddb-443a-bcd7-39aabf893c02"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("17ab49fb-84aa-4999-b461-a01931a4bf1b"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("df62e6a1-4200-4878-893b-44078dd3f613"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("71bba996-5787-414e-826b-58c85560e0f4"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f2804469-b1a9-42ab-b582-61210d24c660"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1eb296b7-89f2-491d-a737-538820d3a9de"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("61187500-9737-48f4-b5d0-915fcaeaaa21"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("674221f3-9347-4156-91dc-0c22f5d59ad0"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("60efe940-1f5b-496a-ae20-8c16e2980c1b"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2f74a07b-2f51-4808-b350-f33425e84a22"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("6a58ef37-f303-428a-b309-64f0472293c0"),
                            Content = "Combo 1",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5242),
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 100000m
                        },
                        new
                        {
                            ID = new Guid("2710ac23-36ac-449b-8fa8-28b344af517e"),
                            Content = "Combo 2",
                            CreatedTime = new DateTime(2024, 12, 11, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5246),
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 150000m
                        },
                        new
                        {
                            ID = new Guid("f46417de-b2e3-48dd-91c2-322633bbaf12"),
                            Content = "Combo 3",
                            CreatedTime = new DateTime(2024, 12, 10, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5249),
                            Description = "1 bắp bơ + 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 3,
                            TotalPrice = 120000m
                        },
                        new
                        {
                            ID = new Guid("3ab81ce7-8ac4-4826-b57f-b5ae756a7c36"),
                            Content = "Combo 4",
                            CreatedTime = new DateTime(2024, 12, 9, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5252),
                            Description = "2 bắp bơ 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 4,
                            TotalPrice = 200000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("b43997c1-50cd-4324-ae25-8cbddd579797"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("0768595f-063d-47c9-89fb-58769dee4dd6"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("67f1d424-81a0-4393-8e96-c16930148b69"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("b4c7194a-778f-4664-a9c7-e8450cdb0f03"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("10fa8f87-2958-483d-9240-620d67764b5a"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("9855291f-7470-4f7c-a662-b04b27fdcc1e"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("e9fc2a9e-5b07-4992-8681-500753738a64"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("8c441bb3-2738-4ec5-80e1-d026c1d647f0"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("972afd1e-e0cd-4cd4-b0d5-68e1441a7dec"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("2f64fa19-cc8a-4802-ad9d-84597ddda3c8"),
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("a7411e37-d4fa-4144-b680-8a4ef706ff2b"),
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("21ea0cf6-3405-42d0-b355-d30302a8e20d"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("4c872381-bbfa-4729-bfb2-334d9f688607"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("bea2a961-1932-4cf6-bcb9-16f4e110c0aa"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4890),
                            Description = "Hành trình cảm động về tình cha con giữa Sài Gòn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "0e9f825c-5346-44f1-a94d-7078909ce83a.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Bố Già 2",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=bogia2-trailer"
                        },
                        new
                        {
                            ID = new Guid("2b6dccb3-4694-459d-a2a9-965d5241ac9d"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4898),
                            Description = "Những mâu thuẫn căng thẳng giữa các băng nhóm trong thế giới ngầm.",
                            DirectorID = new Guid("17ab49fb-84aa-4999-b461-a01931a4bf1b"),
                            Duration = 120,
                            GenreID = new Guid("b43997c1-50cd-4324-ae25-8cbddd579797"),
                            Images = "161cd6ca-380d-4627-8071-2d5af03a1cf2.png",
                            LenguageID = new Guid("2f64fa19-cc8a-4802-ad9d-84597ddda3c8"),
                            Name = "Chị Mười Ba: Cuộc Chiến Nhân Tình",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("0ae3a568-598d-4531-b961-388636446ea3"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4905),
                            Description = "Cuộc sống đầy biến động của một gia đình truyền thống Việt.",
                            DirectorID = new Guid("df62e6a1-4200-4878-893b-44078dd3f613"),
                            Duration = 110,
                            GenreID = new Guid("0768595f-063d-47c9-89fb-58769dee4dd6"),
                            Images = "100f852c-f5b4-43f0-8560-84ab0b42b9b9.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Nhà Bà Nữ",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=nhabanu-trailer"
                        },
                        new
                        {
                            ID = new Guid("8369f439-8739-41c3-aab7-6444b3e89ea2"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4910),
                            Description = "Cuộc sống sang chảnh và những bí mật động trời của giới thượng lưu.",
                            DirectorID = new Guid("71bba996-5787-414e-826b-58c85560e0f4"),
                            Duration = 140,
                            GenreID = new Guid("67f1d424-81a0-4393-8e96-c16930148b69"),
                            Images = "11d330e9-7ab3-49d6-bb78-0ab3acabf6cf.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Gái Già Lắm Chiêu 6",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=gaigialamchieu-trailer"
                        },
                        new
                        {
                            ID = new Guid("46bb4e45-1180-47a3-9fb6-92653b0375e5"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4919),
                            Description = "Bữa tiệc đầy những bí mật được phơi bày qua trò chơi mạo hiểm.",
                            DirectorID = new Guid("f2804469-b1a9-42ab-b582-61210d24c660"),
                            Duration = 125,
                            GenreID = new Guid("b4c7194a-778f-4664-a9c7-e8450cdb0f03"),
                            Images = "2d2a89fa-61c6-4662-a2de-ab4b337c88d7.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Tiệc Trăng Máu 2",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=tiectrangmau-trailer"
                        },
                        new
                        {
                            ID = new Guid("4b8fa74e-8deb-4073-947b-25921782cf7e"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4925),
                            Description = "Hành trình sinh tồn đầy kịch tính trong khu rừng bí ẩn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 115,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "rungthemanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Rừng Thế Mạng 2",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=rungthemanh-trailer"
                        },
                        new
                        {
                            ID = new Guid("1297ca46-4ed2-422d-b13c-37aa56d50fa3"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5003),
                            Description = "Câu chuyện tình yêu đầy lãng mạn và cảm động của Trịnh Công Sơn.",
                            DirectorID = new Guid("17ab49fb-84aa-4999-b461-a01931a4bf1b"),
                            Duration = 150,
                            GenreID = new Guid("b43997c1-50cd-4324-ae25-8cbddd579797"),
                            Images = "5b626704-f3d1-482f-b77c-903284966efa.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Em Và Trịnh 2",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=emvatrinh-trailer"
                        },
                        new
                        {
                            ID = new Guid("620e64b1-7de0-4f01-bd27-0a29b183fb67"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5010),
                            Description = "Tiếp tục câu chuyện tình yêu day dứt giữa Ngạn và Hà Lan.",
                            DirectorID = new Guid("df62e6a1-4200-4878-893b-44078dd3f613"),
                            Duration = 130,
                            GenreID = new Guid("0768595f-063d-47c9-89fb-58769dee4dd6"),
                            Images = "7502d22a-c967-400c-bc8c-3062d00c7fcc.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Mắt Biếc 2",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=matbiec-trailer"
                        },
                        new
                        {
                            ID = new Guid("4a091ad2-35b5-4985-a9f1-7f04dd5a23df"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5016),
                            Description = "Phiên bản Việt của Người Nhện với những pha hành động gay cấn.",
                            DirectorID = new Guid("71bba996-5787-414e-826b-58c85560e0f4"),
                            Duration = 145,
                            GenreID = new Guid("67f1d424-81a0-4393-8e96-c16930148b69"),
                            Images = "96cc9263-2adb-46f1-a015-fe0a18c4b781.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Người Nhện Việt Nam",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=nguoinhenvietnam-trailer"
                        },
                        new
                        {
                            ID = new Guid("60b33cd9-e275-4734-8ec3-40e2efdf15f6"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5022),
                            Description = "Những câu chuyện tình yêu lãng mạn tại Sài Gòn mưa rơi.",
                            DirectorID = new Guid("f2804469-b1a9-42ab-b582-61210d24c660"),
                            Duration = 100,
                            GenreID = new Guid("b4c7194a-778f-4664-a9c7-e8450cdb0f03"),
                            Images = "96cc9263-2adb-46f1-a015-fe0a18c4b781.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Sài Gòn Trong Cơn Mưa 2",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=saigonmuaroi-trailer"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("15e12ebc-edb5-4f6c-bac0-374334d800f9"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7b925de9-b66e-4ff2-a444-76a60050a857"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("c384d47e-c77f-4f85-997b-b4d11a1802e8"),
                            DateEarned = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5431),
                            TotalPoint = 50,
                            UserID = new Guid("57af0c2d-deef-49b7-942c-547fc0b68078")
                        },
                        new
                        {
                            ID = new Guid("9f21c4e4-ccc7-4f42-be4f-e7b83ec8b1a7"),
                            DateEarned = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5435),
                            TotalPoint = 150,
                            UserID = new Guid("8cfa2e3a-79cd-4123-bc4d-c242fc99a172")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountMax")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("c7759833-9d00-413d-9d4b-c218ee5a56a3"),
                            MinPoint = 100.0,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5412),
                            Status = 1,
                            UserID = new Guid("57af0c2d-deef-49b7-942c-547fc0b68078")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3242),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3265),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3267),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4299),
                            Name = "Room 1",
                            RowNumber = 0,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4303),
                            Name = "Room 2",
                            RowNumber = 0,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Show_releaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_releaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("74e96e10-0005-468b-a9bd-fed9222093ed"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5088),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 22, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5087),
                            ShowTimeID = new Guid("7741ea44-1366-43a3-9f5b-571c1d2fc950"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("74feffd0-8fa9-423f-b3c2-ce14dba6b509"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5093),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 21, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5092),
                            ShowTimeID = new Guid("42ac2e65-d487-4f63-91db-f6a76af1103d"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1ee7e0e3-54b1-428c-9092-792bf010e4cd"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5096),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 20, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5095),
                            ShowTimeID = new Guid("be931950-0631-4c42-8dc4-abde7fcc3f01"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9bfedb50-1b70-4f5a-b7ec-4564f32ece16"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5099),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 19, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5098),
                            ShowTimeID = new Guid("02b3548e-c45f-40ca-b29f-299d7fbef6e4"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("99ca10dc-85a1-4863-bd6a-cacc6b2ea805"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5102),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 18, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5101),
                            ShowTimeID = new Guid("bf315f63-9434-4acb-8f25-8c5ab19b97a2"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e7386111-b678-428e-a70b-ae31fade168b"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5105),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 17, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5104),
                            ShowTimeID = new Guid("1cab16c5-e3eb-48da-974e-80ea7ea60459"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a40d03e1-92b5-46be-84b0-a5cbab07cdbb"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5108),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 16, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5107),
                            ShowTimeID = new Guid("2ed22b61-c22c-4d68-a5cd-0be64424817f"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("2e45426e-cea1-477e-95ef-9230cb15976c"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9c8854ca-983a-4963-b35e-d34994ff9349"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("31255efd-7b60-40c5-ac69-a6df8241f834"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2b572ea7-7f76-4ba3-abb7-0d1f657fc77a"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7d60fd98-38c0-495b-9ab4-d770c396a129"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("beb8dbe8-c97e-45bd-812a-6572efcb56dd"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cbace41b-9a5b-4238-bc47-30d4f022c475"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5919db3d-41b5-46cb-959d-e61d55c0635b"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9d174625-47fa-4c6b-8525-0dc2acf2f3da"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("501cae7a-a112-47e9-996c-de4ec4f1c02a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("06eb60ef-262b-4674-a466-bc93cd53a6cf"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4e15803a-a58f-45d0-9759-159e0ea3062e"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ea25534a-ad71-422d-a4f5-8e841957d245"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("91d36b58-8752-436b-976f-d4837dc52183"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d8b8aee4-3f22-4898-92aa-04c1559ff170"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fb625360-0a61-4b95-8d44-463b327dd569"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d37e552f-09eb-4c63-b1b5-3de28fa7989c"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("95754058-11fb-4e84-9b45-a7d1cf78fd0b"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("681e12fa-e669-441b-8de7-d96a7979131d"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("39b6263d-7fbc-4d30-981e-dbcbf3740f9a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b108705c-c45d-4a83-ae96-4b6cd4ba8784"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c2a8734a-8e59-4c91-b3e0-943d2434b675"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("56dbedf3-512c-476c-8b61-28a9acb73adf"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6a0df8ba-8b8f-449b-90ae-ace8e59a5144"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4f586f26-34bc-4c2c-8351-7ca71fe4bfbf"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e85294bf-c866-44d9-bfa0-8505d8be46b3"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("75b98273-e26d-4430-a5bf-2a9e3369ae84"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cf4ad7ac-9a86-41b4-95fb-b327385d46d7"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b9c2786b-c972-432c-b416-50ce606b06bf"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("60d3445a-14fd-49bd-a66a-2e3e8bf94785"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1e8a7c5d-c623-4e51-88fc-7b610e7d1151"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f729db31-278c-4fc9-9099-b5bbb1827a5e"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("90b3c2e1-1337-4331-94c6-7b292f64a523"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9ae2b8e5-6fa5-46f7-8341-43d9a79d5312"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ace669cf-2b4d-4bb3-ba21-a97cda030767"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2c345765-ad79-4630-8639-65979af37f0a"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("378cbae2-8b51-4868-8f90-c31d00f2428d"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4cbdc767-7a97-485c-9b7b-b9ffb73d4208"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a6635c0e-ce57-4d30-9b12-e32f9bb0d44e"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b38f0122-3eb2-4964-8a09-00f2b67202d1"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9736f8c6-248a-4c98-871b-d53922aa461f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("797dc24e-4bd0-4829-9781-0c8be3017f95"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("92a1fde9-6521-4dd4-9c5c-4c2e1bdc5a76"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("209ef632-d87f-415b-9bee-307b3d266c6f"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f6ded9a3-607f-4e8f-be7c-cfc3612420dc"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("afe466f6-3801-4263-b332-d5cf236d1ad6"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e79de8a5-29fd-43a5-9c94-b797d7c7d2a9"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e97c1cc9-54f9-4a10-8901-8c5cb9b4bcd7"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1d41ecf3-861c-4c75-972a-cdf1fdbfbe72"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cdf12b82-8577-4e2e-a593-5b4be98283cd"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("087a64b6-68c8-42d9-89c3-edc6a46f74cd"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8b7fe7cc-3157-4ae6-9b47-f25baabe4b12"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a64da915-904b-4f0d-bd6e-d06b8e6fec1b"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b3647b4d-9162-4fe2-8248-3abd02eab2c3"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4a916863-6e18-4823-a790-36d522166726"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("32bf6cbd-01a7-40db-a09e-4dfed3213005"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b8f33cf4-1051-4be8-874b-65f2204d8871"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2d3e0eef-16d0-485c-87d5-58490ffd43b4"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5651446a-13fb-4bf9-97c9-f7d2916edb7d"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0d5f1f1b-14e7-46ca-b32d-81120f5a0c25"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b521b29e-3bf7-44ad-abc8-d1797bec4dd7"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("447020ca-2168-41c9-9eb2-1dab2b33bb12"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8a3be138-38e8-446a-b1a8-21467a09cb3e"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b1badd8d-a1b7-4855-b01f-e9bcee48e967"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d1ddacad-0bc2-4692-b08b-2af2abe74c0d"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ec6b850b-c8f4-40e8-bcbb-3d98fe21ac7a"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("aaea1b16-8df2-4071-8ca2-86af1f2c63ee"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("41b68642-670f-47c1-a748-697d88f00d0d"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ad60033e-a922-4186-bf8f-83c444f0f5ee"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8dd66121-e5a3-4e77-8e30-b24aa768c7e6"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7779c2c6-1757-4989-9918-3e8b0cfc2e1b"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("100970a2-f23f-4df7-8ce0-ab6a68b4cf76"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4ae00091-6611-4cb1-a140-95838ae59d57"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("03e45823-1322-4467-94db-8b81212df180"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("06cbb416-8816-4ca0-9603-9b28071bc4ae"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8f8b7d8e-77b5-4d84-aa3e-07ff150f8ead"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b36d0dd3-da19-46a6-9508-552966baed7c"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2f9a29c6-acbf-4a2f-ad26-e8b3845be87a"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("648907fb-f660-4ed3-9fb3-665ae8cdc61a"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("16727431-a98f-40e8-8556-2436d844bb57"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0025b6fe-da0a-4a8c-b8df-56fad07e45b4"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("65501e85-37d8-4e26-9c92-a0769b8efce7"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5910cddf-19bf-4fd9-872e-e0d8628f682c"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a9a4db68-7c84-412b-b5aa-4f07bcfe1d75"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("15d58dd0-608b-4776-949a-6f0a1376bd1e"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("35e35553-eb7a-451b-ac81-f85a476695ea"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d9262539-2fba-4bb8-923e-baa266154606"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("01efbb07-6126-4345-bb3c-c95768afbd1f"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c4e3eef7-7c19-4f28-825a-b18882a9cd09"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("43fd44f1-9785-4b87-8f90-b881ec6d4651"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("21115d86-b779-46d5-a7ce-bd1e45cf5986"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3ecf66de-abe3-4ff6-85d9-85ba63cdaf02"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1e2d4521-1b3a-4fea-86d3-d4ed0fbab07f"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("339f7491-c88e-44b3-99f4-48b661fa19b2"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c77e9815-ee47-4a69-bf73-de2a7adb3512"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("140c8cd5-f487-4be4-bc67-f44d8d9023d9"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f0c96f8f-b43f-4a88-808a-94d1d366f464"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("54428903-d265-440e-b5e6-6fcf22f70939"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("94c0ac92-ca3a-41a5-b3a4-314a215afd19"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ae59869c-6533-4970-98bb-856583f98f97"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("31b00361-31fa-44bb-ac39-1539526f0207"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f2195982-2e4b-4c82-8444-8b82ce1e5f62"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c6d09041-75c8-404c-81be-13165d176c99"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("efeafb30-8260-4975-9424-a59f89e1039b"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("63af550e-e45e-41c7-bc90-b62a5cde71f9"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("11919535-bcee-4e7a-838b-84025615a92f"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("335dd054-f0be-4032-8b9d-8eee9917933f"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9ea30c75-6c11-4b77-8928-8be2ae7fe968"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7f32fae5-1770-42ce-8617-cb547ba924da"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1d444337-ff4a-4d01-82e6-418fc96bc314"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cf6c82b6-2d9d-46d1-b9ee-86d0670829cb"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3d18c8bc-eb18-4706-9182-f6fccece527b"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("90902119-57d2-43f0-a69a-5a0acccf4695"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("51e8b5ec-b5d6-4592-b845-c6ebf1cb34d3"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c268e912-58a1-48ae-9c06-0bef1f40a84a"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("65dd4e18-4255-4470-a5f4-380ada7e162f"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("70c7cd43-52c3-45f1-b00f-a9c1f035d606"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2077a7cc-e5ec-46d0-87e7-4d61095a80cb"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9dc66dc1-7d48-4f39-90ca-941b876400ca"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("db2213ee-42af-472c-8b8b-7f2745a3bee0"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ac99d227-f1c4-40ae-b34a-06a085428d97"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c1708800-23fa-4550-8d0f-2afa479d6b82"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("50ff9ea3-f3d7-461c-bfd6-fd6bd4f339d4"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("129fc864-b4b9-4bcf-9f07-9c42266bfb68"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("00b46c23-4a9f-44ae-a0f0-48cc0093c095"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2461d7ae-767b-4fda-ac7d-db23f4e9b2aa"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f7e6740b-3631-455d-a9c5-560922cafe47"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a19be51a-f105-482b-95db-f1d85e29efa1"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8bdea498-ed29-40c4-a2bc-60eac5c55db2"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f49cc272-36d2-45ac-854b-650211aa4c3e"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8efd6a6e-21d2-4b5f-9c06-960c4562fcf2"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1eec846e-1e1e-4f8e-9fea-42fa3e7f9dbb"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8f702053-1397-41bf-af04-fa8fdc4f8730"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4d103798-6c6c-43fb-ac3e-eac2b299eb1c"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("390e0ad5-98e6-4eae-9374-4188d9c3db4c"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2917c8e6-14e4-4f09-ae61-a521361d09ee"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a136520f-eefe-4b37-a130-d6a801959ae1"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("23528efc-a4d8-4d66-99c4-ff6e3818adfa"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("feeb8438-8361-4533-8920-a076344ffddc"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4c1841de-bc6c-4f3f-871a-af7f3b826cea"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c3b8c278-77ec-4615-993a-84469a94dadc"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0e335351-3bc6-4c80-9915-c0b7d771a7c0"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fb1d3d34-4a45-4d54-9f65-d8287080dcd9"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bdeb0085-f29b-42f2-8abe-b4356222ae1b"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2784abf8-90eb-43d2-99bf-f6f5e2f51fb6"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("062a5dad-0256-4bdf-ae7a-2ab96153092c"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1d7d4519-98b5-46f6-bf9a-c6244ebc9eb4"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d9854160-e1ff-4723-b62b-e5193a2486cc"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4a4d3c06-cb58-41c3-87c1-8e0b1c1ce72d"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fc59773b-5801-4d91-9665-3d32f1b078a2"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e6230a0d-27ed-46b5-87d4-61f2e5eb2cc4"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("16e7a54e-6fc2-4b1e-8784-3ea93d83c9a7"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("75190c92-9100-46a4-962b-a6f2c8b091d9"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6cf15489-c424-4ac6-8c2c-a2a9230058fd"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5e54efb6-029c-4a4f-ac73-16a6bb409f07"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a9127c94-7594-4a4a-947c-86006d691bae"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1cc77cb2-b081-449f-a889-714244d5b4b7"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4515fba0-a31a-4380-ab1a-31540b6afe77"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8b018ff5-6aa5-4ca7-bdb1-da9eea4fcfbd"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("75b40baf-e93a-4312-98e9-440ec6b2adf4"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("064899aa-8020-4624-bf85-2ef736d50eac"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("65015211-5e44-4141-ba38-e886a852ec92"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2461887e-79d2-4fbd-80f9-5063c135de4b"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3fcf9dae-af8c-4cc6-b5be-d8467b8a8be1"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5a40d260-26a1-4763-9be3-48b47f16cf3a"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b588e0da-c727-425f-a087-0843dafad614"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("84a184e2-b311-49db-952d-a47203b6192b"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e644be49-03d2-427f-a273-2fd35ea174fb"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7bbe64fe-a545-48fa-b2ce-d14f07d3473f"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3603f38d-ac1b-4b2d-92f6-a26b23ec191c"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6b42f08d-e8a5-49b9-9523-7b361b2d92d7"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5c77d82d-9022-433a-94b6-1f7889129e55"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("11cfe682-738a-4ebd-abbb-fe017793180d"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("85dda60c-0e42-45dc-8e9b-112dba5b20b5"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("92359718-4cfd-49b8-ae73-c34058ea8929"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("debe896a-7bd0-48dc-ad1b-a9c06106c627"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e551b1e8-c2fc-44ae-a476-0bd3708396ef"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("412762ef-67fa-4731-9944-51825947301b"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2def41e1-6177-47a6-818e-6c3a5a197409"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4321fd94-1457-4a01-b9ab-d5ae15bed0c6"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f1b9bbd7-f6a0-4e2f-a3ab-3ef1ddff1efe"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("97a15343-a55c-4483-92d1-b9017b2b3cb8"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a18caa0a-6f39-4335-928d-e80d10d94644"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ebc9cc31-e99f-4dc1-b51b-d53609d6df86"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("458ce89b-13ab-490c-baf5-1b94dc18767e"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7414b74a-2968-4402-8bc3-233f2cffcd06"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("091cd020-db43-44fe-9ab5-7d8037a79ce3"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a207c89a-2331-42f2-958e-cbc44b7ebf53"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fcfb0f03-6efc-4e7c-8c95-b3d5d70cdc8f"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b9d26c63-2a32-4172-8747-eb90a290df4d"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("344b832e-4e32-445e-8065-e5f8941a346a"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6dc84aa4-9e3d-45bd-ba77-a65b44c79f42"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("65dc79cb-d94f-4a7b-9f62-ae2ba1690f60"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("65bedb7f-9f0b-4a07-af27-f6596ef76e85"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e4b9ca59-9cd3-4563-861a-1f92b88c30d8"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c1711291-5477-4c67-a149-1969a19667fa"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ed2ce55f-e6a1-4d86-9eaa-4c97694973d6"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("12dbdd1d-280f-4efe-9e9f-39f1606a373c"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9754fefa-8036-4584-96a3-96cd5c29292e"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("14e367df-c5b0-42cb-8fc3-a9060229fe13"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a2799fe5-f05f-46ac-8452-4b548ce01446"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("41bebe5e-a43f-4a3c-b541-7ef6fd771ad0"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1c83340c-8172-4c18-9326-793eea36037d"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2c4063c2-5605-4642-87bf-e266f98f1fd2"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e55bd5fa-bab1-484e-bc94-22a7de313e50"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("83e64c6d-3839-490b-8f47-c7339d52e672"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f2ed150f-f7b6-4bd3-b496-b150d7b0907a"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9cc7bfb0-f344-47ee-a17b-d1c9df7e742e"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d5f13588-66df-4290-94ca-5da3409343e2"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("49e4a214-67b4-4bd0-b459-52a06cd57ef0"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7bd0a7ba-0d5e-43ee-bded-571607f655d2"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("09aead39-2524-46c8-9014-aa7fdb6a12bb"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e4604066-e037-422b-9ad8-58c5425481f2"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("37edabc0-3c67-4da2-b7c7-fe2c6af7dbf7"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ead9ff05-5865-42f1-8f1e-21aa57db0bec"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f17c179f-cca6-4fb3-a1a0-ade4b0d06344"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("275b7cee-e65c-4d1d-8277-d9ecaea60f8f"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4219f460-b74e-483a-9fa3-118aa8252be5"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3d1a1911-cdd2-4c43-858c-9a729b79e3a2"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b316672e-8fd1-4fd2-be54-26f56dfbda49"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c2a87a5d-4572-4fcf-b243-1e509a598400"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c45a6ea8-3b0a-4c98-826f-c4308c17b564"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("275a1963-9903-42a5-a9a2-5b2aa2cbe878"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("35e5b4db-dcda-4d1a-aabd-2a6c763ae1e6"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3e8bfaf4-d6b3-4b93-8064-d433d32b2442"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d152f745-56db-4193-a3d2-319da1f8eb21"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a3ed4419-e248-4a33-9b09-527485019e54"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("307c994e-2dc6-4c22-8465-ebffdef714ff"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("28dbcf3d-cea6-41a3-8ac8-39b5ba0d2be3"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5081ed5f-5417-4959-8b1c-ab5ab61f20ab"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e36779c0-a1d6-4403-9e90-69eab6cbb08f"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("692a420e-0938-4de4-a9a1-39c8d19e81e7"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6406d1a0-a18a-4eea-b5d2-b05c0011e8a1"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6674a427-d3b6-4452-b061-df6977e61be6"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e270824a-d458-48cc-8185-b7bcbfd192a2"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("54aa3c7c-8c77-45ea-8c65-58f04b17a3e7"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("58203f1f-21cd-4e5f-9cb4-f35570eafcff"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e347f5e4-9587-41fe-a353-642cfb95a1c3"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7e083af2-da3a-4666-b6be-a9f1a3528345"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0f94e769-8c1a-4591-815d-9cd408cff747"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f5d0b265-7aec-4ae0-a44a-8781dc704d2e"),
                            Column = "A",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b1eebae5-ff53-4ef8-81ca-4d02d5784cf6"),
                            Column = "B",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("032d2032-5aa6-45fe-8395-2a3630388a5d"),
                            Column = "C",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a2e91995-c36d-4b5a-ad04-51a39aa5c8c3"),
                            Column = "D",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("686c2977-0807-4c0d-9a52-c4b3e661e0b4"),
                            Column = "E",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("556b6f53-097a-4d1d-9679-b8691ed50ea2"),
                            Column = "F",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("56d788af-79aa-4602-80d6-00e93e90bc11"),
                            Column = "G",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("744780f7-5332-46fe-ba25-f1b885e3da4e"),
                            Column = "H",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8ad5ef0c-24d9-41de-9b90-25a90c51c235"),
                            Column = "I",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("16b1972f-53a5-44b5-85b8-7b97a4df98cc"),
                            Column = "J",
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("seatEnum")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ShowtimeId");

                    b.ToTable("SeatShowTimeStatuss");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4247),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("82e89da5-0736-42ec-aa3b-a9ff41b64c56"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4250),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("18045597-f862-4c0d-ad83-6d20c9dedcfd"),
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4251),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("7741ea44-1366-43a3-9f5b-571c1d2fc950"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("42ac2e65-d487-4f63-91db-f6a76af1103d"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("be931950-0631-4c42-8dc4-abde7fcc3f01"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("02b3548e-c45f-40ca-b29f-299d7fbef6e4"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bf315f63-9434-4acb-8f25-8c5ab19b97a2"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1cab16c5-e3eb-48da-974e-80ea7ea60459"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2ed22b61-c22c-4d68-a5cd-0be64424817f"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("664e706d-213b-48cb-a6ca-5179b6e7a64c"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f99da7fe-60d8-4505-b900-2877b9556fa7"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ef31af51-5c32-41e4-9e87-1f88a332fcd9"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("2c0b8489-8ce4-45d2-8471-b584fc4da9fa"),
                            DateRelease = new DateTime(2024, 12, 13, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5054),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 12, 20, 16, 50, 184, DateTimeKind.Local).AddTicks(5049)
                        },
                        new
                        {
                            ID = new Guid("f14767c1-5a25-4662-9a2b-bfcd85595d44"),
                            DateRelease = new DateTime(2024, 12, 14, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5061),
                            MovieID = new Guid("2b6dccb3-4694-459d-a2a9-965d5241ac9d"),
                            RoomID = new Guid("b1a47d24-0477-4ce6-8213-1c397e673ad8"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 12, 20, 17, 50, 184, DateTimeKind.Local).AddTicks(5060)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("c8d1f9c9-7358-4f2b-b0b1-26eafa898430"),
                            MovieID = new Guid("1244257e-9e1b-488a-b72e-038a077f0c26"),
                            Price = 100000m,
                            ScreningID = new Guid("74e96e10-0005-468b-a9bd-fed9222093ed"),
                            SeatID = new Guid("2e45426e-cea1-477e-95ef-9230cb15976c"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("315fe0ae-9782-400a-b5d5-6f44836ab6e0"),
                            MovieID = new Guid("2b6dccb3-4694-459d-a2a9-965d5241ac9d"),
                            Price = 2100000m,
                            ScreningID = new Guid("74feffd0-8fa9-423f-b3c2-ce14dba6b509"),
                            SeatID = new Guid("9c8854ca-983a-4963-b35e-d34994ff9349"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("94bfc761-61a5-4452-b080-5f8bfbd85587"),
                            MovieID = new Guid("0ae3a568-598d-4531-b961-388636446ea3"),
                            Price = 3100000m,
                            ScreningID = new Guid("1ee7e0e3-54b1-428c-9092-792bf010e4cd"),
                            SeatID = new Guid("31255efd-7b60-40c5-ac69-a6df8241f834"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("23e5b1ce-5140-4668-ad7e-bf82c47f766d"),
                            Price = 50000m,
                            ScreeningID = new Guid("74e96e10-0005-468b-a9bd-fed9222093ed"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("7741ea44-1366-43a3-9f5b-571c1d2fc950"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("97e33c1c-53fc-4e6a-a0b1-3376f4093876"),
                            Price = 60000m,
                            ScreeningID = new Guid("74feffd0-8fa9-423f-b3c2-ce14dba6b509"),
                            SeatTypeID = new Guid("82e89da5-0736-42ec-aa3b-a9ff41b64c56"),
                            ShowTimeID = new Guid("42ac2e65-d487-4f63-91db-f6a76af1103d"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge3D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge4D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60000m,
                            PriceAfter17hWeekeend = 70000m,
                            PriceBefore17hWeekDay = 50000m,
                            PriceBefore17hWeekeend = 60000m,
                            Surcharge3D = 30000m,
                            Surcharge4D = 40000m,
                            SurchargeCouple = 50000m,
                            SurchargeIMAX = 50000m,
                            SurchargeVIP = 30000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("57af0c2d-deef-49b7-942c-547fc0b68078"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3408),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8cfa2e3a-79cd-4123-bc4d-c242fc99a172"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3777),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6862d8dc-d801-40c6-a6dc-bf6b893e7f7a"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3808),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1d444bf4-122b-4a2f-b6cb-1c863fc8e7ae"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3834),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("677eb1dd-a966-479f-aa26-02ebbb6ede81"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3876),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("02ff5cda-020b-41b0-b4fe-3e5e26ffb2f6"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3900),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f6d710f6-6794-4e3b-a9dd-13c6b8a83082"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3921),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f0ea6645-7166-4514-9c43-cfad9f3c0290"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3953),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5a13504e-cce4-4f25-bbc3-62c65c2885a6"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3972),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("12756bb9-dcf7-4747-87ff-510c4e049ab0"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(3995),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("637c2b51-73ec-43c2-8792-6298fc568ee2"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(4019),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("b3c14739-3689-42bf-a9d3-60c5e0e80758"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 12, 12, 22, 15, 50, 184, DateTimeKind.Local).AddTicks(5455),
                            TimeStar = new DateTime(2024, 12, 12, 18, 15, 50, 184, DateTimeKind.Local).AddTicks(5454),
                            UserID = new Guid("57af0c2d-deef-49b7-942c-547fc0b68078"),
                            WorkDate = new DateTime(2024, 12, 12, 20, 15, 50, 184, DateTimeKind.Local).AddTicks(5453)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", null)
                        .WithMany("Screenings")
                        .HasForeignKey("Show_releaseID");

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("ShowtimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Seat");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
