// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20250103161424_initsa")]
    partial class initsa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AfterDiscount")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<long>("BillCode")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("Surcharge")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<double?>("TotalPoint")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9746),
                            Deleted = false,
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("3c3942af-70fe-475b-a636-5cb6187aaae8"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9751),
                            Deleted = false,
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("db017884-e7ad-4e78-9ab0-4d984fc4f4d5"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("4cd7b368-635b-416f-979e-5c5d331eb110"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("ff59e629-cb8f-4ad4-839b-a5663cc106c7"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("95c6d565-7c16-459f-8593-355c979ac948"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("35896d14-530f-4648-8a91-84cede7864cc"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("d7907a15-239d-4818-843d-a939256eb395"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("d8142359-2738-42fa-94d0-6097edfbd051"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("0f7e33b7-d2c3-47e9-8683-4ddfdda164b9"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("caf27fd0-76aa-4882-81a1-4d04aff3318f"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9561),
                            Deleted = false,
                            FullName = "Trấn Thành",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("efd64aaf-74ab-4e5f-8c2d-5cc13169b00a"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9567),
                            Deleted = false,
                            FullName = "Lý Hải",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d858c0f-a6e2-4228-abe9-97c54f8ea459"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9569),
                            Deleted = false,
                            FullName = "Victor Vũ",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b7d908d2-aeea-42ab-96bc-3d27b90d6c4e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9571),
                            Deleted = false,
                            FullName = "Charlie Nguyễn",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9573),
                            Deleted = false,
                            FullName = "Ngô Thanh Vân",
                            Gender = 7,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b0da780c-7fee-47e3-9077-d36ff8e3e5e3"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9576),
                            Deleted = false,
                            FullName = "Đỗ Đức Thịnh",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f3dff0a2-2130-44e7-a94a-135d1aab2e0a"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9577),
                            Deleted = false,
                            FullName = "Phan Gia Nhật Linh",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a41eb3b7-672b-4659-8870-98badc88ef6f"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9579),
                            Deleted = false,
                            FullName = "Vũ Ngọc Đãng",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("20b90756-b113-4d6b-baf2-a144437fe545"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9581),
                            Deleted = false,
                            FullName = "Nguyễn Quang Dũng",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5caf76d2-edca-4f30-8af0-6b0cd93a6f1b"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9585),
                            Deleted = false,
                            FullName = "Huỳnh Đông",
                            Gender = 6,
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("ba362c65-7d03-4e48-ba58-c8358188c12f"),
                            Content = "Combo 1",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(904),
                            Deleted = false,
                            Description = "1 bắp 1 cola",
                            Images = "combo1.png",
                            TotalPrice = 80000m
                        },
                        new
                        {
                            ID = new Guid("85ba99f2-facd-4a40-aff5-d91bde447762"),
                            Content = "Combo 2",
                            CreatedTime = new DateTime(2025, 1, 2, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(908),
                            Deleted = false,
                            Description = "1 bắp 2 cola",
                            Images = "combo2.png",
                            TotalPrice = 100000m
                        },
                        new
                        {
                            ID = new Guid("db2ec796-33e8-4bc5-80e2-27d83f5318a5"),
                            Content = "Combo 3",
                            CreatedTime = new DateTime(2025, 1, 1, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(910),
                            Deleted = false,
                            Description = "1 bắp + 1 Aquafina ",
                            Images = "combo3.png",
                            TotalPrice = 75000m
                        },
                        new
                        {
                            ID = new Guid("b6bd8356-be31-4dc3-afd6-5418c3821ebc"),
                            Content = "Combo 4",
                            CreatedTime = new DateTime(2024, 12, 31, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(913),
                            Deleted = false,
                            Description = "1 bắp + 1 cola + 1 khoai lắc",
                            Images = "combo4.png",
                            TotalPrice = 135000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9611),
                            Deleted = false,
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("a65e81c0-dea0-4a78-9f7d-8a85f4b7eada"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9615),
                            Deleted = false,
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("51d0012d-c1e7-4e8f-be62-cb1b35a8584d"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9617),
                            Deleted = false,
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("11fc32f2-9720-4efb-a104-6460d35e67e6"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9618),
                            Deleted = false,
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("c522e4de-15c1-4f51-b40b-ac645e39ea0f"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9625),
                            Deleted = false,
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("41dba4f2-3c13-4bb3-9cf7-27a5e212199f"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9626),
                            Deleted = false,
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("897e8628-f464-45cf-8797-3921800d5cf5"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9628),
                            Deleted = false,
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("accd2604-dd0a-4ef0-9ce8-fce8de93d05e"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9629),
                            Deleted = false,
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("f89cde20-e7db-4d23-8db2-bfc2c489f850"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9631),
                            Deleted = false,
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("55faace2-4fd8-4268-9cc1-e2d029d6c442"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9633),
                            Deleted = false,
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9518),
                            Deleted = false,
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("e6bc39a8-9e23-46cf-bec4-35bf824c3875"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9522),
                            Deleted = false,
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("522b1844-c87b-4da6-9ae9-db0daa69f1ef"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9524),
                            Deleted = false,
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("d9e062ba-455f-4bdf-a321-c225e2736fce"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9525),
                            Deleted = false,
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("6788f50a-b0e5-4c5b-835e-4d740eb46714"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9526),
                            Deleted = false,
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("97361dba-3c18-4672-a008-55c92fa4bfea"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9528),
                            Deleted = false,
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(8554),
                            Deleted = false,
                            MovieTypeName = "3D"
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(8557),
                            Deleted = false,
                            MovieTypeName = "2D"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Sub")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            AgeAllowed = 16,
                            CountryID = new Guid("d7907a15-239d-4818-843d-a939256eb395"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(591),
                            Deleted = false,
                            Description = "Một bác sĩ chuyên khoa tim nghi ngờ cái chết của con gái mình sau một cuộc trừ tà, tin rằng trái tim cô bé vẫn đập. Trong đám tang cô bé, anh và một linh mục đã tranh cãi về sự thật, mỗi người đều cố gắng chứng minh lập trường của mình có thể cứu cô bé.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("897e8628-f464-45cf-8797-3921800d5cf5"),
                            Images = "ngaiquy.jpg",
                            LenguageID = new Guid("97361dba-3c18-4672-a008-55c92fa4bfea"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "DEVILS STAY: NGÀI QUỶ",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 1,
                            Trailer = "https://youtu.be/4d7xzz0cTVw"
                        },
                        new
                        {
                            ID = new Guid("2a1bdcc3-7d7c-4b97-8923-08dc59ca1b1f"),
                            AgeAllowed = 18,
                            CountryID = new Guid("d7907a15-239d-4818-843d-a939256eb395"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(601),
                            Deleted = false,
                            Description = "5 học sinh nghiên cứu hồ sơ cựu học sinh của một trường học bị chiếm đóng về những trải nghiệm siêu nhiên và các cô gái mất tích. Người hướng dẫn của họ tạo ra những sự kiện kỳ ​​lạ đưa họ đến một cái cây cổ thụ, nơi mà hiệu trưởng vô tình đào được xương.",
                            DirectorID = new Guid("efd64aaf-74ab-4e5f-8c2d-5cc13169b00a"),
                            Duration = 81,
                            GenreID = new Guid("897e8628-f464-45cf-8797-3921800d5cf5"),
                            Images = "xich.jpg",
                            LenguageID = new Guid("97361dba-3c18-4672-a008-55c92fa4bfea"),
                            MovieTypeID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Name = "BLINDING SOULS: XÍCH: TRÓI HỒN YỂM XÁC",
                            StarTime = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("2b7fb747-7322-46e5-bc4e-ca8bcbde0a07"),
                            AgeAllowed = 13,
                            CountryID = new Guid("caf27fd0-76aa-4882-81a1-4d04aff3318f"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(609),
                            Deleted = false,
                            Description = "Lấy cảm hứng từ giai thoại nổi tiếng của nhân vật được mệnh danh là thiên hạ đệ nhất chơi ngông, Công Tử Bạc Liêu lấy bối cảnh Nam Kỳ Lục Tỉnh xưa của Việt Nam. Từ con trai của chủ ngân hàng đầu tiên của Việt Nam trở thành \"Công Tử Bạc Liêu\".",
                            DirectorID = new Guid("2d858c0f-a6e2-4228-abe9-97c54f8ea459"),
                            Duration = 113,
                            GenreID = new Guid("41dba4f2-3c13-4bb3-9cf7-27a5e212199f"),
                            Images = "congtubaclieu.jpg",
                            LenguageID = new Guid("6788f50a-b0e5-4c5b-835e-4d740eb46714"),
                            MovieTypeID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Name = "CÔNG TỬ BẠC LIÊU",
                            StarTime = new DateTime(2024, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 1,
                            Trailer = "https://youtu.be/wqJXnO_TKpY"
                        },
                        new
                        {
                            ID = new Guid("7ee86d79-5bd2-4e1c-820b-514b68da39b0"),
                            AgeAllowed = 16,
                            CountryID = new Guid("d7907a15-239d-4818-843d-a939256eb395"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(615),
                            Deleted = false,
                            Description = "Một cô gái khiếm thính và một anh giao hàng tìm thấy sự kết nối bất chấp rào cản giao tiếp. Họ sử dụng ẩn dụ về những chú chim nước và cây cối kiên trì để tượng trưng cho việc vượt qua những trở ngại trong chuyện tình cảm và dẫn đến sự gắn bó.",
                            DirectorID = new Guid("b7d908d2-aeea-42ab-96bc-3d27b90d6c4e"),
                            Duration = 109,
                            GenreID = new Guid("11fc32f2-9720-4efb-a104-6460d35e67e6"),
                            Images = "yeuem.jpg",
                            LenguageID = new Guid("97361dba-3c18-4672-a008-55c92fa4bfea"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "HEAR ME: OUR SUMMER: YÊU EM KHÔNG CẦN LỜI NÓI",
                            StarTime = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 0,
                            Trailer = "https://youtu.be/JzY-5ZtVD88"
                        },
                        new
                        {
                            ID = new Guid("8892cf4f-39af-473a-b7a8-4bfa401a4757"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(622),
                            Deleted = false,
                            Description = "Trong văn hóa Java, Sengkolo là một thực thể tiêu cực thường ám ảnh con người, mang lại vận rủi và tai họa. Vào đêm đầu tiên của Suro, Sengkolo di chuyển để nhắm vào một số weton là con mồi của mình.",
                            DirectorID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Duration = 99,
                            GenreID = new Guid("897e8628-f464-45cf-8797-3921800d5cf5"),
                            Images = "tetamhon.jpg",
                            LenguageID = new Guid("e6bc39a8-9e23-46cf-bec4-35bf824c3875"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "SENGKOLO: MALAM SATU SURO",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Sub = 0,
                            Trailer = "https://youtu.be/-Sux3ihKodI?si=bbzqRn3w7kxqDaEi"
                        },
                        new
                        {
                            ID = new Guid("015430c5-0ab6-41d5-acaa-7fabb13961fe"),
                            AgeAllowed = 16,
                            CountryID = new Guid("95c6d565-7c16-459f-8593-355c979ac948"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(629),
                            Deleted = false,
                            Description = "Phần hậu truyện của Nhím Sonic 1 và 2, đồng thời cũng là phần phim liên kết với Knuckles (2024).",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 100,
                            GenreID = new Guid("51d0012d-c1e7-4e8f-be62-cb1b35a8584d"),
                            Images = "SONIC.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Name = "SONIC THE HEDGEHOG: NHÍM SONIC 3",
                            StarTime = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/2gFjV9v7QVE"
                        },
                        new
                        {
                            ID = new Guid("a6c7db3b-8acb-41a0-89e1-9ec1d4799148"),
                            AgeAllowed = 13,
                            CountryID = new Guid("caf27fd0-76aa-4882-81a1-4d04aff3318f"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(639),
                            Deleted = false,
                            Description = "Bộ tứ báo thủ bao gồm Chét-Xi-Cà, Dì Bốn, Cậu Mười Một, Con Kiều chính thức xuất hiện cùng với phi vụ báo thế kỉ. Nghe nói kế hoạch tiếp theo là ở Đà Lạt, liệu bốn báo thủ sẽ quậy Tết tung nóc cỡ nào?",
                            DirectorID = new Guid("efd64aaf-74ab-4e5f-8c2d-5cc13169b00a"),
                            Duration = 120,
                            GenreID = new Guid("accd2604-dd0a-4ef0-9ce8-fce8de93d05e"),
                            Images = "botubaothu.jpg",
                            LenguageID = new Guid("6788f50a-b0e5-4c5b-835e-4d740eb46714"),
                            MovieTypeID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Name = "BỘ TỨ BÁO THỦ",
                            StarTime = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 1,
                            Trailer = "https://youtu.be/2k0jK_sWmwE"
                        },
                        new
                        {
                            ID = new Guid("67bfac18-f395-4a5f-ba2f-cf9a9b507e6b"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(646),
                            Deleted = false,
                            Description = "Lần đầu tiên nhìn thấy cô gái yêu nhạc rock xinh đẹp Jinny, cậu bé Song đã yêu. Chú Pong – một cựu Rocker giúp Song lập ban nhạc Bad Boyz Band để Song có thể mời Jinny tham gia. Tuy nhiên Jenny lại lọt vào mắt nhà sản xuất âm nhạc tên Arm.",
                            DirectorID = new Guid("2d858c0f-a6e2-4228-abe9-97c54f8ea459"),
                            Duration = 110,
                            GenreID = new Guid("accd2604-dd0a-4ef0-9ce8-fce8de93d05e"),
                            Images = "tretraukhongduaduocdau.jpg",
                            LenguageID = new Guid("e6bc39a8-9e23-46cf-bec4-35bf824c3875"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "BAD BOYZ BAND: TRẺ TRÂU KHÔNG ĐÙA ĐƯỢC ĐÂU",
                            StarTime = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/GKqrTQGHE3s"
                        },
                        new
                        {
                            ID = new Guid("6697c52f-2cff-4c30-a7db-6fa0a467be25"),
                            AgeAllowed = 15,
                            CountryID = new Guid("d7907a15-239d-4818-843d-a939256eb395"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(653),
                            Deleted = false,
                            Description = "Đây là một bộ phim hài về gia đình. Phim kể câu chuyện về một người đàn ông là sinh viên y khoa ưu tú quyết định trở thành một linh mục.",
                            DirectorID = new Guid("b7d908d2-aeea-42ab-96bc-3d27b90d6c4e"),
                            Duration = 110,
                            GenreID = new Guid("41dba4f2-3c13-4bb3-9cf7-27a5e212199f"),
                            Images = "chuyennhabanh.png",
                            LenguageID = new Guid("97361dba-3c18-4672-a008-55c92fa4bfea"),
                            MovieTypeID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Name = "ABOUT FAMILY: CHUYỆN NHÀ BÁNH XẾP",
                            StarTime = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/X3SY9XUlQAA"
                        },
                        new
                        {
                            ID = new Guid("8affaa93-8228-4d08-bb37-8b7d93306c26"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(660),
                            Deleted = false,
                            Description = "Nakrob, một kẻ lừa đảo bất động sản trẻ tuổi, phát hiện ra một khách sạn trên sườn đồi bị bỏ hoang gần bãi biển. Nhìn thấy cơ hội, anh ta quyết định biến nó thành một vụ lừa đảo khách sạn sang trọng.",
                            DirectorID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Duration = 100,
                            GenreID = new Guid("accd2604-dd0a-4ef0-9ce8-fce8de93d05e"),
                            Images = "chayngaydi.jpg",
                            LenguageID = new Guid("e6bc39a8-9e23-46cf-bec4-35bf824c3875"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "404 RUN RUN: CHẠY NGAY ĐI",
                            StarTime = new DateTime(2025, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Sub = 0,
                            Trailer = "https://youtu.be/jS6TZkBB0lY"
                        },
                        new
                        {
                            ID = new Guid("81af3615-e8a4-4b71-bbfe-01ee265b04d6"),
                            AgeAllowed = 13,
                            CountryID = new Guid("d7907a15-239d-4818-843d-a939256eb395"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(668),
                            Deleted = false,
                            Description = "Jin Bong là cựu cung thủ quốc gia và là người đoạt huy chương trong môn thể thao của mình. Anh hiện làm quản lý trong một công ty, nhưng công ty đang trong cuộc khủng hoảng tái cấu trúc. Vào thời điểm đó, công ty của anh đang thúc đẩy dự án Amazon.",
                            DirectorID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Duration = 113,
                            GenreID = new Guid("accd2604-dd0a-4ef0-9ce8-fce8de93d05e"),
                            Images = "cuoixuyenbiengioi.jpg",
                            LenguageID = new Guid("97361dba-3c18-4672-a008-55c92fa4bfea"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "AMAZON BULLSEYE: CƯỜI XUYÊN BIÊN GIỚI",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/JedDZeuTrzQ"
                        },
                        new
                        {
                            ID = new Guid("d151181d-92f8-4b2b-bf40-3e88b8c272a7"),
                            AgeAllowed = 13,
                            CountryID = new Guid("caf27fd0-76aa-4882-81a1-4d04aff3318f"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(674),
                            Deleted = false,
                            Description = "Sau sự thành công của hai phim điện ảnh chuyển thể từ tác phẩm đình đám của nhà văn Nguyễn Nhật Ánh, một tác phẩm nổi bật khác của nhà văn hiện đại thành công nhất Việt Nam chuẩn bị được đưa lên màn ảnh rộng: “Kính Vạn Hoa”.",
                            DirectorID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Duration = 123,
                            GenreID = new Guid("897e8628-f464-45cf-8797-3921800d5cf5"),
                            Images = "kinhvanhoa.jpg",
                            LenguageID = new Guid("6788f50a-b0e5-4c5b-835e-4d740eb46714"),
                            MovieTypeID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Name = "KÍNH VẠN HOA: BẮT ĐỀN CON MA",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 1,
                            Trailer = "https://youtu.be/EDDbR2jINsQ"
                        },
                        new
                        {
                            ID = new Guid("a398415c-9000-49ef-847c-fe4cff4eca9b"),
                            AgeAllowed = 13,
                            CountryID = new Guid("95c6d565-7c16-459f-8593-355c979ac948"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(681),
                            Deleted = false,
                            Description = "Sau khi Simba trở thành vua của Pride Lands quyết tâm cho đứa con của mình tiếp bước vị trí đầu đàn, trong khi nguồn gốc của người cha quá cố – Mufasa được khám phá.",
                            DirectorID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Duration = 118,
                            GenreID = new Guid("f89cde20-e7db-4d23-8db2-bfc2c489f850"),
                            Images = "mufasa.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "MUFASA: THE LION KING: VUA SƯ TỬ",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/1KtBhnTfq8I"
                        },
                        new
                        {
                            ID = new Guid("7cb9e5af-9880-439f-8ce2-94b88cc3c5f3"),
                            AgeAllowed = 13,
                            CountryID = new Guid("4cd7b368-635b-416f-979e-5c5d331eb110"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(687),
                            Deleted = false,
                            Description = "Một cuộc tấn công bất ngờ của Wulf – lãnh chúa Dunlending thông minh và tàn nhẫn muốn trả thù cho cái chết của cha mình, buộc Helm Hammerhand, Vua của Rohan, và người dân của ông phải thực hiện một cuộc chiến đấu cuối cùng táo bạo tại pháo đài cổ Hornburg",
                            DirectorID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Duration = 134,
                            GenreID = new Guid("51d0012d-c1e7-4e8f-be62-cb1b35a8584d"),
                            Images = "cuocchien.jpg",
                            LenguageID = new Guid("522b1844-c87b-4da6-9ae9-db0daa69f1ef"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "THE LORD OF THE RINGS: THE WAR OF THE ROHIRRIM",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/4pP71_7b_Y4"
                        },
                        new
                        {
                            ID = new Guid("b87c7759-e513-4deb-bf6c-7d71b02b2852"),
                            AgeAllowed = 18,
                            CountryID = new Guid("95c6d565-7c16-459f-8593-355c979ac948"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(695),
                            Deleted = false,
                            Description = "Mối quan hệ phức tạp giữa Kraven với người cha tàn nhẫn, Nikolai Kravinoff, đã đưa anh vào con đường trả thù với hậu quả tàn khốc, thúc đẩy anh không chỉ trở thành thợ săn vĩ đại nhất thế giới mà còn là một trong những thợ săn đáng sợ nhất.",
                            DirectorID = new Guid("0951faaa-3ce4-4e22-9831-cffd4be2c97f"),
                            Duration = 127,
                            GenreID = new Guid("51d0012d-c1e7-4e8f-be62-cb1b35a8584d"),
                            Images = "thosanthulinh.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Name = "KRAVEN THE HUNTER: THỢ SĂN THỦ LĨNH",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Sub = 0,
                            Trailer = "https://youtu.be/gnj_VBjwiqU"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PendingPoint", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BillID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("PendingPoint");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountMax")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(8337),
                            Deleted = false,
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(8371),
                            Deleted = false,
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(8374),
                            Deleted = false,
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9785),
                            Deleted = false,
                            Name = "Room 1",
                            RowNumber = 12,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9789),
                            Deleted = false,
                            Name = "Room 2",
                            RowNumber = 12,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Show_releaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_releaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("d5e11f4c-2477-4cf3-b24c-b82e6d9a0f36"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(788),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 13, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(786),
                            ShowTimeID = new Guid("e8ac2a81-5899-4678-906a-c68e474749c2"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a58c93de-0c36-46ef-b2cf-b144102c82d5"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(793),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 12, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(792),
                            ShowTimeID = new Guid("42f300f7-5e48-432f-878b-48e63db072fd"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("073aa2e1-c4a9-4796-8aac-5913dcdaaa0d"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(796),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 11, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(795),
                            ShowTimeID = new Guid("f1d2383d-6a70-46c0-b788-9c1fe10adcec"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0d45d589-6f3b-4866-b92f-8ca76d536f49"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(801),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 10, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(799),
                            ShowTimeID = new Guid("500490e6-d3ab-454f-9324-157b16a4d789"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3dc54f82-fa26-49c7-ae23-5f49fdd5cc4d"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(804),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 9, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(803),
                            ShowTimeID = new Guid("212497d5-7cd4-4ad1-a2e0-e960babd8b72"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2115ddb4-be50-48ed-b34d-4c7fce71a4a7"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(810),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 8, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(809),
                            ShowTimeID = new Guid("2dfab786-30c7-4840-8ee3-59af102e09b0"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("61095a31-49b5-4454-95ee-ce133c6ae069"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(814),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 7, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(813),
                            ShowTimeID = new Guid("27567a1a-59c9-4e07-aaa3-2421b171c760"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("0c4e6d18-4243-4271-b392-c8955585a5ea"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9817),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba3a7ea7-5995-4749-b24e-ebe7a917d8e6"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9852),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b528ebb8-d6ab-4be2-addb-6f1963112d6a"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9855),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a41229ae-ba2e-4962-81ec-ba7ece47bd37"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9858),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("489bc340-20c8-4ec8-9d3b-d93620fc6a1f"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9861),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("09db66a0-c9e8-4320-9044-868846eb2f82"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9870),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("644d71c5-6217-422c-8fa9-d375473a5cad"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9872),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f24cd19c-5130-4ad8-8da0-f25389fa5cd4"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9874),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d74de3d8-8df0-416f-8622-8f0989b0de38"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9876),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("39565b18-02b9-4c30-8eaf-db85d1c36b05"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9878),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a747f046-dd0f-4923-b2ee-db5924ea532e"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9880),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fd8ac0b2-bec9-4d8f-93e5-84059c6a0c6f"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9883),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("57e43fa2-4879-4b07-8630-30260687adb7"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9885),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d2283cb6-8d27-4ec2-861e-e57efe5b3a1c"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9887),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3743dc36-eebf-4398-ae5f-a607f718accb"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9889),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f8fa78e2-b1e5-458c-b30e-7f2fde30cb15"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9890),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b1cb909e-6fc1-4d71-950b-d3c6105a37b8"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9892),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("15eeca87-ac70-4bc1-a5d3-d1e16ef825b3"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9895),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fbb18f5e-21c7-4244-8c14-4f17ef208aad"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9896),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c2a10c7c-0f41-4544-9f77-8c03d9dcea3a"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9899),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5beedec8-d37d-4026-993f-bfb9084ef572"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9901),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5eee81b9-6fee-48a1-a367-03a59653aec0"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9903),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a9452e69-5609-497f-ba66-1048f129abc7"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9905),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0d0ca8d0-a44a-440e-b2dd-d1e08cdcc1ca"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9907),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f7dad010-1c67-4120-adb3-6737c3d8897b"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9909),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b7c473f-040f-4ce5-89fb-e40dc7a308db"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9910),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("21b1d6c1-5951-41be-9b13-8c932813fd6c"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9912),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("85eb437d-76f5-4ada-9e55-5ce26c61dd15"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9915),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fea61104-0056-4598-8996-05e9a7bf9638"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9917),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fca79778-abb3-4640-96f1-347282f44a36"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9925),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f305a84-cf4b-4a01-b3ac-f9db3a3c10d4"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9927),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a46c0357-2c29-4f4c-961a-302845c56558"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9929),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("99d9795b-1923-4b75-b6a1-5fd34d34cd5c"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9931),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b00c8de0-bd04-42f8-b114-2b3f5bbf401e"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9933),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ab3cfe9d-8adb-44ed-857d-b149b39b303e"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9935),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("482a5648-6a18-4fcf-b07a-9ef1b6bf66d6"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9939),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("db131e3b-6a0b-47a1-8a56-69f14ce6ecbc"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9940),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("81169380-53c3-4b99-af33-379930d40de4"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9942),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("97f90115-79bf-4825-9d81-60cc668f5314"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9944),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("11daa59e-c378-4026-88c0-b22e4e5163c7"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9945),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c075f84b-a45f-46af-b81f-88ffaab1ee1d"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9947),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("759d2402-33bf-4bf5-a886-8221ea71a31b"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9949),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6e3bd334-db33-4148-aad8-1d960bd22cf0"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9951),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f66bfce2-c3c4-4a59-aad6-c91e4d27b3c4"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9954),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7fff4f6b-cac4-4bba-a6fb-1a572bf6ef21"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9955),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f14e313-d42c-4e95-8619-a45368691658"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9957),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a21c31bb-7a89-4ad2-a780-aaad6871df11"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9959),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bd10189c-9b32-44f2-9d95-93967f999995"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9961),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a3a1853e-0448-4f90-a78f-a2f046613116"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9962),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b82f5550-6a0c-40fc-8b0c-b2b38a050a0e"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9964),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c00a19d9-6fee-4b3a-b558-f6b2e5d0bd28"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9966),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("291a69bf-c041-4d3c-b3b7-47e3e3e3fc5b"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9969),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("60dafa9d-f6b6-400e-9c08-0e386b06cb4b"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9971),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c192d808-20f2-4414-92ea-b5e45d5ed568"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9987),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e8d268f4-c447-41c3-a659-306a7044c56f"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9988),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b56c7835-eb42-4f79-b33f-b2af8c1e537a"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9990),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ce71e879-98c7-4708-9101-7bf7b82811f9"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9992),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4274b613-a74b-4c3b-b63d-075b29b448ce"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9994),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e9d7dc78-acd9-4668-b14f-f163737d16f4"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9995),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b1c05cbd-9770-4e7a-a8eb-195c6627b1c7"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 625, DateTimeKind.Utc).AddTicks(9998),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("581ca6a3-b639-46f5-a900-0e8dd04a274f"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("99633a3e-c203-4b04-b852-9c042c33c662"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(2),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("40fe557b-9f54-462c-9220-191142ddee56"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(4),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e1093f12-f0e9-492a-9480-6a25bae2ba04"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(6),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3031161f-292f-462e-8154-c4c175c01e9f"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(7),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7e12f1f2-85d4-4712-adc1-40b3536c1048"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(10),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a071f44e-3933-41e6-b194-864e481a745c"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(12),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4eb89de4-bfb0-43f7-bc8c-0f6b2ae09d07"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(15),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a5fbd853-f4a2-4ddf-a95e-03a3dafdf671"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(17),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9a99de86-6d8b-4de5-be57-0e2740eb456c"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(18),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("61593cf0-0537-441f-9441-342078af69f4"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(20),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("52910be0-3a3f-47cf-bf11-c82a73810583"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(22),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2b1c2d43-7a21-4fc0-bd13-b6f39f05a78f"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(24),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("504b5412-4561-41b4-adfe-13a2ddb8d25d"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(25),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("64850543-27ab-49eb-941b-8c39e7ae9c83"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(27),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("394b5b00-65a4-4e76-bb9e-8a08100ea2d3"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(36),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f3fb7e84-0a13-4328-9ea0-b3db6b1665b1"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(38),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5401929a-b2d1-4195-98fb-a1c6581337bd"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(40),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ab80e6e8-6e0d-44cc-94de-abaee6e17959"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(42),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("163a63d1-d9b5-43ba-89ca-8bcad3a2c7e1"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(43),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("26fcc876-517d-4a15-b6a3-8d9164e408c2"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(45),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e4a24bdb-5b52-4133-9c9b-1565a9286711"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(47),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2b5feaa8-a39d-446f-acf3-0f462767a7ca"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(48),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("464bc431-1fc0-4ea7-9330-04accd8cb75c"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(51),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("97d64010-e78c-41e8-845e-66546777b852"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(53),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("49ed9ce2-bd3f-442d-84af-e5dbe27e2970"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(55),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1e8e035a-dab8-40cd-bd2c-56ad3bf824a2"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(57),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("085eaf48-284e-42dd-8bfc-14e9278cce94"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(58),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0d4141b1-7e3c-4152-89e7-25a7b47f955f"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(60),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("279395c3-4294-4bfb-86e5-df63b717409a"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(62),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6eeffd01-f733-43b9-944f-695dcf2c68e1"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(64),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d09d32ab-c44b-473f-90f9-bd2251267758"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(68),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f86593bd-4b6d-42ef-b56c-fba3d3589ef2"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(70),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2f1cf36e-8d4e-4dbf-b967-71ad6dc3b03b"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(72),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95d587e4-bccd-4c9f-adc7-adbe055fc931"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(73),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("85a02826-7b92-4176-b4a8-98910579512d"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(75),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6848917b-4556-46bb-b76f-1052d62a6abc"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(77),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b9d5db5-e4a4-4d70-9bb3-193b8e0d917b"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(79),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2529879d-0137-453b-95d7-72dae2895266"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(81),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0e5a8515-1eb3-4028-a96b-5336848ceba4"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(84),
                            Deleted = false,
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("261d8323-77e5-40b6-a7f1-4a5e6612b4e6"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(92),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c4280c89-2338-40e1-828a-8bdb27032f1d"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(96),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("642b8101-166a-482d-9c5b-ba2ef0868a89"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(98),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3fa292ec-b389-4b60-a87f-62e048e2d37d"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(100),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e6fb856a-2334-436c-9d40-5e2f17a0ce90"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(101),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("35f5d916-2a5b-4208-81fb-f2c90d2d3f46"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(103),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4e1b6ce7-f6f4-4832-8e3b-5ef462e5e622"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(105),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3793e99c-f863-42c4-a64d-6c046ede9705"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(108),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6955249a-4847-4317-bbc1-8b4ec29515df"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(110),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c72f162a-d1fc-45b0-b04a-7650c8a158ce"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(111),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f3d0559d-4021-4b69-9709-30c4e0635643"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(113),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("469909c4-e948-47e6-b6c8-cf6599fde067"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(115),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("22aae47a-21ac-4b37-992b-d73162cdb933"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(117),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e595cd13-595c-4df0-8d84-8271ddecc835"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(119),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6993d7e3-67b8-4469-8fe8-71da6ec57b7e"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(121),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("46e80e65-0ff4-4795-82e2-df34727ba611"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(124),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7309bd82-e96a-4ffe-844e-4078c195cebd"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(125),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2303bab1-1afa-4423-9b92-47ef5446d929"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(127),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("62a83ca5-eb61-4901-b2fb-53972c3ca46b"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(129),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f45f8191-9bd0-48bd-b1c6-d3e5deab0b00"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(131),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("764e5550-737e-441d-9a25-5286185950d0"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(132),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f97df626-f7b3-4062-80de-3a65ca9eae90"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(134),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ed92c086-5b5d-4caf-8821-3d63a8e98cc6"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(136),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("50de2109-35d9-4a14-bd65-b6759d49bf53"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(139),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("642380e7-2041-47a0-8b07-beda70f7ff43"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(141),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2a7cb53a-5835-437f-af29-112eef098062"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(149),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca7bf5c5-40d1-47f1-8a92-27c62adc52b0"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(150),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("951ead98-95e5-4e54-9add-6a5db436db50"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(152),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9f0b92b5-0887-4cd7-b33c-51be349419ae"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(154),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("817e4dd4-ca9b-464f-88e9-c5708369f0c2"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(157),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6056ed43-9902-468e-a4e8-2b3cceda5ac6"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(159),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("70cf37fa-4b7e-41d4-be66-ec84365366eb"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(162),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5e27a603-fa69-448d-ae1d-f93db499df9d"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(163),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4faab824-ca3f-4b21-9e14-b1822f909076"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(165),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1dd4fc4e-fa2a-4f9d-941c-06ff55dfb1ea"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(167),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("892b28a2-9a0a-455d-a817-2656b0f707c0"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(169),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ffd653d2-1352-4424-8554-641c8152deeb"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(170),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("25d23d71-cddc-4121-9fee-c45a27c324bd"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(172),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d10991ae-2427-4104-ade5-b02800f1b382"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(174),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6b0f5681-69ae-46d8-87e6-d3d3d10a2b2b"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(177),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4cb7cf66-6bec-4c17-91fd-fe11305ba9f8"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(179),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("31cb8a80-a424-4c27-b8c7-8af8d754cb1e"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(181),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2e074647-f079-4613-bed9-c28970154ee4"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(182),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1ba125b6-297e-4fe0-8740-5c3053a4a477"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(184),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bc46ce2b-2d62-4606-9d27-4313c0fbbe79"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(192),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("51daaefd-a2a8-4bcd-bb4e-6a1bc81a4484"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(194),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("be7dfdab-d47f-4977-af88-273ae753be87"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(195),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("efb1ec88-d362-4386-a430-d6357807c489"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(198),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4a105ef0-6c70-4beb-86a6-e26a5b8b2d1f"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(200),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3bf8ceda-3d25-4215-95b1-2578f1388695"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(202),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("61f104d9-7081-4adb-b914-9b8026668f55"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(204),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("337d8e60-b517-4418-ab15-cc7aabbdf99b"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(205),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0d8eaf07-6165-4d1f-a6ea-7fd41b3f391c"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(207),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a1e473cd-e3b5-4f6e-89c1-f5bf4e682b7c"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(209),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("96bf359b-acdf-425a-a5aa-90271fdac798"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(210),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9f4b8cc9-917c-4cb3-8b7e-df952d193ba6"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(214),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6484db0a-53eb-4d59-8fdc-d7463d6f0146"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(215),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e99e4703-a8cd-45b1-b56c-8b0df7dbb080"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(217),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6fb3b1fa-4f3a-477f-8ce6-2cb9c2107e58"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(219),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8fcdb1c9-46e1-4037-86c1-7a6e318f4720"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(221),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0261d1e9-8d4c-4637-afe2-8b02eb0427c7"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(222),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ed35c9dc-87c4-452d-9818-02046dfe03dc"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(224),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("37e1a1d7-7b66-4bf3-bb5d-5b1b443dbadc"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(226),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("312eafd8-68f5-4d20-87fc-0f2793a62ec3"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(229),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("14cdd67f-d916-4d21-b5cd-907ea2e70001"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(231),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0fb1bac9-28f1-4018-8d9e-1161b280002f"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(232),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d7bc5c7e-082a-4872-b1fc-bf6b5411494e"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(234),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7c8a1e5e-2598-40f1-bc15-d6fa2bc50f5d"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(236),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d3897069-cc6e-4c1e-8ffe-f64f9a7b8993"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(237),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3aa82d91-b7ff-46ab-8c11-37f87b22cfd3"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(239),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("86032e7d-e820-4437-b06f-676bfb337f30"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(247),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f066be09-70ff-4bc7-9fc5-c4229fb7845a"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(250),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("26e342f2-819e-4567-a3b6-87653e37c3c4"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(251),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a4b89887-5f5c-473b-8a99-5d47d4956c7b"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(253),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e43b6d12-00b8-4b5e-9c11-9f63c689554e"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(255),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e92c017e-12d3-4b2f-8df2-dd61a6d08e56"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(257),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1b748649-ee07-433e-a268-2c91f4a98db5"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(258),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("33997abf-7591-4d18-9217-7b2d3c027b9a"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(260),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("91fe1e1c-e2fc-4ea7-a674-2abb9ca993e1"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(261),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b5b9f7d-91ae-465c-bf75-fde3bcd181d2"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(265),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("feabb299-0065-483a-afcf-0328e53ab853"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(267),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7675ac60-2d89-474b-aab9-f0106459f829"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(269),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e3e68525-5109-4b00-bfea-1db7cbe34f9a"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(270),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a400c535-e3e1-4074-a52e-57ea89cdc056"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(272),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a0868d38-0c2d-41c5-9d0f-63550413c5a5"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(274),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c4d0bfb8-b94c-4a1a-b101-34d82527f598"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(275),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eac36c76-cf1e-45b8-949c-aa48b3ff5219"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(277),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a38feff9-49e7-4c5e-af5a-f64eecaacdd5"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(280),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9f931388-99b1-4784-b718-8dc07e322b08"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(282),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b78a0ad-4cb5-4b99-9f0b-c9aa108ec8da"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(284),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("adb864ce-2464-450f-8ae0-db35a6a4bb4e"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(285),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9e47cbd6-f61c-4b29-833a-e3c3eb2d3e8c"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(287),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c4b368d0-2f82-496a-8064-6a5bbe0ad5df"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(289),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4e606b90-9259-4db5-b497-e0d701743d3f"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(291),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f74b93c4-1165-4525-bd17-8310c1e212ea"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(293),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c494ef92-aa70-48aa-8d1e-1b3787cf717c"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(303),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2ec3f8a7-1449-4a95-8fd8-b1a4c23541fb"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(305),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cd5cb323-7509-4051-93f3-e83e22e0d9dc"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(307),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ea9755a1-b36c-43be-ac88-3ee213266bcf"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(309),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("46f4b11e-96fc-4b9d-a700-e069f60084e0"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(310),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9667c286-b497-4d15-8c9a-8f46046b4bee"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(312),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c9a1b033-cd84-402e-ade9-87661baf0f53"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(314),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("26fcbf9c-3db6-49ab-af77-d0481f805d21"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(316),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ed06a17a-ac37-4b79-9e18-95cb9149b2e5"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(320),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("540961ab-3223-4359-a59b-18db6d29c45b"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(321),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f10f1172-9fa3-4431-951a-dda99454bb32"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(323),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b6c463c3-e8ef-4bf1-9698-7816d44dcf31"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(325),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("873636e1-fd84-4539-8259-f3957f79efa8"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(326),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0fec4b79-8688-427c-b314-5c4034b6c9b6"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(328),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("98b7a336-7017-49d7-ab3c-83a9547932b5"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(330),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("34ab8796-487b-4d6b-85ae-0124fae12f12"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(332),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eeb924dc-3300-4f73-94e6-c00d06f9e51e"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(335),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4ad7bd33-e5d6-4aa9-8df9-0d22748d3a82"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(337),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ce535e83-ba35-474b-8f39-445d605e4100"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(339),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4a0f5ee1-a221-40f9-afb9-b0749e30a261"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(340),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f33ab97e-413e-4677-8321-4dcb88681f40"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(342),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8c2fcd09-0ec3-4452-a16c-a8c270f6682a"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(344),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e1e8d76c-e9bb-470b-8667-76348c4eac85"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(346),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aae62744-b387-462a-b171-a4a45bf6b390"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(354),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2f98f31d-5aca-49bd-ac78-7d32e8193e4a"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(358),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("472fe15e-94b3-4796-8e9c-c766ed01f8ff"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(360),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ef7e312b-5701-4c81-90d8-63a86295d937"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(362),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca55f6d6-73fa-4fb4-a3e1-36834c5ed0bc"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(363),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("32d2dc8f-e72c-4f31-b723-71251f111f28"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(365),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e0cca3d3-328b-4495-bde2-3df333000771"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(367),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d716171-4c54-4c8c-9298-b1c554987620"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(369),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eae8bd44-5857-414d-bcfc-0cb0f95fbe3d"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(371),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("61876342-cff4-4fbb-98b8-6781f87fc17e"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(374),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("279b3cda-54fb-4ead-8131-925dbf747959"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(376),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8eaaf83f-69fc-4fa7-925b-ef6900636b52"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(378),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d71195df-25fc-47f0-aa40-2238b86adcad"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(380),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4d3aa27c-3f2b-4310-b0ce-e2dce10fb107"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(381),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3fd80db6-f090-42f4-948f-5747f3449603"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(383),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c4e4ab45-9790-4348-99fe-0f9632feae47"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(385),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7cc707c4-c981-493b-979e-56e78ab93808"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(387),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7def9e7b-216d-4397-b990-167bfabf64fc"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(390),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cb1b6292-09c6-4797-bf3a-c1ec63821f8c"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(392),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("96eb0e23-4ecb-4999-808d-35e673fa2763"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(393),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f7b16944-3322-4e65-a281-9e25fbd6871a"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(395),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("400ead98-2dd2-4e39-9e4e-7348e97c080d"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(397),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("638c1c2d-0106-4584-a28e-bc0d115471eb"),
                            Column = "A",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(399),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7f55993f-10e5-491c-8562-406e83809496"),
                            Column = "B",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(407),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b81ab25-5028-4574-90d7-06edba09b477"),
                            Column = "C",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(409),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ce914b5d-d252-493f-8570-fbbbff43bb10"),
                            Column = "D",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(412),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d5912a27-6dc6-4033-9035-652ca904ac91"),
                            Column = "E",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(414),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("78c3be3c-cd02-435d-ab63-74ea5c9ca739"),
                            Column = "F",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(416),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("00366fff-99b4-479b-a2af-ec8afed363bb"),
                            Column = "G",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(418),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4d961b6b-39f0-4a08-947a-a68e1b5244a3"),
                            Column = "H",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(420),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7d148118-8288-4720-b048-a60017fd2acd"),
                            Column = "I",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(422),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6a12ed66-2479-411d-bd02-e382499ba6a7"),
                            Column = "J",
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(423),
                            Deleted = false,
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("seatEnum")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ShowtimeId");

                    b.ToTable("SeatShowTimeStatuss");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9710),
                            Deleted = false,
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("0ce08fd6-0d1d-4c61-8b8b-7827baff7fe1"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9714),
                            Deleted = false,
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("587ff198-12d1-4eb4-9ce7-909da4af6bcb"),
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9716),
                            Deleted = false,
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("e8ac2a81-5899-4678-906a-c68e474749c2"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("42f300f7-5e48-432f-878b-48e63db072fd"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f1d2383d-6a70-46c0-b788-9c1fe10adcec"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("500490e6-d3ab-454f-9324-157b16a4d789"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("212497d5-7cd4-4ad1-a2e0-e960babd8b72"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2dfab786-30c7-4840-8ee3-59af102e09b0"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("27567a1a-59c9-4e07-aaa3-2421b171c760"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("146018f3-e058-4e33-bb08-f8ce4aab5fd9"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c87ff0ba-e5ce-412d-b9fa-e46c2f28454f"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("85b72290-b0eb-4f63-a179-5393535216d0"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("fe12dc2b-95bb-474c-af5b-fafcfe4bf9c5"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(742),
                            DateRelease = new DateTime(2025, 1, 4, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(752),
                            Deleted = false,
                            MovieID = new Guid("37dfe56e-2e16-4ee3-ae18-2a92e6560187"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2025, 1, 3, 23, 15, 24, 626, DateTimeKind.Local).AddTicks(746)
                        },
                        new
                        {
                            ID = new Guid("3865efea-aede-452b-ad7f-8bfb25f3299b"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(757),
                            DateRelease = new DateTime(2025, 1, 5, 23, 14, 24, 626, DateTimeKind.Local).AddTicks(759),
                            Deleted = false,
                            MovieID = new Guid("2a1bdcc3-7d7c-4b97-8923-08dc59ca1b1f"),
                            RoomID = new Guid("dcba748c-b8e1-4c8d-8f6a-574736678944"),
                            Status = 1,
                            TimeRelease = new DateTime(2025, 1, 3, 23, 16, 24, 626, DateTimeKind.Local).AddTicks(758)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BillId");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("c2a06f9f-f5a7-4c2e-a967-7bbdad39da0e"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(869),
                            Deleted = false,
                            Price = 50000m,
                            ScreeningID = new Guid("d5e11f4c-2477-4cf3-b24c-b82e6d9a0f36"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("e8ac2a81-5899-4678-906a-c68e474749c2"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("aad75bbe-70e2-473f-87fb-e0e2a31ad0f4"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(878),
                            Deleted = false,
                            Price = 60000m,
                            ScreeningID = new Guid("a58c93de-0c36-46ef-b2cf-b144102c82d5"),
                            SeatTypeID = new Guid("0ce08fd6-0d1d-4c61-8b8b-7827baff7fe1"),
                            ShowTimeID = new Guid("42f300f7-5e48-432f-878b-48e63db072fd"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge3D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge4D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            CreatedTime = new DateTime(2025, 1, 3, 16, 14, 24, 626, DateTimeKind.Utc).AddTicks(840),
                            Deleted = false,
                            PriceAfter17hWeekDay = 60000m,
                            PriceAfter17hWeekeend = 70000m,
                            PriceBefore17hWeekDay = 50000m,
                            PriceBefore17hWeekeend = 60000m,
                            Surcharge3D = 30000m,
                            Surcharge4D = 40000m,
                            SurchargeCouple = 50000m,
                            SurchargeIMAX = 50000m,
                            SurchargeVIP = 30000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("feca919d-9b81-4e1f-84ba-ca8ab412d25f"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(8681),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6049ce44-ebcd-430e-8301-82563441d94f"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9193),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("887d1a75-0b1a-4001-b91d-776b6180630e"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9226),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("592d6a83-4e74-412b-a112-508206a77c73"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9259),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("44133169-5bde-40b3-a555-54a94faef1ff"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9290),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ab200e5d-a070-40ab-a88b-3135988215a3"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9319),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("18fbb7c2-2daa-411e-a9f0-b57b3fbd5681"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9348),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("85aedf83-2a0d-472c-8023-701e622fd941"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9373),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9260df19-ae1d-4dc3-9f88-0fb9cac8ca07"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9401),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b50e2228-d579-4dc9-8578-0116d4e9be28"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9423),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("46117c04-e5d7-427e-8a98-2ca1fbc3621b"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9443),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cbc329ab-5d0b-4c8a-b657-ba850e2a9ec4"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2025, 1, 3, 23, 14, 24, 625, DateTimeKind.Local).AddTicks(9468),
                            DateOrBriht = new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Deleted = false,
                            Email = "giaphipp@gmail.com",
                            FullName = "Phùng Tiến Giáp",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "LK25tQh1RqkKbrq4C2l6fw==",
                            PhoneNumber = "0862774830",
                            RoleID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotions")
                        .WithMany("Bills")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Promotions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieTypes")
                        .WithMany("Movies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");

                    b.Navigation("MovieTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PendingPoint", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithOne("PendingPoint")
                        .HasForeignKey("NeonCinema_Domain.Database.Entities.PendingPoint", "BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PendingPoint")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", null)
                        .WithMany("Screenings")
                        .HasForeignKey("Show_releaseID");

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("ShowtimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Seat");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("Ticket")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("PendingPoint");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PendingPoint");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
