// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20241224153507_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AfterDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPoint")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("729175e5-9bc1-49e7-8f84-5b49efd5da0b"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(597),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("3a2376ba-6f8a-4090-822b-0a46c4b64afa")
                        },
                        new
                        {
                            ID = new Guid("54464c4e-59cb-43e8-a738-2c525874a7bf"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(601),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("6d0523ea-1c35-48e9-9878-b3edc48f10f5")
                        },
                        new
                        {
                            ID = new Guid("9122e100-6d36-4223-9b4e-4e79a75efc05"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 12, 23, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(603),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("130b1f80-4725-4d96-8072-49ef2042b51f")
                        },
                        new
                        {
                            ID = new Guid("2bbdc594-d267-4ee1-bfc3-c2c2e722d2c4"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 12, 22, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(606),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("c5e4b971-a9ff-4526-b873-7735f2a813df")
                        },
                        new
                        {
                            ID = new Guid("3f76362f-4384-4b9a-83a2-dea03b92ee84"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 12, 21, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(610),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("d43fd482-4f24-41ac-9fb4-da616a0628bd")
                        },
                        new
                        {
                            ID = new Guid("6f2a5d7d-56fa-425a-97b7-a59ef0012214"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 12, 20, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(614),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("a1931b12-73b2-4eb4-be80-b252147c75c7")
                        },
                        new
                        {
                            ID = new Guid("b9c7e0f0-df9a-4578-a666-4c1482c364cc"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 12, 20, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(627),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("a1931b12-73b2-4eb4-be80-b252147c75c7")
                        },
                        new
                        {
                            ID = new Guid("0890b743-c61a-4c7c-896c-8ca9e789a1ab"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 12, 19, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(630),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("a69bf531-5cd2-4814-810c-6860c4d79ffe")
                        },
                        new
                        {
                            ID = new Guid("d52e3e7f-ccd1-44d0-8b01-1048e75a07ab"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 12, 14, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(632),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("3d4cc5c5-8d87-40ea-ae21-a46c00c78ff6")
                        },
                        new
                        {
                            ID = new Guid("7ac1cf98-0eae-4f25-ad0c-ba298df729ee"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 12, 16, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(635),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("8cf974e4-a612-4d5b-b2cf-ca3b029d7fe1")
                        },
                        new
                        {
                            ID = new Guid("5e48c616-3a48-4c5a-8651-cbfd37624e49"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 12, 18, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(638),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("5509a1ac-0787-4e73-ac9b-66ed70fd6d11")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");

                    b.HasData(
                        new
                        {
                            BillID = new Guid("729175e5-9bc1-49e7-8f84-5b49efd5da0b"),
                            FoodComboID = new Guid("17921c63-706c-49a7-9986-a9e428240d68"),
                            CreatedTime = new DateTime(2024, 12, 22, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(702),
                            Quantity = 1
                        },
                        new
                        {
                            BillID = new Guid("54464c4e-59cb-43e8-a738-2c525874a7bf"),
                            FoodComboID = new Guid("a336b81f-5964-4798-ad1d-57fd8149e403"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(705),
                            Quantity = 2
                        },
                        new
                        {
                            BillID = new Guid("9122e100-6d36-4223-9b4e-4e79a75efc05"),
                            FoodComboID = new Guid("6f71221b-21d7-4526-b36a-1a539213f416"),
                            CreatedTime = new DateTime(2024, 12, 23, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(707),
                            Quantity = 3
                        },
                        new
                        {
                            BillID = new Guid("2bbdc594-d267-4ee1-bfc3-c2c2e722d2c4"),
                            FoodComboID = new Guid("37c7a46a-ffcc-4163-a478-5ad121e40029"),
                            CreatedTime = new DateTime(2024, 12, 22, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(708),
                            Quantity = 4
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("ea9a86b0-09e8-48ab-89a1-e1ce02be2933"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("e0be44ef-42aa-4756-b0ae-e859e78d76c8"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("87799fad-175c-40e9-a85f-94d7bd3eeb0d"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("d2ee7907-9d48-45f9-858a-db5c16725483"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9523),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("9d92b4be-7673-4223-bff8-7dc3ec19656a"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9527),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("d3984bda-4916-4b25-800f-ee9d8601decd"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("69575267-03cd-4058-8361-f986251b59e1"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("a21d647d-3bf5-4a20-8dbc-336cac9654f1"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("f2e73916-1a5f-4670-9d47-a4cf7b4d747c"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("d1df3472-b743-4ac6-b027-1d5cbad5f312"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("0189e990-e21a-4000-adb4-968a6c8e6688"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("0d909c98-808c-4812-bb6e-48d7daefb9e7"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("82156b6d-5467-4964-bf29-69974bf68d93"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("b42d6818-43bb-4cf3-9238-cff676b98e6c"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba30c525-40e5-4c51-a29b-73102d020d81"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2137f880-db34-4e83-bc69-fbf5a2eeb236"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("800480dc-7e7c-4dc0-8b30-c6276c5e842e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("235a5763-4df6-4ad1-8847-7105ad9b0841"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("10018c37-c548-4740-a6cf-74ffc0c9e60c"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aff43723-2430-480a-b98e-1c88fe4e5512"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c5d2a780-0210-49ce-95f7-9e8d89c7de80"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("255fbb87-238a-4d20-804b-a3ba0017302d"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Quantity")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("17921c63-706c-49a7-9986-a9e428240d68"),
                            Content = "Combo 1",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(526),
                            Description = "1 bắp 1 cola",
                            Images = "combo1.png",
                            Quantity = 1,
                            TotalPrice = 80000m
                        },
                        new
                        {
                            ID = new Guid("a336b81f-5964-4798-ad1d-57fd8149e403"),
                            Content = "Combo 2",
                            CreatedTime = new DateTime(2024, 12, 23, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(529),
                            Description = "1 bắp 2 cola",
                            Images = "combo2.png",
                            Quantity = 2,
                            TotalPrice = 100000m
                        },
                        new
                        {
                            ID = new Guid("6f71221b-21d7-4526-b36a-1a539213f416"),
                            Content = "Combo 3",
                            CreatedTime = new DateTime(2024, 12, 22, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(533),
                            Description = "1 bắp + 1 Aquafina ",
                            Images = "combo3.png",
                            Quantity = 3,
                            TotalPrice = 75000m
                        },
                        new
                        {
                            ID = new Guid("37c7a46a-ffcc-4163-a478-5ad121e40029"),
                            Content = "Combo 4",
                            CreatedTime = new DateTime(2024, 12, 21, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(537),
                            Description = "1 bắp + 1 cola + 1 khoai lắc",
                            Images = "combo4.png",
                            Quantity = 4,
                            TotalPrice = 135000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("903b8a50-94cd-40f9-ac0b-5466b8346ad2"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("293ae831-9c11-4c0c-8094-41e3e9cbbdf9"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("4c70c8c7-26ff-40ea-9c45-03f422548c93"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("ab37abf6-f115-4b8e-9bdc-108d7f208d09"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("c9cb2deb-b342-4ee8-9dde-bfe82fb7e5d9"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("f99a61f7-0fbc-4c34-9d86-18b528627c27"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("b1f1de18-ab6c-468e-bd83-d6438ede3d0f"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("507041c9-bc4a-447c-af3f-6afee691acbf"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("364c86d6-84d9-495e-8b47-b94bc1301f85"),
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("ff49249f-008f-480f-b842-df26767823b3"),
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("55d1a14a-bf0d-45e4-8bc1-931f401cb90f"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("2be44c74-f59e-48e8-85bf-7ab3181cab75"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("17acb37d-10f0-4331-b8cf-22442aa1cf24"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            MovieTypeName = "3D"
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            MovieTypeName = "2D"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(200),
                            Description = "Một bác sĩ chuyên khoa tim nghi ngờ cái chết của con gái mình sau một cuộc trừ tà, tin rằng trái tim cô bé vẫn đập. Trong đám tang cô bé, anh và một linh mục đã tranh cãi về sự thật, mỗi người đều cố gắng chứng minh lập trường của mình có thể cứu cô bé.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "ngaiquy.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "DEVILS STAY: NGÀI QUỶ",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/4d7xzz0cTVw"
                        },
                        new
                        {
                            ID = new Guid("163b1168-9fd3-47c7-90ae-b018520e2c37"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(209),
                            Description = "5 học sinh nghiên cứu hồ sơ cựu học sinh của một trường học bị chiếm đóng về những trải nghiệm siêu nhiên và các cô gái mất tích. Người hướng dẫn của họ tạo ra những sự kiện kỳ ​​lạ đưa họ đến một cái cây cổ thụ, nơi mà hiệu trưởng vô tình đào được xương.",
                            DirectorID = new Guid("ba30c525-40e5-4c51-a29b-73102d020d81"),
                            Duration = 81,
                            GenreID = new Guid("293ae831-9c11-4c0c-8094-41e3e9cbbdf9"),
                            Images = "xich.jpg",
                            LenguageID = new Guid("364c86d6-84d9-495e-8b47-b94bc1301f85"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "BLINDING SOULS: XÍCH: TRÓI HỒN YỂM XÁC",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("8fd0887b-1054-496a-b509-2742e74403b0"),
                            AgeAllowed = 13,
                            CountryID = new Guid("d1df3472-b743-4ac6-b027-1d5cbad5f312"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(216),
                            Description = "Lấy cảm hứng từ giai thoại nổi tiếng của nhân vật được mệnh danh là thiên hạ đệ nhất chơi ngông, Công Tử Bạc Liêu lấy bối cảnh Nam Kỳ Lục Tỉnh xưa của Việt Nam. Từ con trai của chủ ngân hàng đầu tiên của Việt Nam trở thành \"Công Tử Bạc Liêu\".",
                            DirectorID = new Guid("2137f880-db34-4e83-bc69-fbf5a2eeb236"),
                            Duration = 113,
                            GenreID = new Guid("293ae831-9c11-4c0c-8094-41e3e9cbbdf9"),
                            Images = "congtubaclieu.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "CÔNG TỬ BẠC LIÊU",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/wqJXnO_TKpY"
                        },
                        new
                        {
                            ID = new Guid("6a4bbbf5-6447-4b09-b009-420cd8d32469"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(225),
                            Description = "Một cô gái khiếm thính và một anh giao hàng tìm thấy sự kết nối bất chấp rào cản giao tiếp. Họ sử dụng ẩn dụ về những chú chim nước và cây cối kiên trì để tượng trưng cho việc vượt qua những trở ngại trong chuyện tình cảm và dẫn đến sự gắn bó.",
                            DirectorID = new Guid("800480dc-7e7c-4dc0-8b30-c6276c5e842e"),
                            Duration = 109,
                            GenreID = new Guid("4c70c8c7-26ff-40ea-9c45-03f422548c93"),
                            Images = "yeuem.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "HEAR ME: OUR SUMMER: YÊU EM KHÔNG CẦN LỜI NÓI",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/JzY-5ZtVD88"
                        },
                        new
                        {
                            ID = new Guid("e3b35cda-c048-47c2-9571-d941adc11633"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(232),
                            Description = "Trong văn hóa Java, Sengkolo là một thực thể tiêu cực thường ám ảnh con người, mang lại vận rủi và tai họa. Vào đêm đầu tiên của Suro, Sengkolo di chuyển để nhắm vào một số weton là con mồi của mình.",
                            DirectorID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Duration = 99,
                            GenreID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            Images = "tetamhon.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "SENGKOLO: MALAM SATU SURO",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://youtu.be/-Sux3ihKodI?si=bbzqRn3w7kxqDaEi"
                        },
                        new
                        {
                            ID = new Guid("e4f53ac8-ec18-4458-b55d-1a2eee370cb1"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(240),
                            Description = "Phần hậu truyện của Nhím Sonic 1 và 2, đồng thời cũng là phần phim liên kết với Knuckles (2024).",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 100,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "SONIC.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "SONIC THE HEDGEHOG: NHÍM SONIC 3",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/2gFjV9v7QVE"
                        },
                        new
                        {
                            ID = new Guid("774e27af-373b-46a2-8bfa-30a20d687ef7"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(249),
                            Description = "Bộ tứ báo thủ bao gồm Chét-Xi-Cà, Dì Bốn, Cậu Mười Một, Con Kiều chính thức xuất hiện cùng với phi vụ báo thế kỉ. Nghe nói kế hoạch tiếp theo là ở Đà Lạt, liệu bốn báo thủ sẽ quậy Tết tung nóc cỡ nào?",
                            DirectorID = new Guid("ba30c525-40e5-4c51-a29b-73102d020d81"),
                            Duration = 120,
                            GenreID = new Guid("903b8a50-94cd-40f9-ac0b-5466b8346ad2"),
                            Images = "botubaothu.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "BỘ TỨ BÁO THỦ",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/2k0jK_sWmwE"
                        },
                        new
                        {
                            ID = new Guid("7518bda8-5bdc-4d04-ad1f-b95f471534ea"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(256),
                            Description = "Lần đầu tiên nhìn thấy cô gái yêu nhạc rock xinh đẹp Jinny, cậu bé Song đã yêu. Chú Pong – một cựu Rocker giúp Song lập ban nhạc Bad Boyz Band để Song có thể mời Jinny tham gia. Tuy nhiên Jenny lại lọt vào mắt nhà sản xuất âm nhạc tên Arm.",
                            DirectorID = new Guid("2137f880-db34-4e83-bc69-fbf5a2eeb236"),
                            Duration = 110,
                            GenreID = new Guid("293ae831-9c11-4c0c-8094-41e3e9cbbdf9"),
                            Images = "tretraukhongduaduocdau.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "BAD BOYZ BAND: TRẺ TRÂU KHÔNG ĐÙA ĐƯỢC ĐÂU",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/GKqrTQGHE3s"
                        },
                        new
                        {
                            ID = new Guid("57e73941-e746-456b-85ff-3d026bf3c53f"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(262),
                            Description = "Đây là một bộ phim hài về gia đình. Phim kể câu chuyện về một người đàn ông là sinh viên y khoa ưu tú quyết định trở thành một linh mục.",
                            DirectorID = new Guid("800480dc-7e7c-4dc0-8b30-c6276c5e842e"),
                            Duration = 110,
                            GenreID = new Guid("4c70c8c7-26ff-40ea-9c45-03f422548c93"),
                            Images = "chuyennhabanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "ABOUT FAMILY: CHUYỆN NHÀ BÁNH XẾP",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/X3SY9XUlQAA"
                        },
                        new
                        {
                            ID = new Guid("a621f48c-55aa-4c0b-a8a5-bf87f55738a7"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(272),
                            Description = "Nakrob, một kẻ lừa đảo bất động sản trẻ tuổi, phát hiện ra một khách sạn trên sườn đồi bị bỏ hoang gần bãi biển. Nhìn thấy cơ hội, anh ta quyết định biến nó thành một vụ lừa đảo khách sạn sang trọng.",
                            DirectorID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Duration = 100,
                            GenreID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            Images = "chayngaydi.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "404 RUN RUN: CHẠY NGAY ĐI",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://youtu.be/jS6TZkBB0lY"
                        },
                        new
                        {
                            ID = new Guid("afe2127f-f8d4-45a5-80b8-b13c399702ab"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(278),
                            Description = "Jin Bong là cựu cung thủ quốc gia và là người đoạt huy chương trong môn thể thao của mình. Anh hiện làm quản lý trong một công ty, nhưng công ty đang trong cuộc khủng hoảng tái cấu trúc. Vào thời điểm đó, công ty của anh đang thúc đẩy dự án Amazon.",
                            DirectorID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Duration = 113,
                            GenreID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            Images = "cuoixuyenbiengioi.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "AMAZON BULLSEYE: CƯỜI XUYÊN BIÊN GIỚI",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://youtu.be/JedDZeuTrzQ"
                        },
                        new
                        {
                            ID = new Guid("879fd82f-9435-4427-9035-bc10a0054b3f"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(284),
                            Description = "Sau sự thành công của hai phim điện ảnh chuyển thể từ tác phẩm đình đám của nhà văn Nguyễn Nhật Ánh, một tác phẩm nổi bật khác của nhà văn hiện đại thành công nhất Việt Nam chuẩn bị được đưa lên màn ảnh rộng: “Kính Vạn Hoa”.",
                            DirectorID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Duration = 123,
                            GenreID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            Images = "kinhvanhoa.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "KÍNH VẠN HOA: BẮT ĐỀN CON MA",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://youtu.be/EDDbR2jINsQ"
                        },
                        new
                        {
                            ID = new Guid("7a00e7fa-6987-45c2-b4f0-e1a60cc787df"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(290),
                            Description = "Sau khi Simba trở thành vua của Pride Lands quyết tâm cho đứa con của mình tiếp bước vị trí đầu đàn, trong khi nguồn gốc của người cha quá cố – Mufasa được khám phá.",
                            DirectorID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Duration = 118,
                            GenreID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            Images = "mufasa.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "MUFASA: THE LION KING: VUA SƯ TỬ",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://youtu.be/1KtBhnTfq8I"
                        },
                        new
                        {
                            ID = new Guid("d0560df4-0f36-4722-afdf-ec7ddfd249a1"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(296),
                            Description = "Một cuộc tấn công bất ngờ của Wulf – lãnh chúa Dunlending thông minh và tàn nhẫn muốn trả thù cho cái chết của cha mình, buộc Helm Hammerhand, Vua của Rohan, và người dân của ông phải thực hiện một cuộc chiến đấu cuối cùng táo bạo tại pháo đài cổ Hornburg",
                            DirectorID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Duration = 134,
                            GenreID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            Images = "cuocchien.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "THE LORD OF THE RINGS: THE WAR OF THE ROHIRRIM",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://youtu.be/4pP71_7b_Y4"
                        },
                        new
                        {
                            ID = new Guid("7fbe55bb-46d0-4d8d-9abe-619b5a354d3e"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(305),
                            Description = "Mối quan hệ phức tạp giữa Kraven với người cha tàn nhẫn, Nikolai Kravinoff, đã đưa anh vào con đường trả thù với hậu quả tàn khốc, thúc đẩy anh không chỉ trở thành thợ săn vĩ đại nhất thế giới mà còn là một trong những thợ săn đáng sợ nhất.",
                            DirectorID = new Guid("79be6860-e9d6-4455-8fba-2de29be78f0e"),
                            Duration = 127,
                            GenreID = new Guid("4aa2472a-91b8-4c96-b100-e57a6b1c6741"),
                            Images = "thosanthulinh.jpg",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            MovieTypeID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            Name = "KRAVEN THE HUNTER: THỢ SĂN THỦ LĨNH",
                            StarTime = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://youtu.be/gnj_VBjwiqU"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("1589375a-9267-464e-97aa-a2bc23298b7c"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5b346486-679c-4d83-b44d-888ac457d4c3"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PendingPoint", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("Point")
                        .HasColumnType("float");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.HasIndex("UserID");

                    b.ToTable("PendingPoint");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountMax")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("a02bea4c-ce23-43eb-8c30-1e8bbd8ffe7d"),
                            MinPoint = 100.0,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(731),
                            Status = 1,
                            UserID = new Guid("3a2376ba-6f8a-4090-822b-0a46c4b64afa")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(8377),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(8398),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(8406),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9564),
                            Name = "Room 1",
                            RowNumber = 12,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 12,
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9568),
                            Name = "Room 2",
                            RowNumber = 12,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Show_releaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_releaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("847a831f-e17f-4e2d-83bc-23eb92ef2146"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(379),
                            Deleted = false,
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 3, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(376),
                            ShowTimeID = new Guid("79fb05b0-0925-45af-96cc-0d6433e70ac2"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a7f4d3a7-c4f7-41e0-b0cc-5e399650cd62"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(386),
                            Deleted = false,
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 2, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(385),
                            ShowTimeID = new Guid("15f2b3c5-a1f4-4eb9-ba45-45ed4ea9eb6a"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9da32152-9b2d-4818-97f1-2dee96a70929"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(390),
                            Deleted = false,
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2025, 1, 1, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(388),
                            ShowTimeID = new Guid("9405c492-d82d-463e-a8f8-98a8b40cd0e0"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b9aac105-d5df-4edc-bcd6-4e0d7ec1e9ab"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(399),
                            Deleted = false,
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 31, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(398),
                            ShowTimeID = new Guid("e785ce3a-6c35-40dc-95ef-adf99270ad81"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b5ec8f4a-43c4-497d-a07b-2405e48fb1bb"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(402),
                            Deleted = false,
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 30, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(401),
                            ShowTimeID = new Guid("fb14e9c3-ee08-4adb-8c44-ef74a0748c68"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2cfc4322-4adb-4884-8f00-11da56ac5666"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(409),
                            Deleted = false,
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 29, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(407),
                            ShowTimeID = new Guid("5d930db6-25de-4248-9c49-cc637fbd9359"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4321136c-61f5-4d0c-a49a-c98098f409fc"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(412),
                            Deleted = false,
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 28, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(411),
                            ShowTimeID = new Guid("103862d9-de93-4784-b280-ef58c137206e"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("baad0bf3-b431-425f-899f-aee5f10a2ceb"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("977f3f68-d387-44e7-99aa-d7c49983d654"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d36708bb-8a24-47ca-b767-3690390fd35e"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("409a03c9-3218-43cf-bad4-a5d467e0503e"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("93c6ce62-0e68-42d5-ae01-3196f8d5a693"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03df7ac3-6838-4b0a-93a5-efab2033b257"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a1f88291-5c4f-4fbd-a30d-b2cc59c84aaf"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("87ed3c85-01f6-4836-ab66-9557ec411003"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9612941f-b1a9-4b34-9f5a-f519e25cd291"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e20379a4-5f2a-490f-a7d2-bd6713e3015a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0b8582b0-fc2b-419a-807b-fd1d7fd6e90b"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0ca5bcb0-7919-488f-b32f-7b110460c523"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("528e9c6c-7a79-4252-9044-6a8980a4c545"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0abba70a-f8c3-4337-9aa4-690180bb7c5b"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7016ca78-7f2e-42c0-bf56-5d477e475793"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dbf647ac-0d1c-43dc-83b8-fe1f6ea87bfc"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f1fff5c5-5b81-429e-b408-f2efb07e3b66"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("72ab204e-fcd4-49fa-a349-0a8c315a2fc3"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b1ca3994-6939-4c9d-a6c0-cdb9c81330a7"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("176b2b2b-a649-47e6-89ea-6168acb971a0"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("64543c79-57f4-4f0f-8a93-aef7dd9bdac5"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6750dbad-7228-401f-817a-ca342d79477d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3e71afea-4853-4fd2-945d-dcfe5320c876"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("55508b86-5ea5-402e-9211-6f9f79bb0647"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cb60a32d-a173-4c73-a41a-9470bd8d30d8"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("300b5d50-2e99-49d6-ba13-35a355296091"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0f8f23cb-c3f7-4c20-820c-9b9151fd77df"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("034dd050-481e-4400-9cf5-f653015b189f"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("45d8ac8d-f66b-4dae-b63d-1c5af1758d60"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("51d056f9-3e9d-4076-8570-b1448e067975"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("deffff66-6fbc-4ffa-9403-6c6f73eaf18f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f224e3f1-13c6-4227-9574-eb83fb97c18a"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("513dfcd3-3a53-4213-bc2c-a5784a4d0742"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5133f7e1-661b-4f85-a921-adff9a9baddb"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("21cfac2d-89d9-49a3-9ca7-58a1c9fbcf95"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("87fae9d9-42c6-4809-8258-3322b1af5c95"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d68fbfae-c068-42e8-8b03-cbd4c4f94b2f"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("09433d71-1c61-48d2-b7b7-c59fc3f61d62"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e8ff07b7-0078-4744-9caf-828f48c6ad49"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("43dd1050-81ab-48f7-9363-44a2c9e030b9"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b0e27fda-3385-49d1-b860-60d858bf3f7b"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5a26a618-6dd0-47d1-8beb-bf0b80167c49"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f08e0a65-ff97-4c18-9efb-44f4ce7eebc7"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ac39af6f-0615-4e94-8b23-4c883a672ba9"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fc3c0531-22f8-4e11-a1aa-9f72d9c757eb"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("daaa8f41-e9ef-4b96-bd02-14cc4185013b"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8ee18731-5b68-4c8e-b235-34e9b0bfd569"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8d35841d-aeb3-46b5-ac30-f95fae6005ad"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f74025fb-fe49-46b5-93ab-e6466947e94a"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3c88ed0c-af18-43b5-9b2c-04f78270e6bd"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ceaa022b-7ac0-4cd7-bc69-811ede9298f3"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fffa52ed-cb28-4398-8958-78d1a42f1428"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b972d9b-1f51-40d7-8f3b-509f252e99ef"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7007b42a-afbc-4f59-9328-810692cb1bf1"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("acd58bd2-73db-474b-803d-0be9243b2374"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d21e131-197d-4b21-bf31-a24efa7684b4"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("354a6110-bd48-4ab9-b60c-155775320346"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("04ebdef2-0015-4977-b610-d746303ed7d9"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("395bb5d3-a56a-4bc5-b9af-0b5cc2975c43"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9974e1e5-e153-4cbf-9a4a-0b17868f3a15"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8572d839-d357-4ae5-9604-681e235a2777"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fda5c934-9976-49df-8709-65b20a831190"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("173ac8a4-4fc7-4cc4-a84a-2a7bf1cf07e3"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c3916ea-80e4-4d28-be1f-2112890e1493"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("29fe2399-0612-4e3c-a67c-0e4f5e29866f"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e8274f39-9890-4a3d-8bcb-80ce7231064d"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b85fc616-efae-4025-89bb-aa6d595e3787"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("30d8a5b5-a7b9-4364-9e71-99f0068fa4d9"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1c31fbfc-576f-4f8c-9fe8-3d53f913f3e9"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3791cd29-d717-41ca-a6e0-33a466d31c69"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6a647c15-580a-49e8-ac79-3f139d867df5"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("817ad5c1-887c-4031-83c3-5ebe8cf0ad8d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c61e7d81-7f42-4a03-ac07-d89c25c66ef0"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8863d51c-09ce-4d82-9dbc-e553f77cceae"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("38a3931c-4549-4e77-a2da-afcec326e066"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a0dcdc2e-cba1-4b60-a1c3-c4cbbfc55ba6"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c535a59d-f1dd-4e8c-b709-407c4cdb4bdc"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ea2a20ae-19ab-4543-84f8-627e4d35ed01"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("760c5ffe-702c-46b6-b746-92bd380c727a"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("eda52f7c-4d22-47a4-9f4a-4c7a60e9e290"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("da6ba503-b5ee-446d-90b7-2b480e29db4f"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8bc231e7-2df3-4268-88fa-8ea69487180d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("47790688-931b-490f-b69f-13dcfeb22a81"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b15db351-9fd1-411c-b354-5605abf77226"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b53a48b7-cf94-4a64-beda-4e1b42e722d4"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("141aac74-649f-40af-a769-0adc6b5aac5d"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d4362d2a-b162-40a7-90d7-2740fb31cdfd"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dc43592b-04c9-4a94-bfc6-cf678120c195"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cab43f79-e9e7-4ff1-a1a3-4a453b31314b"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("da7ae09b-3f49-4c44-a22f-49cb8034dcff"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0a8497c6-5a45-493b-b7cd-16ee750738cf"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cbc0b572-420f-4dd8-a6ac-2dbc2364fa36"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9e3a8654-ec00-4eba-a37e-2bbe1bd7e3cd"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("083caeed-4051-4af4-ae2a-a3e7a2b0db2b"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("368dae23-546e-4704-a139-6dded8d97a47"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("64144600-81f9-4a24-b329-3e2f0fd32611"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b478985c-5a58-4220-a325-c1feecbfb823"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2568df6c-b4a0-4ac8-a4f2-1e8eb5d76872"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("35ae8e3f-f4b5-42cb-b24f-72914fe3d9b9"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("89c3e5b3-b177-4ce7-8411-694ab926410a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("112272e0-b6e9-4940-82f1-c4a92a1aafbe"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("dd444218-fac8-4cea-8b43-6e3cbde3c237"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c801ad66-15f0-4736-99f7-73daec6f4bba"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("05c9dc52-decd-4677-bbc5-580926da4283"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f9b37adf-7a80-4b57-83ae-3ea52ddcf313"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("49505b04-170f-4550-a3e2-f984be3e1497"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c5f4cc64-d3af-469f-8799-5c9c18c46047"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c5f3d93-5fbf-4879-96d2-0ce62525e326"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f771c61-6d3a-48fb-9a21-3a9d09c8aff6"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f4b6c9f2-63fd-4317-8430-70d9c284242a"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c8a9a398-54d2-46e9-a1f4-a7f05cc7ad2f"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8f1998c9-477c-4fa8-81ff-8b4602cb1c05"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("743b6c6c-17ff-494a-9e20-06b360b5f725"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("54e1ddb5-e9b1-4bf7-8db4-4df6bf16f049"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("527f8a93-692c-4f23-98f2-bdc667dd7828"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d5f23ed6-c420-4f82-8d27-7c2bc15c7b91"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("95f53f28-a77b-4827-8c2d-d9c36afd9ab2"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b41412b8-bb41-4ff3-9291-717f8529f75f"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a38a9c96-3329-403d-9376-6d82a6fea4d8"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e4aeacde-5366-4606-a139-a4406db4e40e"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("52cd447b-5d47-4a9e-b486-ed6b6f1f2ca6"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aa03168b-62ea-403d-b415-e5fe3ba7a095"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ea4dca37-c958-4d28-9eda-c1a96e7b7f30"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("89336be6-137b-4cf3-9999-15cac0c1b103"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ed43ad2b-7506-43b5-a04f-fac47e17dd36"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("15975f51-1ac7-4e2f-8fe2-83dbf167a69c"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("17b6ea4a-e681-4501-a678-25a543f7f796"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b7ad5ba9-df78-46cb-ba14-eb0c9ff1bf43"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7b3d479d-caa9-4c98-97ac-c272786f230c"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("922b0ef8-63ae-4a2f-842d-da42bb4f339c"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4a9db47c-6d9b-4f64-9d03-58500258291e"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6d80f473-232e-44ad-9bf3-b224cddfa4b4"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b953a475-23c4-45fc-b5e6-a3c8e5409f1f"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("851fc843-832c-49cf-bc1d-756bfe87f05d"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("808f29c0-36ba-49e3-9894-f7657e29aaa5"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("aad97ec5-ae40-42d0-8dba-2366a13dca4c"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bbc3c89e-10fb-43ea-93d4-8f4940c70648"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c30170ce-5662-4b8f-87a4-48535b253f6f"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("26a5e9c7-a543-41e3-8343-666ea3a0f144"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a02c2e8c-87a8-4e57-8fc1-4b8b47422b15"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3320d1e5-c7f8-4750-b240-cbd053272b02"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3f572fa0-4b4f-4116-aa00-b3cd913f8cd5"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ad8b643f-d784-4402-be32-4d9f0a324d51"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("81f489aa-3a4c-4786-8826-5effb30eafa3"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b86092b5-ccc9-46ef-b1ca-a399cb167fc4"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d0773a0b-8b50-4452-9288-7fd25d4b9f8c"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d5e195ee-f63c-491b-8386-dca3d7c8ac91"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d5fcad78-215d-48f1-a6c7-4440724e2469"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("521455c0-1f3c-464f-ac5d-dd5eeb4b6320"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7c2f4df5-11dc-475e-9a75-fcd44789067f"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("10fe10d2-b033-454a-a3f0-5f9bad78cd5b"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1e94c2da-03d7-4ef9-80b7-b745ad28bd5b"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f466ae40-4f7c-4139-8ef4-66d7adf43564"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("32875dbc-60d8-46b4-8c20-7474ba3f24e5"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("efa7b4a0-7358-441b-833f-68a94fa0c246"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c860d878-2176-4074-a510-5b579c13f8c7"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b3bf8aed-c498-4c6e-9e68-044f33927a35"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("afab8cd3-49ec-42d0-b8ad-ab87b820a00e"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5673d941-2487-44c6-a772-d6fce9abc458"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("91755ba6-c8ca-4eab-85bc-3c1fc3ac391d"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5e28fb12-ddbf-4a7e-8248-f9d679cfecad"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2bdb1c91-5111-4a86-ac52-9e3d907c899d"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ca1a547f-f2ac-4765-9a32-1bc3909d3786"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b502d1e5-f95f-4854-aa27-53cd58bd614a"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("201fdea6-7c02-4778-a93f-e2d95afe0d6a"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6b0aa95f-b91f-4d15-838c-c875c9426c0b"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6043ff42-7beb-4bc2-a39c-69a1b06ac2a1"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("cd788998-a9d0-4f64-8268-b7fe3725075a"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2119159d-cbbd-4afb-a29b-77004ea08c7b"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("811d3965-fb0e-4e45-be7e-ee5317c207dc"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("df686e75-15b1-42f2-9005-d475ae23a98e"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7f6cc311-3bbe-412d-8e52-4ba00834e196"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("48c53220-2e61-48ec-836d-9ee1655298db"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("41e6c825-b449-4678-a502-dd6cb8e0d6d6"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5ba5ca73-5e0b-4925-af86-5166ef7fc997"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d12f2497-ca88-41e3-8fe0-5ae9439f3e3c"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("40ba0073-c460-4771-a179-55ce80896d06"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c79cd4d5-7bdf-4e55-bed6-34fdf23f9318"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("37bef496-ab4e-4f16-8b3b-385434817f38"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("25580a30-4531-471b-8977-f15f9dcbec56"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4b960eac-8aa1-4178-a2b2-d2b9d01d5baa"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("819098c3-9d13-4486-91e9-3f6112b82096"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5edfd5e8-822d-4ea9-8bb0-227b7a678f6b"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8148cfed-61d2-4964-8359-a74d3f15245b"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("612e5f0a-c146-451f-a2d5-92e72db7c1ab"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("04c67a5e-406a-491d-9784-f190a6af322e"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f202738a-1cb4-436b-994a-dc1ab4478f0f"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3190afad-0baa-4115-9785-e3e1f7ebdd0c"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("53f64d1a-19e0-46ed-acfc-08e353882268"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3fb9eb88-89cb-462a-aeb9-a009be39de10"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("666e824d-23f1-467a-94cf-7cc202f862f0"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("53bf7e6d-e5ac-4bc7-ab51-f10f155889ba"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("35f5e745-2115-4ab8-9d1b-d4955b8ea045"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5fa16f1b-e385-4f02-82ab-4220c1ef54ed"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d6c59526-2486-4d0d-b812-e6b261e74cf2"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b54c6645-f7b0-496e-836d-edb8a94745ee"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1c9c0c7b-c631-4906-a547-e9afdf525d24"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e539f701-2f2d-4889-b8c1-b201966e579e"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e53da151-665f-4eff-b633-ff5ad8e66806"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("528f4f3f-69f8-452c-a013-1eff153cc4f7"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("33d01796-34a6-4b6c-a695-0db4567fa5b1"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3b8f10a3-5ddf-4189-a1eb-3a98204f29a5"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e057a55d-f7dd-4641-8b3d-a4265d245da7"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("03b7b8cf-c938-4489-89f8-7370aaa45cac"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fbccbc89-62a5-4290-9703-9a48211ed0ca"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("89a7efc1-5de2-4e57-840c-5d1f430be37f"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f00ba7e7-7372-4302-8f9c-6a2f657c795f"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3f2dc089-32b2-43fa-95fb-fc0d6f4a794c"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0ab1b5b2-9086-4145-bf1f-bf458c5aa46f"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3debd48e-a8df-4138-89c6-9842694e6ae7"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f7c7732c-febd-4d2c-8c30-7301453038c2"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("46b53d8a-9f28-4c5e-85bd-39926bc12c50"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("20e84860-7f34-410e-8bea-666f5de6a430"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4f3389fa-6d1e-4b7f-8bc3-76badbdcbac6"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e46610de-45be-4f8e-a1d1-a03e13ca881b"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("42b811e2-121e-43a7-8ffa-a2c9e6be7226"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("46e99fd2-51c4-40b5-8f80-e742fd3e4a93"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1eb90d1f-9ce0-4a24-a567-c5fc97027b8c"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8af857e4-9242-4753-a3b8-34462a843e64"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7c622131-5527-4c42-9fe6-bb02e87cfc42"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b400685b-c5b2-4679-a9ec-54964bddcf65"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f529326c-54ba-46ec-8c86-b39a8716ef8f"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3da0a408-7bde-4456-9beb-ca12eb0dd9b2"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8429fb10-7465-4564-9c52-e58ac5d9a8dd"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("14ace0a5-139f-42e3-b29f-b6ad846489e1"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("443f6b0c-5240-497a-a372-dc3d0c701063"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c9bb7208-b611-47f9-9d4a-36a388946887"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ea8b8ee6-1fd0-4d85-9dbd-566c1fb1b669"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("79fd55b2-334b-482a-9c77-3a6a1089b932"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2c84d4ce-a064-491a-952a-ff455dc8315c"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("36ae8bc3-a3a3-4c9c-b103-c7cdf2f45a70"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e6c1d5b5-d8d0-4cfc-98e2-6df454f97905"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0af38bac-709e-4cc0-a436-d871346ac891"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("524fc9d1-b09f-4c6a-8844-9facd9878a67"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("25cb930c-ec31-4cad-8ab7-f670f8a4a85c"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e40efdac-1a33-44ee-af30-df79db5107f7"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("37132da3-e030-4685-8151-aace5e8ac6a2"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("be3adc30-9d88-449a-aba1-ca3e131d2aa3"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("88362433-2bba-47df-bcc5-43f8c39e33e2"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("92b0f583-4bac-49d9-989e-1c04a7ae2879"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8c3cba6c-5c4f-44eb-91ae-431ed2a7da22"),
                            Column = "A",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0f0b2517-5c19-4ac8-b290-0e411515c25c"),
                            Column = "B",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3069e51c-d891-439b-98c5-5a8d9eca3ef3"),
                            Column = "C",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a8aa3bcc-cad1-4fb0-a906-77929916f312"),
                            Column = "D",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b5bfc983-8ca7-44e7-ae11-2f60829a2b77"),
                            Column = "E",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4b70dbf9-02a8-420a-8c65-b19ff6a9d1d8"),
                            Column = "F",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7a8c9111-8c10-4e80-8c54-2f440d9ed77c"),
                            Column = "G",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8b51c6c5-34b5-44ab-9e94-e1b4d1bab158"),
                            Column = "H",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0bc2d513-71a5-42ce-a83f-55731f081e0f"),
                            Column = "I",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("af633c3e-8f0c-4ddc-a960-fc9a33a9eb39"),
                            Column = "J",
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowtimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("seatEnum")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatID");

                    b.HasIndex("ShowtimeId");

                    b.ToTable("SeatShowTimeStatuss");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9493),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("0ce08fd6-0d1d-4c61-8b8b-7827baff7fe1"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9497),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("587ff198-12d1-4eb4-9ce7-909da4af6bcb"),
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9498),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("79fb05b0-0925-45af-96cc-0d6433e70ac2"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("15f2b3c5-a1f4-4eb9-ba45-45ed4ea9eb6a"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9405c492-d82d-463e-a8f8-98a8b40cd0e0"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e785ce3a-6c35-40dc-95ef-adf99270ad81"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fb14e9c3-ee08-4adb-8c44-ef74a0748c68"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5d930db6-25de-4248-9c49-cc637fbd9359"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("103862d9-de93-4784-b280-ef58c137206e"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e04c8956-391f-4751-8114-5c4b12d36d6e"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4abb0dd4-9537-4703-ae53-5ad1b2af06ed"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("63169f03-8b7b-4cd2-8caa-cd213b6c001e"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("0b397d98-2373-4eff-80fd-1177ca6fd705"),
                            DateRelease = new DateTime(2024, 12, 25, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(345),
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 24, 22, 36, 7, 22, DateTimeKind.Local).AddTicks(340)
                        },
                        new
                        {
                            ID = new Guid("8967c6ef-e458-4d91-b61c-63fdff05528e"),
                            DateRelease = new DateTime(2024, 12, 26, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(352),
                            MovieID = new Guid("163b1168-9fd3-47c7-90ae-b018520e2c37"),
                            RoomID = new Guid("d39cbc9e-0aa7-419e-8e0b-e263e0ddc3cf"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 24, 22, 37, 7, 22, DateTimeKind.Local).AddTicks(351)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BillId");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("3edec969-96e2-4c38-bb51-b5c8dba90eb5"),
                            BillId = new Guid("729175e5-9bc1-49e7-8f84-5b49efd5da0b"),
                            MovieID = new Guid("a6a85558-fe7d-47b0-b1f7-ea8790d2f616"),
                            Price = 100000m,
                            ScreningID = new Guid("847a831f-e17f-4e2d-83bc-23eb92ef2146"),
                            SeatID = new Guid("baad0bf3-b431-425f-899f-aee5f10a2ceb"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("13720227-3217-4249-9e4a-83cc9369769e"),
                            BillId = new Guid("729175e5-9bc1-49e7-8f84-5b49efd5da0b"),
                            MovieID = new Guid("163b1168-9fd3-47c7-90ae-b018520e2c37"),
                            Price = 2100000m,
                            ScreningID = new Guid("a7f4d3a7-c4f7-41e0-b0cc-5e399650cd62"),
                            SeatID = new Guid("977f3f68-d387-44e7-99aa-d7c49983d654"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("bf25553c-88ea-42a3-99af-0397602378fa"),
                            BillId = new Guid("729175e5-9bc1-49e7-8f84-5b49efd5da0b"),
                            MovieID = new Guid("8fd0887b-1054-496a-b509-2742e74403b0"),
                            Price = 3100000m,
                            ScreningID = new Guid("9da32152-9b2d-4818-97f1-2dee96a70929"),
                            SeatID = new Guid("d36708bb-8a24-47ca-b767-3690390fd35e"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("e0be44ef-42aa-4756-b0ae-e859e78d76c8"),
                            Price = 50000m,
                            ScreeningID = new Guid("847a831f-e17f-4e2d-83bc-23eb92ef2146"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("79fb05b0-0925-45af-96cc-0d6433e70ac2"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("d2ee7907-9d48-45f9-858a-db5c16725483"),
                            Price = 60000m,
                            ScreeningID = new Guid("a7f4d3a7-c4f7-41e0-b0cc-5e399650cd62"),
                            SeatTypeID = new Guid("0ce08fd6-0d1d-4c61-8b8b-7827baff7fe1"),
                            ShowTimeID = new Guid("15f2b3c5-a1f4-4eb9-ba45-45ed4ea9eb6a"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge3D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Surcharge4D")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60000m,
                            PriceAfter17hWeekeend = 70000m,
                            PriceBefore17hWeekDay = 50000m,
                            PriceBefore17hWeekeend = 60000m,
                            Surcharge3D = 30000m,
                            Surcharge4D = 40000m,
                            SurchargeCouple = 50000m,
                            SurchargeIMAX = 50000m,
                            SurchargeVIP = 30000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("3a2376ba-6f8a-4090-822b-0a46c4b64afa"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(8632),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6d0523ea-1c35-48e9-9878-b3edc48f10f5"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9007),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("130b1f80-4725-4d96-8072-49ef2042b51f"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9037),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("c5e4b971-a9ff-4526-b873-7735f2a813df"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9059),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d43fd482-4f24-41ac-9fb4-da616a0628bd"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9101),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a1931b12-73b2-4eb4-be80-b252147c75c7"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9123),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a69bf531-5cd2-4814-810c-6860c4d79ffe"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9150),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3d4cc5c5-8d87-40ea-ae21-a46c00c78ff6"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9171),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8cf974e4-a612-4d5b-b2cf-ca3b029d7fe1"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9193),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5509a1ac-0787-4e73-ac9b-66ed70fd6d11"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9214),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7b679602-8f20-49d6-b342-b60af6ae9518"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9234),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("7528b64a-069d-4e32-91f2-55795ed1ca8e"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 24, 22, 35, 7, 21, DateTimeKind.Local).AddTicks(9253),
                            DateOrBriht = new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "giaphipp@gmail.com",
                            FullName = "Phùng Tiến Giáp",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "LK25tQh1RqkKbrq4C2l6fw==",
                            PhoneNumber = "0862774830",
                            RoleID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("4cfdd6f2-7377-4cd4-abd3-2cc844647514"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 12, 25, 0, 35, 7, 22, DateTimeKind.Local).AddTicks(754),
                            TimeStar = new DateTime(2024, 12, 24, 20, 35, 7, 22, DateTimeKind.Local).AddTicks(753),
                            UserID = new Guid("3a2376ba-6f8a-4090-822b-0a46c4b64afa"),
                            WorkDate = new DateTime(2024, 12, 24, 22, 35, 7, 22, DateTimeKind.Local).AddTicks(752)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotions")
                        .WithMany("Bills")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Promotions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieTypes")
                        .WithMany("Movies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");

                    b.Navigation("MovieTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PendingPoint", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("PendingPoint")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PendingPoint")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", null)
                        .WithMany("Screenings")
                        .HasForeignKey("Show_releaseID");

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatShowTimeStatus", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("SeatShowTimeStatus")
                        .HasForeignKey("ShowtimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Seat");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("Ticket")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("PendingPoint");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("SeatShowTimeStatus");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PendingPoint");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
