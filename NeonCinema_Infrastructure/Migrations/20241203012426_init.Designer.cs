// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeonCinema_Infrastructure.Database.AppDbContext;

#nullable disable

namespace NeonCinema_Infrastructure.Migrations
{
    [DbContext(typeof(NeonCinemasContext))]
    [Migration("20241203012426_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MovieID", "ActorID");

                    b.HasIndex("ActorID");

                    b.ToTable("ActorMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BillCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("PaymentMethodID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("PaymentMethodID");

                    b.HasIndex("UserID");

                    b.ToTable("Bill", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("42e05f9c-bbbf-4773-8309-02b4650fe548"),
                            BillCode = "BILL001",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(6175),
                            Status = 2,
                            TotalPrice = 500000m,
                            UserID = new Guid("b50c2397-547d-480a-be54-4fdd668bf634")
                        },
                        new
                        {
                            ID = new Guid("fd19cedc-6a09-441c-87b8-e4f2567b05c1"),
                            BillCode = "BILL002",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(6179),
                            Status = 2,
                            TotalPrice = 300000m,
                            UserID = new Guid("45c29014-4bfd-45f4-9a72-96e2d2bc417d")
                        },
                        new
                        {
                            ID = new Guid("a36f8a70-3f54-4437-a883-6180cf016b5a"),
                            BillCode = "BILL003",
                            CreatedTime = new DateTime(2024, 12, 3, 7, 54, 26, 35, DateTimeKind.Local).AddTicks(6182),
                            Status = 3,
                            TotalPrice = 150000m,
                            UserID = new Guid("89a08df6-115b-4921-ba4e-91b343eccda7")
                        },
                        new
                        {
                            ID = new Guid("bc999f1c-c06e-4904-9785-13d259a20368"),
                            BillCode = "BILL004",
                            CreatedTime = new DateTime(2024, 12, 3, 7, 39, 26, 35, DateTimeKind.Local).AddTicks(6184),
                            Status = 2,
                            TotalPrice = 200000m,
                            UserID = new Guid("6a86c934-8ce3-432a-8d21-98e85a4b3f5d")
                        },
                        new
                        {
                            ID = new Guid("87f77c44-76c8-498f-889f-29ce603aae30"),
                            BillCode = "BILL005",
                            CreatedTime = new DateTime(2024, 12, 3, 7, 24, 26, 35, DateTimeKind.Local).AddTicks(6187),
                            Status = 2,
                            TotalPrice = 250000m,
                            UserID = new Guid("d4ef2d29-2358-450c-bf41-c529aee15556")
                        },
                        new
                        {
                            ID = new Guid("8d1c8015-4c48-42eb-918b-2823aad90d4b"),
                            BillCode = "BILL006",
                            CreatedTime = new DateTime(2024, 12, 3, 6, 54, 26, 35, DateTimeKind.Local).AddTicks(6190),
                            Status = 2,
                            TotalPrice = 600000m,
                            UserID = new Guid("8458c8fd-3b08-4670-998f-5f5a024b41e8")
                        },
                        new
                        {
                            ID = new Guid("645447ec-3b7c-4a76-9a7b-019df2dac7a9"),
                            BillCode = "BILL0122",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(6192),
                            Status = 2,
                            TotalPrice = 680000m,
                            UserID = new Guid("8458c8fd-3b08-4670-998f-5f5a024b41e8")
                        },
                        new
                        {
                            ID = new Guid("7fa64961-3b85-4771-a7c5-efa227a5a3c5"),
                            BillCode = "BILL007",
                            CreatedTime = new DateTime(2024, 12, 3, 6, 24, 26, 35, DateTimeKind.Local).AddTicks(6194),
                            Status = 1,
                            TotalPrice = 800000m,
                            UserID = new Guid("de2da2b1-0229-48c8-b8a1-67bd97ff78d8")
                        },
                        new
                        {
                            ID = new Guid("c79380c1-51ae-42ac-b397-7eff7d844636"),
                            BillCode = "BILL008",
                            CreatedTime = new DateTime(2024, 12, 3, 5, 54, 26, 35, DateTimeKind.Local).AddTicks(6199),
                            Status = 2,
                            TotalPrice = 450000m,
                            UserID = new Guid("11bf1bca-0688-471e-bf70-294d2b211b21")
                        },
                        new
                        {
                            ID = new Guid("dc072ec7-b559-4dc0-b76a-73559ccb63e9"),
                            BillCode = "BILL009",
                            CreatedTime = new DateTime(2024, 12, 3, 5, 24, 26, 35, DateTimeKind.Local).AddTicks(6202),
                            Status = 0,
                            TotalPrice = 350000m,
                            UserID = new Guid("98780399-8274-4052-b084-8475f66208fc")
                        },
                        new
                        {
                            ID = new Guid("c2726ca4-a9ab-43c6-9f72-ceb912ac610c"),
                            BillCode = "BILL010",
                            CreatedTime = new DateTime(2024, 12, 3, 5, 4, 26, 35, DateTimeKind.Local).AddTicks(6205),
                            Status = 2,
                            TotalPrice = 700000m,
                            UserID = new Guid("28581ffc-8a1f-45dd-90f3-d219de723cad")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.Property<Guid>("BillID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FoodComboID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("BillID", "FoodComboID");

                    b.HasIndex("FoodComboID");

                    b.ToTable("BillCombos");

                    b.HasData(
                        new
                        {
                            BillID = new Guid("42e05f9c-bbbf-4773-8309-02b4650fe548"),
                            FoodComboID = new Guid("e3037b33-fb76-41fa-8eaa-8bb6be19ad85"),
                            Quantity = 0
                        },
                        new
                        {
                            BillID = new Guid("fd19cedc-6a09-441c-87b8-e4f2567b05c1"),
                            FoodComboID = new Guid("65697fb7-3630-436b-ba87-f14fb850cdc6"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("BillId", "TicketId");

                    b.HasIndex("TicketId");

                    b.ToTable("BillTicket", (string)null);

                    b.HasData(
                        new
                        {
                            BillId = new Guid("42e05f9c-bbbf-4773-8309-02b4650fe548"),
                            TicketId = new Guid("c9a39d51-2690-42c4-a479-4bda1316a9a0")
                        },
                        new
                        {
                            BillId = new Guid("fd19cedc-6a09-441c-87b8-e4f2567b05c1"),
                            TicketId = new Guid("c8029aff-f04d-4142-b266-2178a477c43e")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("MovieTypeID");

                    b.ToTable("CategoryMovies", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TicketID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TicketsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TicketsID");

                    b.ToTable("Checkin", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("72a66074-2ca4-45a7-9a14-c7c81baa473a"),
                            Code = "phonghhhhh",
                            Name = "hotdot",
                            TicketID = new Guid("240378cb-b2b4-4987-88f4-b57a481c94c6"),
                            Type = "mua tại quầy"
                        },
                        new
                        {
                            ID = new Guid("feb4162f-6a32-4927-bc2e-527d025391c3"),
                            Code = "hgdsad",
                            Name = "hotdsot",
                            TicketID = new Guid("2eed0f6b-68b8-445b-a405-bb3e94733b89"),
                            Type = "mua tại quầy"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClosingHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("OpeningHours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cinemas", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ClosingHours = "10:00 PM",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5193),
                            Location = "Hà Nội",
                            Name = "Cinema A",
                            OpeningHours = "08:00 AM",
                            PhoneNumber = "0123456789",
                            RoomNumber = 5,
                            WebSite = "www.cinemaa.com"
                        },
                        new
                        {
                            ID = new Guid("4bb078b6-530a-4c7d-a965-eddb0c5dda79"),
                            ClosingHours = "11:00 PM",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5197),
                            Location = "Đà Nẵng",
                            Name = "Cinema B",
                            OpeningHours = "09:00 AM",
                            PhoneNumber = "0987654321",
                            RoomNumber = 7,
                            WebSite = "www.cinemab.com"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countrys", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CountryName = "Nhật Bản"
                        },
                        new
                        {
                            ID = new Guid("94ac4478-d955-454b-86a0-225fa6dd811e"),
                            CountryName = "Vương Quốc Anh"
                        },
                        new
                        {
                            ID = new Guid("aefeb05c-ff3d-45f4-bd15-ed16633ad274"),
                            CountryName = "Trung Quốc"
                        },
                        new
                        {
                            ID = new Guid("b6678bf5-ce26-4e76-8f2d-95cd3bced833"),
                            CountryName = "Việt Nam"
                        },
                        new
                        {
                            ID = new Guid("7d3e74e1-5740-4e24-b53d-1e96c996536f"),
                            CountryName = "Mỹ"
                        },
                        new
                        {
                            ID = new Guid("4867731e-d763-497a-a0d8-4267ae5b9781"),
                            CountryName = "Hàn Quốc"
                        },
                        new
                        {
                            ID = new Guid("9ed07cf7-975c-4df6-a6e2-e838ff77b15c"),
                            CountryName = "Pháp"
                        },
                        new
                        {
                            ID = new Guid("fc5dacd1-e114-491e-94ba-7ce41234f914"),
                            CountryName = "Hồng Kông"
                        },
                        new
                        {
                            ID = new Guid("1c2e0487-57a0-43a1-98b8-9ffb9b4eccff"),
                            CountryName = "Ấn Độ"
                        },
                        new
                        {
                            ID = new Guid("57d65a52-b9ae-40a8-ae0f-6f13dad26b15"),
                            CountryName = "Úc"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nchar(256)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Director", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Nghệ sĩ đa tài, nổi tiếng với các vai trò MC, diễn viên và đạo diễn. Được biết đến qua các bộ phim hài và điện ảnh như 'Bố Già'.",
                            FullName = "Trấn Thành",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e71b85f3-50e0-4322-9d86-37a25934ccfb"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Ca sĩ, đạo diễn nổi tiếng với loạt phim hành động 'Lật Mặt' thu hút hàng triệu khán giả.",
                            FullName = "Lý Hải",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5499257b-a9e2-4c22-8994-102b3c54588c"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim kinh dị và ly kỳ như 'Thiên Mệnh Anh Hùng', 'Mắt Biếc'.",
                            FullName = "Victor Vũ",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0c760f9d-5894-45e7-8a7d-e8e426bc5a54"),
                            Address = "TP Hồ Chí Minh",
                            Biography = "Đạo diễn kiêm nhà sản xuất phim nổi tiếng với các bộ phim hài hành động như 'Để Mai Tính', 'Tèo Em'.",
                            FullName = "Charlie Nguyễn",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("68a38150-5ee7-4911-ba5d-1734d7cfb0c0"),
                            Address = "Hồ Chí Minh",
                            Biography = "Diễn viên, nhà sản xuất và đạo diễn nổi tiếng với các bộ phim hành động như 'Hai Phượng'.",
                            FullName = "Ngô Thanh Vân",
                            Gender = "Nữ",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("19ca3615-cdff-4ad0-aae3-dd86cd513950"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn và diễn viên nổi tiếng với các bộ phim hài và tình cảm như 'Siêu Sao Siêu Ngố'.",
                            FullName = "Đỗ Đức Thịnh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2d0ecaef-e95e-4fcb-b932-f05a9fba2fde"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim như 'Em Là Bà Nội Của Anh'.",
                            FullName = "Phan Gia Nhật Linh",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8022a6ac-fdf0-466d-9f0a-6df351e32739"),
                            Address = "Hà Nội",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim lãng mạn và hài như 'Bỗng Dưng Muốn Khóc'.",
                            FullName = "Vũ Ngọc Đãng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("2aae8854-bbe7-42d9-badf-11526dbbce76"),
                            Address = "Hồ Chí Minh",
                            Biography = "Đạo diễn nổi tiếng với các bộ phim hài hước và tình cảm như 'Nụ Hôn Thần Chết'.",
                            FullName = "Nguyễn Quang Dũng",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("1ccd4e92-41c7-4703-998c-1921b0decfd9"),
                            Address = "Cần Thơ",
                            Biography = "Đạo diễn kiêm diễn viên nổi tiếng với các bộ phim hành động và lịch sử.",
                            FullName = "Huỳnh Đông",
                            Gender = "Nam",
                            Nationality = "Việt Nam",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValue(0m);

                    b.HasKey("ID");

                    b.ToTable("FoodCombo", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("e3037b33-fb76-41fa-8eaa-8bb6be19ad85"),
                            Content = "Combo 1",
                            Description = "1 bắp 1 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 1,
                            TotalPrice = 20000m
                        },
                        new
                        {
                            ID = new Guid("65697fb7-3630-436b-ba87-f14fb850cdc6"),
                            Content = "Combo 2",
                            Description = "2 bắp 2 cola",
                            Images = "tải xuống.jfif",
                            Quantity = 2,
                            TotalPrice = 220000m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Genre", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            GenreName = "Kịch tính"
                        },
                        new
                        {
                            ID = new Guid("33065001-c526-4893-85d9-cbcc2c2f2606"),
                            GenreName = "Tình cảm"
                        },
                        new
                        {
                            ID = new Guid("b9a70fee-8a7a-4c99-b586-9df4df9d3613"),
                            GenreName = "Hành động"
                        },
                        new
                        {
                            ID = new Guid("80d3618c-1ee5-4ee9-beac-50338e619109"),
                            GenreName = "Kinh dị"
                        },
                        new
                        {
                            ID = new Guid("60092a83-dbaf-4497-b850-078c6c993029"),
                            GenreName = "Hoạt hình"
                        },
                        new
                        {
                            ID = new Guid("cc2baf30-3e94-44f3-ba9f-1f408d798597"),
                            GenreName = "Phiêu lưu"
                        },
                        new
                        {
                            ID = new Guid("698d4b78-5154-4d62-8ea4-1302fad6c652"),
                            GenreName = "Hài hước"
                        },
                        new
                        {
                            ID = new Guid("5a17a2fb-6a2f-4ff6-aef2-069ba509da3b"),
                            GenreName = "Lãng mạn"
                        },
                        new
                        {
                            ID = new Guid("0d361dac-dce1-4d2e-916b-c03b64b614ef"),
                            GenreName = "Tâm lý"
                        },
                        new
                        {
                            ID = new Guid("a2b58267-5e9d-42f6-8cd4-39b8739b8285"),
                            GenreName = "Khoa học viễn tưởng"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ID");

                    b.ToTable("Lenguage", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            LanguageName = "EN"
                        },
                        new
                        {
                            ID = new Guid("336385a9-21ff-426a-a978-2c6ada7f9ee1"),
                            LanguageName = "VIE"
                        },
                        new
                        {
                            ID = new Guid("dd95986f-e5af-4b87-bc81-d204e0751068"),
                            LanguageName = "JPN"
                        },
                        new
                        {
                            ID = new Guid("a3912540-41f3-4926-a73c-d7265e4b1700"),
                            LanguageName = "ThaiLans"
                        },
                        new
                        {
                            ID = new Guid("910f5cef-679f-4afe-8bb2-5289cef9a3b7"),
                            LanguageName = "USA"
                        },
                        new
                        {
                            ID = new Guid("48949f17-d2d8-431a-8062-e936bce55fd6"),
                            LanguageName = "Korea"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MovieTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.HasKey("ID");

                    b.ToTable("MovieType", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AgeAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DirectorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Duration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("GenreID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LenguageID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.HasIndex("DirectorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("LenguageID");

                    b.ToTable("Movies", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5827),
                            Description = "Hành trình cảm động về tình cha con giữa Sài Gòn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 130,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "bogia2.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Bố Già 2",
                            StarTime = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=bogia2-trailer"
                        },
                        new
                        {
                            ID = new Guid("c39721e0-1ab6-4e78-b33a-21094586b14a"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5835),
                            Description = "Những mâu thuẫn căng thẳng giữa các băng nhóm trong thế giới ngầm.",
                            DirectorID = new Guid("e71b85f3-50e0-4322-9d86-37a25934ccfb"),
                            Duration = 120,
                            GenreID = new Guid("33065001-c526-4893-85d9-cbcc2c2f2606"),
                            Images = "chimuoiba.png",
                            LenguageID = new Guid("336385a9-21ff-426a-a978-2c6ada7f9ee1"),
                            Name = "Chị Mười Ba: Cuộc Chiến Nhân Tình",
                            StarTime = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=chimuoiba-trailer"
                        },
                        new
                        {
                            ID = new Guid("f654d43c-4642-4f32-9be1-edf4dd5e9b19"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5842),
                            Description = "Cuộc sống đầy biến động của một gia đình truyền thống Việt.",
                            DirectorID = new Guid("5499257b-a9e2-4c22-8994-102b3c54588c"),
                            Duration = 110,
                            GenreID = new Guid("b9a70fee-8a7a-4c99-b586-9df4df9d3613"),
                            Images = "nhabanu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Nhà Bà Nữ",
                            StarTime = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=nhabanu-trailer"
                        },
                        new
                        {
                            ID = new Guid("1a3a605f-833b-487d-ba26-7b9c7578e664"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5848),
                            Description = "Cuộc sống sang chảnh và những bí mật động trời của giới thượng lưu.",
                            DirectorID = new Guid("0c760f9d-5894-45e7-8a7d-e8e426bc5a54"),
                            Duration = 140,
                            GenreID = new Guid("80d3618c-1ee5-4ee9-beac-50338e619109"),
                            Images = "gaigialamchieu.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Gái Già Lắm Chiêu 6",
                            StarTime = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=gaigialamchieu-trailer"
                        },
                        new
                        {
                            ID = new Guid("79cdea41-044e-4e14-a2e7-48c3a223a767"),
                            AgeAllowed = 18,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5860),
                            Description = "Bữa tiệc đầy những bí mật được phơi bày qua trò chơi mạo hiểm.",
                            DirectorID = new Guid("68a38150-5ee7-4911-ba5d-1734d7cfb0c0"),
                            Duration = 125,
                            GenreID = new Guid("60092a83-dbaf-4497-b850-078c6c993029"),
                            Images = "tiectrangmau.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Tiệc Trăng Máu 2",
                            StarTime = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Trailer = "https://www.youtube.com/watch?v=tiectrangmau-trailer"
                        },
                        new
                        {
                            ID = new Guid("9dda574c-72f2-40f5-a13d-d10272e807ec"),
                            AgeAllowed = 16,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5869),
                            Description = "Hành trình sinh tồn đầy kịch tính trong khu rừng bí ẩn.",
                            DirectorID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Duration = 115,
                            GenreID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Images = "rungthemanh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Rừng Thế Mạng 2",
                            StarTime = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=rungthemanh-trailer"
                        },
                        new
                        {
                            ID = new Guid("d313c846-a580-43ad-882c-25d4df7869a8"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5875),
                            Description = "Câu chuyện tình yêu đầy lãng mạn và cảm động của Trịnh Công Sơn.",
                            DirectorID = new Guid("e71b85f3-50e0-4322-9d86-37a25934ccfb"),
                            Duration = 150,
                            GenreID = new Guid("33065001-c526-4893-85d9-cbcc2c2f2606"),
                            Images = "emvatrinh.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Em Và Trịnh 2",
                            StarTime = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=emvatrinh-trailer"
                        },
                        new
                        {
                            ID = new Guid("47633ea9-9a25-491f-85d5-0fcac09ed62c"),
                            AgeAllowed = 12,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5882),
                            Description = "Tiếp tục câu chuyện tình yêu day dứt giữa Ngạn và Hà Lan.",
                            DirectorID = new Guid("5499257b-a9e2-4c22-8994-102b3c54588c"),
                            Duration = 130,
                            GenreID = new Guid("b9a70fee-8a7a-4c99-b586-9df4df9d3613"),
                            Images = "matbiec.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Mắt Biếc 2",
                            StarTime = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=matbiec-trailer"
                        },
                        new
                        {
                            ID = new Guid("26053232-f2c2-4fda-b617-afdcbb419f7c"),
                            AgeAllowed = 15,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5888),
                            Description = "Phiên bản Việt của Người Nhện với những pha hành động gay cấn.",
                            DirectorID = new Guid("0c760f9d-5894-45e7-8a7d-e8e426bc5a54"),
                            Duration = 145,
                            GenreID = new Guid("80d3618c-1ee5-4ee9-beac-50338e619109"),
                            Images = "nguoinhenvietnam.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Người Nhện Việt Nam",
                            StarTime = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=nguoinhenvietnam-trailer"
                        },
                        new
                        {
                            ID = new Guid("b133ba5a-dba4-48a9-8384-cdcec21c55cf"),
                            AgeAllowed = 13,
                            CountryID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5894),
                            Description = "Những câu chuyện tình yêu lãng mạn tại Sài Gòn mưa rơi.",
                            DirectorID = new Guid("68a38150-5ee7-4911-ba5d-1734d7cfb0c0"),
                            Duration = 100,
                            GenreID = new Guid("60092a83-dbaf-4497-b850-078c6c993029"),
                            Images = "saigontrongmuaroi.png",
                            LenguageID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Name = "Sài Gòn Trong Cơn Mưa 2",
                            StarTime = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Trailer = "https://www.youtube.com/watch?v=saigonmuaroi-trailer"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentMethod", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("2a266d61-6c75-4905-93e9-a875978518e7"),
                            Name = "Credit Card",
                            QRCode = "hh2",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("9090c404-edde-488d-b01c-16c9f0a2ba35"),
                            Name = "Cash",
                            QRCode = "mskt3",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEarned")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .IsFixedLength();

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Point", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("6caf3918-a776-42a7-b963-59adfba285d3"),
                            DateEarned = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(6332),
                            TotalPoint = 50,
                            UserID = new Guid("b50c2397-547d-480a-be54-4fdd668bf634")
                        },
                        new
                        {
                            ID = new Guid("150ced73-e35c-448a-a1f6-e1e42d6b8265"),
                            DateEarned = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(6336),
                            TotalPoint = 150,
                            UserID = new Guid("45c29014-4bfd-45f4-9a72-96e2d2bc417d")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.Property<Guid>("PromotionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("PromotionID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PromotionUsers", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<double>("MinPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<DateTime>("StarDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("RankMember", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("852e69ff-278a-48d1-a4f9-a38f8e9423ca"),
                            MinPoint = 100.0,
                            Rank = "Gold",
                            StarDate = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(6309),
                            Status = 1,
                            UserID = new Guid("b50c2397-547d-480a-be54-4fdd668bf634")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = new Guid("25d7afcb-949b-4717-a961-b50f2e18657d"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4137),
                            RoleName = "Admin",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4158),
                            RoleName = "Client",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("56bece24-ba60-4b2b-801c-b68cfc8ccf9d"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4160),
                            RoleName = "Staff",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ColumnNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatingCapacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(50);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CinemasId");

                    b.ToTable("Room", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5229),
                            Name = "Room 1",
                            RowNumber = 0,
                            SeatingCapacity = 100,
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            CinemasId = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ColumnNumber = 0,
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5235),
                            Name = "Room 2",
                            RowNumber = 0,
                            SeatingCapacity = 150,
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Show_ReleaseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("Show_ReleaseID");

                    b.ToTable("Screening", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("47de8067-213a-4cb0-81ec-e6302eea1c8f"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5961),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 13, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5959),
                            ShowTimeID = new Guid("047ba41c-5910-4779-9aef-8c2175843284"),
                            Show_ReleaseID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("4985e019-3e4b-4bd0-b504-d1de963e8055"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5969),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 12, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5967),
                            ShowTimeID = new Guid("a2f88907-2620-4237-a198-5a16c13e8fb6"),
                            Show_ReleaseID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("5d989d97-8af5-4248-9f8c-4dc380a0a23f"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5972),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 11, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5971),
                            ShowTimeID = new Guid("0e04b9c9-dfa2-4c8f-86b1-be7147231bab"),
                            Show_ReleaseID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("65c91da6-4bb2-4e53-8f07-6d7bb6446f42"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5976),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 10, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5975),
                            ShowTimeID = new Guid("e0173875-be70-4c74-bf8b-e677a5f5dcd4"),
                            Show_ReleaseID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0c9bf321-8f7a-4c54-b1be-55ab622239a4"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5979),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 9, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5978),
                            ShowTimeID = new Guid("da4d0fbb-39b3-4c8f-9caf-ea02636daa39"),
                            Show_ReleaseID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("f449a23e-ff5b-47e2-bb82-74d9b9601bf1"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5983),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 8, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5982),
                            ShowTimeID = new Guid("94b95608-62ac-4e9c-b0d6-ab846038c2c6"),
                            Show_ReleaseID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("b06e1e4d-641a-4fde-9090-8a8779d85c8c"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5990),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowDate = new DateTime(2024, 12, 7, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5989),
                            ShowTimeID = new Guid("207e733e-d00a-47bb-a32d-48bb64bd1a33"),
                            Show_ReleaseID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Row")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoomID");

                    b.HasIndex("SeatTypeID");

                    b.ToTable("Seat", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("e5ea8ae5-4043-4b70-8e1d-d5b1e4686af1"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("12b5f300-4044-4457-8fa3-d14f9390d653"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b2fbd2f6-3024-452d-8676-83bc528e98c3"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6ffd8fe7-47dd-4053-9491-9977629fe291"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f168607b-e879-47cf-8cc8-510327450e69"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2a336b82-daf4-4c1c-9199-bda95fa996a5"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("222850e2-5f9b-43c4-8959-1337ec521cc1"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4fc52269-5cb9-40b0-8d4a-a215db6d53cf"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7a0243a4-a41b-4f7f-abb3-112c2af2acae"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c831be58-30cf-4d55-9957-ab69a3bf69f5"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b2b14782-0aad-480b-af67-bc600a23b2b3"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("df5a5e0b-3daf-4d4d-8721-f06a0166c1c3"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("db15ff20-9e72-46b0-9fb6-073f0a01bd73"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f8182929-aa20-42a8-b8c6-4c84a50cd304"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("eea52ecd-bd3c-4e5b-8448-a8e322c05dbc"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fcd1f236-a369-4a99-829b-8f1e1b86e41e"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d47447a4-f2e3-4faa-a70b-f64ee7782782"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bb8affb9-cb61-4787-b280-0ec970873648"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2b5d2ba1-929b-488d-95e5-004f5ee80eaf"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8ce365aa-6ec3-4fdd-bdad-4e88079ef5e7"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a3f5a016-186b-4bbd-afc2-c5483df65422"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("78b6fad1-bb58-4924-854f-10e146dd207d"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ae9b34c9-3113-4410-8903-8120181df657"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("eac91816-a1b2-4a04-92c5-d26a712a09d5"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6163a7ad-fa85-4905-9eba-1282987ffdc6"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4c7f92f3-3b8e-402e-aa5c-766067e87b70"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("224bc00d-2bcb-4cac-b226-9f7f02c997d5"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("721953ad-1ed6-4971-ac21-7a067bc8b66c"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("be55cbe5-6f8b-4f43-a912-e86cb3e2b61b"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e27d6a84-b6d4-45a9-ad9c-11928e51f0bd"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f4d07376-c450-494f-8e02-41a3e76804ba"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("985c3194-53f5-4aca-8e4c-b95010f58a38"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("736769dc-c055-48f5-bd2b-8f9b3c82c7f8"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fd385974-a768-470d-9874-9c7ae1855056"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9528ab6c-70a2-4fe6-b4c6-7dcb7dcbf6e6"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("90c61d03-a1e3-400f-99b9-1774a636b97f"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a0179515-8e1b-4614-be7b-664e7c809dfd"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ca641b89-33be-4f5d-a5eb-154ccfe1e156"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("85114c7a-d2c7-41a0-9770-de37031f9f60"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("512c0f59-5d8a-45d2-b655-3b100cbbd4d2"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c53384f4-5d52-452a-af27-e6dc9ddd7288"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("607ceb39-8941-451e-86e1-81ca6c322e26"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f8410c6d-40c8-4a95-8381-81471dc8fbcf"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5ed1b1e4-bef6-4e68-9028-c126c61a80b3"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f8ae7305-b30b-4a4c-bdaa-66372424abed"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f552d554-3e97-4294-855e-d9606ab9b1c8"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e2318afe-9c04-43b8-80be-dae096767d5f"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8942e8a1-711c-4295-af7f-4029ff675c7b"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("642f1c9c-9d84-4d17-8d0c-39db0dbb7dd4"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("86b31a61-f6dd-4bf0-a407-0f4849280398"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("17a79454-6168-49b2-9fe8-7918c0286caf"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2b486b9a-e531-4394-95d8-d47c32e2b0f5"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7bbb8b91-0316-42b2-9656-0cbbcf84c49c"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("aac33aaf-44c3-493f-bfce-7536c123efc9"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f6307b8d-4802-4a63-b816-99918f91152d"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d9e6b7db-ffc7-4f1e-89ef-4b16b4f4dd06"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("083ed561-40e8-4096-9c91-ae9644cd3050"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1ae9b314-7f93-4c3d-98e7-836c18dbae11"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("60510c33-d7ef-4dc0-a9e0-6ad11925fdec"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("947fbbd6-445d-4ce7-af4f-0630d284748b"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2e86960e-20d2-49d2-9378-219ee65afa67"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c9aefb3a-94f5-4700-bcd1-46b1b7710825"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b7b12950-aa29-4058-ba1a-7685705ad072"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fc6715f8-a19a-45da-bc0c-f01b403280fc"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("74af992f-f5dc-46b9-96b0-4e3f1ef6323a"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f6b87982-edab-4a83-b450-5018e1dfb568"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("143c2bff-7ccd-4b0f-a830-45fc033e1a7f"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f39f80a2-be36-4e05-a220-07011dea637b"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4d0eabf9-d686-4425-9405-d3415c90adcf"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1fb34b00-3034-4e24-a994-bdc25f97016b"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f0e2de5f-d5de-4ffb-a110-50484749495e"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d9a79b1f-28bf-4272-9348-2fd834b3f062"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("01fdfb1a-1afc-467f-b89d-8ffcb2eb4ff1"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5374e5a3-9c58-46ad-984a-3d7f8ec3ef47"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d9e6707d-82ef-4fc9-93be-c2801714da69"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("da4fcc27-4643-4c2b-8d9a-ac326d78a065"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c61a5134-b4f9-4313-bde8-4dc080c8e916"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c9651b21-7a90-41e4-bcde-7c08c0d84ddd"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7e29a87f-5310-439c-88e5-06fd356d452f"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ca3609d6-f16c-449d-868f-e98aeb24ce30"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d96d7dc0-e2ff-4d48-a158-624b7b5be206"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f9b17ab8-7701-4b5e-8a57-21598bb2cc63"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("21511348-af76-405f-9014-32e918a05cb0"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("efa1c5fd-9829-440a-baba-7ad882274701"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9cb6d025-70c7-44cf-b1c9-ffb9f2ce3b16"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("dd5c8b2f-cede-41fc-85cb-079aa32aed80"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a526fef1-bac8-4d55-a89b-c465f8989cc3"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4761425d-644c-49d2-8485-efff39606468"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("840bc4cc-8a77-4eef-a7eb-1d195a8f60c4"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("dcc0b481-5161-40d3-a954-1d9b63283f9a"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2b744346-33b4-40c1-b6d5-f60eb7f480e5"),
                            Column = "A",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d1a63df3-08eb-475b-a62f-0fd9cfea0364"),
                            Column = "B",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c0a6b25d-7c5d-4b91-8016-b39ff5a3f097"),
                            Column = "C",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("82ee9761-a67e-4c85-99ab-1dc8a99a9a66"),
                            Column = "D",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a03faa90-b468-4c74-ade2-ab4f705f5089"),
                            Column = "E",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c8e3486f-dfa9-4e7a-b8e7-d87e7eeda413"),
                            Column = "F",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9a618fa8-3212-4974-9b57-9dc684370f6d"),
                            Column = "G",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("27d0eef6-6052-472b-b30f-b7216829615d"),
                            Column = "H",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2f2ce4ab-04e4-499a-b286-4f28e6c62a55"),
                            Column = "I",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c3110c73-6a9c-4bbe-8751-9579309fdfdd"),
                            Column = "J",
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f30256eb-6f80-491d-bf2f-264f43c4b8a1"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "A1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0fdbb52d-4e4a-41c1-9a2d-196d24d6fd1a"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "B1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5a5d8108-ebc0-426a-8d85-c088e15603d9"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "C1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3442de54-b6cd-4412-94c5-3c152a80a1e3"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "D1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("411fbfca-846f-4cf3-9c27-c896cff8d33b"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "E1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("88ba67c3-8350-41b2-9936-f1e4af890727"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "F1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a9ea32f0-a2ae-42a9-95ac-ce235f978e35"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "G1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c355adea-882e-4c1c-b597-2e2b83a0f7e4"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "H1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8f613ed9-b64c-4c91-9f26-9a558853b0c0"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "I1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a457a0fd-bd56-4ec8-b03f-0795c5427e3e"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "1",
                            SeatNumber = "J1",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("167870d5-c96e-441f-91f5-56155cd0656f"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "A2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8e41e489-2e5c-4184-a604-2aa0009a661b"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "B2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9997a836-e432-4442-8d1a-18d443d608e6"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "C2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8e74939c-6259-4cb2-9a38-2325f36be2e4"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "D2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7dad1567-0165-453a-8f28-8050b670a954"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "E2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7b6cca71-294a-468a-9242-b00cc178f110"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "F2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ec139f49-feef-44ed-b7d5-4fdc7f731a2e"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "G2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("25e0c2a0-b6f1-4f3e-8d52-c493620c08b9"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "H2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("83ab1bd0-1391-40f6-b673-e34393510d37"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "I2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8628934b-df15-4c7c-a78c-f13ed3cba9fa"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "2",
                            SeatNumber = "J2",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("78de650e-c4b0-47d4-abfd-1500ffda5318"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "A3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6c9d7ade-d429-4b93-bdd8-5583ae635548"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "B3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("60fde64b-c69b-404c-9e73-262b59f33d9d"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "C3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9b94c719-fad6-4a0b-a969-db56b997f90e"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "D3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c0f27980-3b57-4a4b-9ca8-8321293e3d02"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "E3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ebb222f0-b169-45fd-a275-1ba645700cfb"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "F3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("12c8c370-31da-45d6-b24b-4b7113ce3b17"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "G3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("281da763-d4df-410c-a388-a91442511905"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "H3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("85ca6e47-cfad-4a48-b2e6-82084894566c"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "I3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9e7b16a3-5989-4de5-8255-d8aa1ed4c737"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "3",
                            SeatNumber = "J3",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a81d704c-ee14-4b88-a80b-491205615d82"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "A4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f5cfc6d2-2207-4de5-8cfa-ead9aeac5e38"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "B4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("31cd4824-a896-49cf-b269-35aa22f69140"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "C4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5d9abb4e-07d4-4057-9870-1ccf7e0ec1dd"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "D4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7def16ec-7516-4b36-b136-efb42d021304"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "E4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("596cc74a-27e2-4ad2-ab99-744b2fa8d72f"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "F4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("890e4385-42dd-4c22-8673-fd2adf17677c"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "G4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("754864f0-8386-4f99-bcca-02710ce2e53a"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "H4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9c6bd7f2-b9f8-4c4b-a946-c8184b012633"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "I4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bba5e74a-5b91-4a97-b5d9-5225e17e1e1a"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "4",
                            SeatNumber = "J4",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("516b106a-3b14-445a-b373-96a50f75d840"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "A5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("7103f6b1-057c-481d-9515-4fbd084d2db2"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "B5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("dd0b5acf-b6ab-4b59-9f7f-b5e819a23dcb"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "C5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0fe0d595-2d92-458f-afbd-8bfde3ac1264"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "D5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b0384211-e24d-4079-925f-f8d27a2b1786"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "E5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("220d77ca-0c72-4e7d-830c-4a2294a5dfbd"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "F5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("afcb4055-a97d-4e70-8e58-75910e5d5817"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "G5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8e940f39-a1ca-4c34-9a74-a10c115e76b1"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "H5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("de23adf8-28dd-4cd0-a191-47a0e1827b44"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "I5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("66f43e28-ce3a-49cc-b52a-64d213edd225"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "5",
                            SeatNumber = "J5",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3e1d31ff-bb45-4150-b71f-c4f60839fc94"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "A6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("dd4073e2-67ce-430d-b682-c2e481b80e81"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "B6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ded71396-4525-462e-ba2d-9bc5e1b583de"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "C6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("cb39a92d-6175-4991-81ca-d9de5777e0a8"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "D6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fe7d3814-efc7-4a54-9978-343b151264cb"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "E6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("dfe913f0-32c0-404f-b2fe-ff28afef8491"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "F6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("25f3f84d-555f-400b-821f-5aa9b006e1b3"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "G6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("68257927-6bc3-4da1-b3bf-600ab5045799"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "H6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("edde375e-b5a1-45c7-b184-b2da9eb0f244"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "I6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0239a113-ce97-4ca5-a6c6-0a0d5c98646f"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "6",
                            SeatNumber = "J6",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("02970d5e-d13e-4255-90f8-e01886299bed"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "A7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("716d1108-1563-4dd9-b32e-7ba16a74d258"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "B7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a78a09f4-bb5f-4170-97e7-73b53219d4a1"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "C7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b11b9ac6-cbfa-4743-a8c7-14014896e870"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "D7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a3b3082c-783a-4557-8e09-f7e243d22fb7"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "E7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3760c1e4-1c7d-4b26-a1ae-1f9214ae0d33"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "F7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e1c3b5da-e58d-4be4-ae3c-615339071ea2"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "G7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("953c0c81-f18f-4d04-9850-fa0332b6aac9"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "H7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2e21c6e9-1453-43e8-b50f-d8ffab9bfdf3"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "I7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("dfea5ec6-bcff-4bbd-8d68-ad192a9f4ac3"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "7",
                            SeatNumber = "J7",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bab24225-2ae0-4c56-8b32-6bd914ff6100"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "A8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bf0d14a5-2273-4dd3-90b1-b63c8cc8892b"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "B8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("fc9bf4eb-0e59-43cc-bfbb-ddad8901fd89"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "C8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("91ce2526-ad3a-4348-8eeb-b1aa3c9a1e7c"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "D8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c5334081-0a35-4055-a510-5776cbb057d8"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "E8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b6546cf6-beb9-4110-88e7-1d8baaf72cf2"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "F8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3ec1d71d-240d-4d72-824d-45a2a81bf436"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "G8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("59f65a28-18e3-4f9a-8f8d-cbab43948eee"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "H8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("91e03815-d316-4da1-8ba2-41daedf8ddd3"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "I8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d12c8cbd-8d84-4a36-abec-b08585757074"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "8",
                            SeatNumber = "J8",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("65ba145d-48c5-422b-86d0-f4f6c04d71c5"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "A9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8d50c1b0-a194-49d9-836f-1e7c551fc2ff"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "B9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("9b8207fa-873b-477a-9bf5-a1c7422131bd"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "C9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d099340e-8e8e-4c67-80ae-732b3268e75c"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "D9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e973bc5a-a635-4c2c-bf0b-d18a20a0eefc"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "E9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3e40ac50-54b7-415b-8ca1-9418abccaa07"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "F9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("77f162cf-2e0f-4b1f-9ceb-a0a175b89f4b"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "G9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("65756f90-1a9f-4a30-854c-5388e0028e3a"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "H9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d2374ae9-96cc-4c29-8f63-96aac4822a80"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "I9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bafd4785-97b3-4b2e-bc13-9e2029af9315"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "9",
                            SeatNumber = "J9",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ace95a17-b912-4980-9996-6d5234c441db"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "A10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5f9a4f61-8ac1-4139-ad49-36eae2a245ce"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "B10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d4f35515-1b8e-4e65-8830-b2d81e9c0210"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "C10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("25c78cbf-6747-454e-a7c0-e020077c7015"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "D10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2d5bf3cf-31c1-4442-9a1b-88dfe0c96deb"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "E10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f86334c7-684b-4f09-ad3a-2f47fae12446"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "F10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8ff4545b-b9d2-4732-863a-71cebf18d308"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "G10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("44f27ce2-88f3-4373-be9f-dcac4efab625"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "H10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f8f021ad-e03e-45a1-a758-00e16268cee3"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "I10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("6bb3ed1d-b024-4099-931c-399c4f528270"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "10",
                            SeatNumber = "J10",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("53f7cec9-b633-46a5-89b3-6607975764a7"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "A11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f3d410f6-c129-4c7e-a67b-dc8d8b6c12c7"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "B11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1566808a-7251-4a8b-8a87-b167129019f1"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "C11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f7ce5870-0b21-43da-99d0-0f226d486269"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "D11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("54b05213-82a6-4ae9-a26e-300f810c40e6"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "E11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d9a4b066-3916-41bb-a884-b1778f319979"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "F11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2866c3bc-a59e-49e8-b1bc-4cbc4ea345b1"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "G11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bb9b45d4-2d0e-4a0f-803f-b5ea0d15bf04"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "H11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bca73f4a-f9cc-4173-920f-6897c7c52d24"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "I11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b9238731-4296-4321-b9ee-366378019ba0"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "11",
                            SeatNumber = "J11",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4116b688-77bd-4976-b1d7-f72cca108aa9"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "A12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("db147525-6a1b-4ed3-9d73-5c0474d7ba4c"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "B12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("915b5017-be9b-45d5-96a7-88b33482ca4f"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "C12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("610c372b-7b7f-4c3b-bd56-b7dfab1fe218"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "D12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4729f349-c274-4ef7-b611-bf804bd09d48"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "E12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c3405be8-a53d-49f8-99ac-03bf2fa96222"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "F12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("37038575-7d26-49da-ba4d-20c006b1cb2b"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "G12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("d264c8e8-3c4c-4bd2-89c8-8933217be4fb"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "H12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("64687c29-0294-4e6a-b048-15a63242bb84"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "I12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a8368b1b-bb0e-4ac1-813c-014ea100011e"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "12",
                            SeatNumber = "J12",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("0cf323d2-2af9-4761-b94e-337237d15e1d"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "A13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f37c715e-f036-4918-b7dd-fa616423406e"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "B13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8139e77d-867f-4ba2-b16e-1f2b5369bce1"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "C13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("c6c007d0-7056-4f95-87b7-5b5be33a3697"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "D13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b6cc74d7-d467-4fc7-b811-8c59f5988995"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "E13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e17f6571-fe7c-45a2-a5c6-f556bfdb745c"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "F13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("60f3c78c-0f15-4f3b-938d-25694871d8aa"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "G13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3bc2c4b1-9577-4637-a4b6-c8d1c75d0ab1"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "H13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3087a8df-81b7-4006-8790-7d2f0fbffe36"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "I13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2d0e112e-5d62-4d38-b8a8-954ed6292b2f"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "13",
                            SeatNumber = "J13",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("01d10c30-fc55-47ca-916f-40e13bdd7488"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "A14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("91291bd5-aa51-4e7e-a7e2-2e1d6cba950c"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "B14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("bcc0daf1-516f-4100-a411-ac8bc6c8e1f7"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "C14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("3b454826-8e83-4de5-869c-7d41fbdcf067"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "D14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("b5434cfc-d60c-41d3-b06a-cd24a6daa519"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "E14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("ba8e96fb-b295-449c-81de-66be3cba1939"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "F14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("83281254-31e0-462d-8f5c-45744f19c3c6"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "G14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a9640830-da6c-4a36-82ec-c6e8d11243c6"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "H14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("a493b47e-61e7-4c49-8bd3-0fd7b843d882"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "I14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("281fca88-dfe9-4a85-a0e3-b9087ca405fe"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "14",
                            SeatNumber = "J14",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2bba7e6c-fdbf-44d6-afbf-4c508344295d"),
                            Column = "A",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "A15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("5c7560f8-b177-462d-82a6-a026192dc81d"),
                            Column = "B",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "B15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("4c8f265b-3816-4a56-9264-a842ccf61669"),
                            Column = "C",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "C15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("e83f08c9-be40-46de-9a27-ba87d9be4e8f"),
                            Column = "D",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "D15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("f2c8dae3-ce71-47f1-9032-5d99067244d1"),
                            Column = "E",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "E15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("db6047c0-4143-4c13-bb0e-2b19d3f8ac2d"),
                            Column = "F",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "F15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8b9cd453-5a89-4e9d-a34f-2cee203a5101"),
                            Column = "G",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "G15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("1de535ea-c6c4-462c-8f2c-2778b0a6344f"),
                            Column = "H",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "H15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("54845851-0ad2-4261-93c2-6843bb714f1d"),
                            Column = "I",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "I15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("8723c514-4200-42fe-915a-e085f9a602d9"),
                            Column = "J",
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Row = "15",
                            SeatNumber = "J15",
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SeatType", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5162),
                            SeatTypeName = "Ghế thường"
                        },
                        new
                        {
                            ID = new Guid("4e371d58-1177-41c1-8422-64cb63164603"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5165),
                            SeatTypeName = "Ghế Vip"
                        },
                        new
                        {
                            ID = new Guid("f4582cee-32a9-4883-b534-ba1c9ed41d3f"),
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5167),
                            SeatTypeName = "Ghế đôi"
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NewShift")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<DateTime>("RequetDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("WorkShiftID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("WorkShiftID");

                    b.ToTable("ShiftChange", (string)null);
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ShowTimes");

                    b.HasData(
                        new
                        {
                            ID = new Guid("047ba41c-5910-4779-9aef-8c2175843284"),
                            EndTime = new TimeSpan(0, 10, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a2f88907-2620-4237-a198-5a16c13e8fb6"),
                            EndTime = new TimeSpan(0, 12, 15, 0, 0),
                            StartTime = new TimeSpan(0, 10, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("0e04b9c9-dfa2-4c8f-86b1-be7147231bab"),
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 12, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("e0173875-be70-4c74-bf8b-e677a5f5dcd4"),
                            EndTime = new TimeSpan(0, 16, 45, 0, 0),
                            StartTime = new TimeSpan(0, 14, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("da4d0fbb-39b3-4c8f-9caf-ea02636daa39"),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            StartTime = new TimeSpan(0, 17, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("94b95608-62ac-4e9c-b0d6-ab846038c2c6"),
                            EndTime = new TimeSpan(0, 21, 15, 0, 0),
                            StartTime = new TimeSpan(0, 19, 15, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("207e733e-d00a-47bb-a32d-48bb64bd1a33"),
                            EndTime = new TimeSpan(0, 23, 30, 0, 0),
                            StartTime = new TimeSpan(0, 21, 30, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("bf7f21b8-7d6a-4d99-be56-53b2ff4f26e9"),
                            EndTime = new TimeSpan(0, 1, 45, 0, 0),
                            StartTime = new TimeSpan(0, 23, 45, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("a11694d8-5814-4f8e-944a-a950cfef2875"),
                            EndTime = new TimeSpan(0, 4, 0, 0, 0),
                            StartTime = new TimeSpan(0, 2, 0, 0, 0),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fc1419a6-82c1-442d-9412-8bc28bdfdf24"),
                            EndTime = new TimeSpan(0, 6, 30, 0, 0),
                            StartTime = new TimeSpan(0, 4, 30, 0, 0),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRelease")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeRelease")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("RoomID");

                    b.ToTable("Show_release", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("16ab728d-6c56-45f9-b92e-9c773a8c845f"),
                            DateRelease = new DateTime(2024, 12, 4, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5930),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            RoomID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 3, 8, 25, 26, 35, DateTimeKind.Local).AddTicks(5925)
                        },
                        new
                        {
                            ID = new Guid("b0c363ef-e39e-481c-a9af-95445ec76d06"),
                            DateRelease = new DateTime(2024, 12, 5, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(5936),
                            MovieID = new Guid("c39721e0-1ab6-4e78-b33a-21094586b14a"),
                            RoomID = new Guid("3cd33619-2ca1-4f3a-9da4-83a85913c8f0"),
                            Status = 1,
                            TimeRelease = new DateTime(2024, 12, 3, 8, 26, 26, 35, DateTimeKind.Local).AddTicks(5935)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MovieID");

                    b.HasIndex("ScreningID");

                    b.HasIndex("SeatID");

                    b.ToTable("Ticket", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("c9a39d51-2690-42c4-a479-4bda1316a9a0"),
                            MovieID = new Guid("bebc26d3-f734-46bf-b16d-42e67fb50e71"),
                            Price = 100000m,
                            ScreningID = new Guid("47de8067-213a-4cb0-81ec-e6302eea1c8f"),
                            SeatID = new Guid("e5ea8ae5-4043-4b70-8e1d-d5b1e4686af1"),
                            Status = 2
                        },
                        new
                        {
                            ID = new Guid("c8029aff-f04d-4142-b266-2178a477c43e"),
                            MovieID = new Guid("c39721e0-1ab6-4e78-b33a-21094586b14a"),
                            Price = 2100000m,
                            ScreningID = new Guid("4985e019-3e4b-4bd0-b504-d1de963e8055"),
                            SeatID = new Guid("12b5f300-4044-4457-8fa3-d14f9390d653"),
                            Status = 2
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<Guid>("ScreeningID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatTypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowTimeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TicketPriceSettingID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ScreeningID");

                    b.HasIndex("SeatTypeID");

                    b.HasIndex("ShowTimeID");

                    b.HasIndex("TicketPriceSettingID");

                    b.ToTable("TicketPrice", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("240378cb-b2b4-4987-88f4-b57a481c94c6"),
                            Price = 50m,
                            ScreeningID = new Guid("47de8067-213a-4cb0-81ec-e6302eea1c8f"),
                            SeatTypeID = new Guid("8fb86c77-213f-4316-8a7a-43fee795514e"),
                            ShowTimeID = new Guid("047ba41c-5910-4779-9aef-8c2175843284"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        },
                        new
                        {
                            ID = new Guid("2eed0f6b-68b8-445b-a405-bb3e94733b89"),
                            Price = 60m,
                            ScreeningID = new Guid("4985e019-3e4b-4bd0-b504-d1de963e8055"),
                            SeatTypeID = new Guid("4e371d58-1177-41c1-8422-64cb63164603"),
                            ShowTimeID = new Guid("a2f88907-2620-4237-a198-5a16c13e8fb6"),
                            Status = 1,
                            TicketPriceSettingID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3")
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("PriceAfter17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceAfter17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekDay")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("PriceBefore17hWeekeend")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge3D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("Surcharge4D")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeCouple")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeIMAX")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("SurchargeVIP")
                        .HasPrecision(18, 3)
                        .HasColumnType("decimal(18,3)");

                    b.HasKey("ID");

                    b.ToTable("TicketPriceSettings");

                    b.HasData(
                        new
                        {
                            ID = new Guid("4bab0da1-d912-4a87-8e21-cb7a665657d3"),
                            PriceAfter17hWeekDay = 60m,
                            PriceAfter17hWeekeend = 70m,
                            PriceBefore17hWeekDay = 50m,
                            PriceBefore17hWeekeend = 60m,
                            Surcharge3D = 30m,
                            Surcharge4D = 40m,
                            SurchargeCouple = 50m,
                            SurchargeIMAX = 50m,
                            SurchargeVIP = 30m
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adderss")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrBriht")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<bool>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("bit")
                        .IsFixedLength();

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("b50c2397-547d-480a-be54-4fdd668bf634"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4340),
                            DateOrBriht = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("45c29014-4bfd-45f4-9a72-96e2d2bc417d"),
                            Adderss = "Hà Nội",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4696),
                            DateOrBriht = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mainguyen@gmail.com",
                            FullName = "Nguyễn Thị Hà Mai",
                            Gender = false,
                            Images = "images/mai.jpg",
                            PassWord = "EqeaomOi6gtQioc0nIFCyg==",
                            PhoneNumber = "0901123456",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("89a08df6-115b-4921-ba4e-91b343eccda7"),
                            Adderss = "Hải Phòng",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4722),
                            DateOrBriht = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nampham@gmail.com",
                            FullName = "Phạm Văn Nam",
                            Gender = true,
                            Images = "images/nam.jpg",
                            PassWord = "XZ7f/wWy3TkvPK4xrHeSuA==",
                            PhoneNumber = "0902123457",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("6a86c934-8ce3-432a-8d21-98e85a4b3f5d"),
                            Adderss = "Đà Nẵng",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4746),
                            DateOrBriht = new DateTime(1993, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thule@gmail.com",
                            FullName = "Lê Thị Thu",
                            Gender = false,
                            Images = "images/thu.jpg",
                            PassWord = "/0Hc+nV2EW4k7MbQwLea9w==",
                            PhoneNumber = "0903123458",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d4ef2d29-2358-450c-bf41-c529aee15556"),
                            Adderss = "TP. Hồ Chí Minh",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4773),
                            DateOrBriht = new DateTime(1988, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tungtran@gmail.com",
                            FullName = "Trần Văn Tùng",
                            Gender = true,
                            Images = "images/tung.jpg",
                            PassWord = "xagxKy3yHdGahKbyqOPTVw==",
                            PhoneNumber = "0904123459",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("8458c8fd-3b08-4670-998f-5f5a024b41e8"),
                            Adderss = "Nghệ An",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4795),
                            DateOrBriht = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lanvu@gmail.com",
                            FullName = "Vũ Thị Lan",
                            Gender = false,
                            Images = "images/lan.jpg",
                            PassWord = "/yeXzzHJiJ8+12Q8V6mtSg==",
                            PhoneNumber = "0905123460",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("de2da2b1-0229-48c8-b8a1-67bd97ff78d8"),
                            Adderss = "Bắc Ninh",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4816),
                            DateOrBriht = new DateTime(1990, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hungdo@gmail.com",
                            FullName = "Đỗ Văn Hùng",
                            Gender = true,
                            Images = "images/hung.jpg",
                            PassWord = "Vkp09BaAl5Z37bxssT1cgw==",
                            PhoneNumber = "0906123461",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("11bf1bca-0688-471e-bf70-294d2b211b21"),
                            Adderss = "Thái Bình",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4835),
                            DateOrBriht = new DateTime(1985, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "binhnguyen@gmail.com",
                            FullName = "Nguyễn Văn Bình",
                            Gender = true,
                            Images = "images/binh.jpg",
                            PassWord = "dxri5kOk5FKRX1mmazryVA==",
                            PhoneNumber = "0907123462",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("98780399-8274-4052-b084-8475f66208fc"),
                            Adderss = "Hưng Yên",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4856),
                            DateOrBriht = new DateTime(1994, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hanhtran@gmail.com",
                            FullName = "Trần Thị Hạnh",
                            Gender = false,
                            Images = "images/hanh.jpg",
                            PassWord = "ysdNmRQJyatHr9hMky+o8w==",
                            PhoneNumber = "0908123463",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("28581ffc-8a1f-45dd-90f3-d219de723cad"),
                            Adderss = "Nam Định",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4878),
                            DateOrBriht = new DateTime(1986, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "longle@gmail.com",
                            FullName = "Lê Văn Long",
                            Gender = true,
                            Images = "images/long.jpg",
                            PassWord = "RGkuvbVVFkKr2zs5agYGGA==",
                            PhoneNumber = "0909123464",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("d1173609-7f5b-43c1-87f9-1a6c608c0aba"),
                            Adderss = "Quảng Ninh",
                            CreatedTime = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(4902),
                            DateOrBriht = new DateTime(1997, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngocpham@gmail.com",
                            FullName = "Phạm Thị Ngọc",
                            Gender = false,
                            Images = "images/ngoc.jpg",
                            PassWord = "D7J1Ybv5ywfP4cyEongXOg==",
                            PhoneNumber = "0910123465",
                            RoleID = new Guid("ba820c64-1a81-4c44-80ea-47038c930c3b"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("DeletedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("ModifiedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStar")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("WorkShift", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("6648416c-cf56-4968-9441-e18372df5db9"),
                            Status = 1,
                            TimeEnd = new DateTime(2024, 12, 3, 10, 24, 26, 35, DateTimeKind.Local).AddTicks(6361),
                            TimeStar = new DateTime(2024, 12, 3, 6, 24, 26, 35, DateTimeKind.Local).AddTicks(6361),
                            UserID = new Guid("b50c2397-547d-480a-be54-4fdd668bf634"),
                            WorkDate = new DateTime(2024, 12, 3, 8, 24, 26, 35, DateTimeKind.Local).AddTicks(6360)
                        });
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ActorMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("ActorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.PaymentMethod", null)
                        .WithMany("BillDetail")
                        .HasForeignKey("PaymentMethodID");

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Bills")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillCombo", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.FoodCombo", "FoodCombo")
                        .WithMany("BillCombos")
                        .HasForeignKey("FoodComboID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("FoodCombo");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.BillTicket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Bill", "Bills")
                        .WithMany("BillTickets")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Ticket", "Tickets")
                        .WithMany("BillTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.CategoryMovies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.MovieType", "MovieType")
                        .WithMany("CategoryMovies")
                        .HasForeignKey("MovieTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MovieType");

                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Checkin", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPrice", "Tickets")
                        .WithMany()
                        .HasForeignKey("TicketsID");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Countrys", "Countrys")
                        .WithMany("Movies")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Language", "Lenguage")
                        .WithMany("Movies")
                        .HasForeignKey("LenguageID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Countrys");

                    b.Navigation("Director");

                    b.Navigation("Genre");

                    b.Navigation("Lenguage");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Point", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Points")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PromotionUsers", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Promotion", "Promotion")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "User")
                        .WithMany("PromotionUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.RankMember", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("RankMembers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Cinemas", "Cinemas")
                        .WithMany("Rooms")
                        .HasForeignKey("CinemasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cinemas");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Screening")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Screenings")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTime")
                        .WithMany("Screening")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Show_release", "Show_Release")
                        .WithMany("Screenings")
                        .HasForeignKey("Show_ReleaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Rooms");

                    b.Navigation("ShowTime");

                    b.Navigation("Show_Release");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Rooms")
                        .WithMany("Seats")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rooms");

                    b.Navigation("SeatTypes");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShiftChange", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.WorkShift", "WorkShift")
                        .WithMany("ShiftChanges")
                        .HasForeignKey("WorkShiftID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkShift");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("Show_Releases")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Room", "Room")
                        .WithMany("Show_Releases")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Movies", "Movies")
                        .WithMany("TicketSeats")
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screenings")
                        .WithMany("Ticket")
                        .HasForeignKey("ScreningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.Seat", "Seat")
                        .WithMany("Ticket")
                        .HasForeignKey("SeatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Movies");

                    b.Navigation("Screenings");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPrice", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Screening", "Screening")
                        .WithMany("TicketPrice")
                        .HasForeignKey("ScreeningID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.SeatType", "SeatTypes")
                        .WithMany("TicketPrice")
                        .HasForeignKey("SeatTypeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.ShowTime", "ShowTimes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ShowTimeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeonCinema_Domain.Database.Entities.TicketPriceSetting", "TicketPriceSetting")
                        .WithMany("TicketPrices")
                        .HasForeignKey("TicketPriceSettingID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Screening");

                    b.Navigation("SeatTypes");

                    b.Navigation("ShowTimes");

                    b.Navigation("TicketPriceSetting");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.HasOne("NeonCinema_Domain.Database.Entities.Users", "Users")
                        .WithMany("Workshifts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Cinemas", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Countrys", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.FoodCombo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Genre", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Language", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.MovieType", b =>
                {
                    b.Navigation("CategoryMovies");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Movies", b =>
                {
                    b.Navigation("ActorMovies");

                    b.Navigation("CategoryMovies");

                    b.Navigation("Screening");

                    b.Navigation("Show_Releases");

                    b.Navigation("TicketSeats");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.PaymentMethod", b =>
                {
                    b.Navigation("BillDetail");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionUsers");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Roles", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Room", b =>
                {
                    b.Navigation("Screenings");

                    b.Navigation("Seats");

                    b.Navigation("Show_Releases");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Screening", b =>
                {
                    b.Navigation("Ticket");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Seat", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.ShowTime", b =>
                {
                    b.Navigation("Screening");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Show_release", b =>
                {
                    b.Navigation("Screenings");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Ticket", b =>
                {
                    b.Navigation("BillTickets");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.TicketPriceSetting", b =>
                {
                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.Users", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Points");

                    b.Navigation("PromotionUsers");

                    b.Navigation("RankMembers");

                    b.Navigation("Workshifts");
                });

            modelBuilder.Entity("NeonCinema_Domain.Database.Entities.WorkShift", b =>
                {
                    b.Navigation("ShiftChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
