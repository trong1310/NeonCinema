@page "/listuser"
@using NeonCinema_Application.DataTransferObject.User
@using NeonCinema_Client.IServices.User
@inject IUserServices UserService // Sử dụng IuserSV thay vì UserService
@inject NavigationManager Navigation

    
    
<div class="container">
    <div class="kh" style="text-align: center;">
        <h3 style="color:white">Danh sách khách hàng</h3>
    </div>

    <div class="search-container" style="background-color: forestgreen; color: black; width: 350px; height: 60px; border-radius: 10px; padding: 10px; box-sizing: border-box;">
        <input class="form-control" style="width: calc(100% - 20px); color: black; height: 40px; border-radius: 10px; background-color: white; margin: auto; display: block;" placeholder="Tìm kiếm theo số điện thoại" @oninput="OnInputPhoneNumber" />
    </div>


</div>

<table class="table caption-top" style="width: 100%; background-color:white; margin-top: 20px;">

    <thead>
        <tr style="color: black">
            <th scope="col">Ảnh cá nhân</th>
            <th scope="col">Họ và tên</th>
            <th scope="col">Thông tin liên lạc</th>
            <th scope="col">Giới tính</th>
            <th scope="col">Ngày sinh nhật</th>
            <th scope="col">Địa chỉ</th>
            <th scope="col">Trạng Thái</th>
            <th scope="col">Thao tác</th>
        </tr>
    </thead>
    <tbody style="color:black">
        @if (filteredUsers == null)
        {
            <tr>
                <td colspan="8">Đang tải dữ liệu...</td>
            </tr>
        }
        else
        {
            @foreach (var user in filteredUsers)
            {
                <tr>
                    <td>
                        <div class="user-info">
                            <div class="user-image">
                                <img style="width: 70px; height: 70px; object-fit: cover; border-radius: 100%;" src="@user.Images" />
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="user-text">
                            <p class="small-text">@user.FullName</p>
                            <p class="small-text">@user.RoleID</p>
                        </div>
                    </td>
                    <td>
                        <div class="user-text">
                            <p class="small-text">@user.Email</p>
                            <p class="small-text">@user.PhoneNumber</p>
                        </div>
                    </td>
                    <td>
                        <div class="user-text">
                            <p class="small-text">@user.Gender</p>
                        </div>
                    </td>
                    <td>
                        <div class="user-text">
                            <p class="small-text">@user.DateOrBriht</p>
                        </div>
                    </td>
                    <td>
                        <div class="user-text">
                            <p class="small-text">@user.Adderss</p>
                        </div>
                    </td>
                    <td>
                        <div class="user-text">
                            <p class="small-text">@user.Status</p>
                        </div>
                    </td>
                    <td>
                        <div class="user-text">
                            <button @onclick="() => ShowDetails(user.PhoneNumber)" style="background-color:darkorange">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<UserDTO> users; // Danh sách người dùng ban đầu
    private List<UserDTO> filteredUsers; // Danh sách người dùng đã lọc
    private string searchPhoneNumber = ""; // Biến để lưu số điện thoại nhập vào
    private string selectedGender = ""; // Biến để lưu lựa chọn giới tính

    // Phương thức này được gọi khi trang khởi tạo và lấy toàn bộ danh sách người dùng
    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetAllUser(CancellationToken.None);
        filteredUsers = new List<UserDTO>(users); // Khởi tạo với toàn bộ danh sách người dùng
    }
    private void OnInputPhoneNumber(ChangeEventArgs e)
    {
        searchPhoneNumber = e.Value.ToString(); // Cập nhật giá trị của searchPhoneNumber
        FilterUsers(); // Gọi phương thức lọc ngay khi có sự thay đổi
    }
    // Phương thức này dùng để lọc người dùng dựa trên số điện thoại và giới tính
    private void FilterUsers()
    {
        // Nếu ô tìm kiếm trống, hiển thị toàn bộ danh sách người dùng
        if (string.IsNullOrEmpty(searchPhoneNumber))
        {
            filteredUsers = new List<UserDTO>(users); // Hiển thị toàn bộ danh sách
        }
        else
        {
            // Lọc danh sách người dùng theo thứ tự từ đầu số đến cuối số
            filteredUsers = users
                .Where(user => user.PhoneNumber.StartsWith(searchPhoneNumber)) // Kiểm tra số điện thoại bắt đầu bằng giá trị nhập
                .ToList();
        }

        // Lọc thêm theo giới tính nếu có lựa chọn
        if (!string.IsNullOrEmpty(selectedGender))
        {
            filteredUsers = filteredUsers
                .Where(user => user.Gender == selectedGender)
                .ToList();
        }
    }

    private void ShowDetails(string phoneNumber)
    {
        Navigation.NavigateTo($"/updateuser?phoneNumber={phoneNumber}");
    }
}

