@page "/login"
@using NeonCinema_Client.Pages.Client
@using System.IdentityModel.Tokens.Jwt
@layout LayoutClient
@inject NavigationManager _navi
@inject Blazored.LocalStorage.ILocalStorageService _localstorage
<body>
    <div class="background-video">
        <video autoplay muted loop id="bg-video">
            <source src="/images/Ngày 24.... trailer - Phim kinh dị - KC_ 22.04.2022.mp4" type="audio/mp4">
        </video>
    </div>
    <div class="login-container">
        <h1>Đăng Nhập</h1>
        <EditForm Model="@loginModel" OnValidSubmit="LoginAccount">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="input-group">
                <label for="username">Email hoặc số điện thoại</label>
                <InputText id="username" class="form-control rounded" @bind-Value="loginModel.EmailorPhone" required />
            </div>
            <div class="input-group">
                <label for="password">Mật Khẩu</label>
                <InputText id="password" type="password" class="form-control rounded" @bind-Value="loginModel.Password" required />
            </div>
            <div>
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <p class="text-danger">@errorMessage</p>
                }
            </div>
            <div class="d-flex justify-content-center">
                @if (isProcessing)
                {
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
                else
                {
                    <button type="submit">Đăng Nhập</button>
                }

            </div>
            <div class="links">
                <a href="#" @onclick="OnForgotPasswordClick">Quên Mật Khẩu?</a>

                <a href="#">Đăng ký</a>
            </div>
        </EditForm>
    </div>
</body>





@code {
    private LoginModel loginModel = new LoginModel();
    private bool isProcessing;
    private string errorMessage;
    private string account;
    private string pass;
    HttpClient _http = new HttpClient();

    public async Task LoginAccount()
    {
        _localstorage.ClearAsync();
        isProcessing = true;
        errorMessage = null;

        try
        {

            var login = await _http.PostAsJsonAsync("https://localhost:7211/api/Login/Login", loginModel);

            if (login.IsSuccessStatusCode)
            {
                var response = await login.Content.ReadFromJsonAsync<LoginResponse>();

                if (response != null && !string.IsNullOrEmpty(response.Token))
                {
                    await _localstorage.SetItemAsync("authToken", response.Token);
                    _navi.NavigateTo("/customer-profilee");
                }
                else
                {
                    errorMessage = "Token không hợp lệ";
                }
            }
            else
            {
                errorMessage = "Thông tin đăng nhập không chính xác";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Có lỗi xảy ra: {ex.Message}";
        }
        isProcessing = false;
    }
    private void OnForgotPasswordClick()
    {
        _navi.NavigateTo("/forgot-password");
    }
    public class LoginResponse
    {
        public string Token { get; set; }
    }
    public class LoginModel
    {
        public string EmailorPhone { get; set; }  
        public string Password { get; set; }      
    }
}