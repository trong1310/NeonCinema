@page "/login"
@using Newtonsoft.Json
@using System.Text.Json
@using System.IdentityModel.Tokens.Jwt
@using NeonCinema_Application.DataTransferObject.Utilities
@inject NavigationManager _navi
@inject Blazored.LocalStorage.ILocalStorageService _localStorage
<EditForm Model="@loginModel" >
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <div class=" d-flex justify-content-center">
             
            <ul class="nav nav-tabs text-uppercase tab-information" style="background-color:darkred ;align-items: center ;height: 50px; width: 50% ; margin-bottom:10px">
                <li class="active text-center " style="width: 50%; ">
                    <a class=" text-decoration-none  text-white " href="login" data-toggle="tab" style="font-size : 20px">
                        Đăng nhập
                    </a>
                </li>
                <li style="width: 50%" class="text-center">
                    <a class="text-decoration-none text-white" href="#register" data-toggle="tab" style="font-size : 20px">
                        Đăng ký
                    </a>
                </li>
            </ul>
        </div>
        <div class="mb-3 d-flex justify-content-center">
            <InputText id="emailOrPhone" class="form-control" @bind-Value="loginModel.EmailOrPhone" placeholder="Nhập email hoặc số điện thoại" style="align-items: center ;height: 48px; width: 45% ; margin-bottom:10px" />
            <ValidationMessage For="@(() => loginModel.EmailOrPhone)" />
        </div>

        <div class="mb-3 d-flex justify-content-center">
            <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" placeholder="Nhập mật khẩu" style="align-items: center ;height: 48px; width: 45% ; margin-bottom:10px" />
            <ValidationMessage For="@(() => loginModel.Password)" />
        </div>

        <div class="d-flex justify-content-center"style="height : 70px ">
            <button onclick="@HandleLogin()" class="btn btn-primary" style="height : 50px ; font-size : 18px">Đăng nhập</button>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }
    </div>
</EditForm>

@code {
    private LoginRequest loginModel = new LoginRequest();
    private string errorMessage;
    HttpClient http = new HttpClient();
    private string emailOrPhone;
    private string pass;

    private async Task HandleLogin()
    {
        loginModel.EmailOrPhone = emailOrPhone;
        loginModel.Password = pass;
        var result = await http.PostAsJsonAsync("https://localhost:7211/api/Login/Login",loginModel);
        var content = await result.Content.ReadAsStringAsync();
        var handler = new JwtSecurityTokenHandler().ReadJwtToken(content);
        // lay thong tin u token
        var claim = handler.Claims;
        var name = claim.FirstOrDefault(x => x.Type == "name")?.Value;
        var role = claim.FirstOrDefault(x => x.Type == "role")?.Value;
        var email = claim.FirstOrDefault(x => x.Type == "email")?.Value;
        var phone = claim.FirstOrDefault(x => x.Type == "phone")?.Value;
        await _localStorage.SetItemAsync("name", name.Trim());
        await _localStorage.SetItemAsync("role", role.Trim());
        await _localStorage.SetItemAsync("email", email.Trim());
        await _localStorage.SetItemAsync("phone", phone.Trim());
        _navi.NavigateTo("/");
    }
}
