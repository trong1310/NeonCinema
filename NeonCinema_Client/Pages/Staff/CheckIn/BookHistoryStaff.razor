@page "/booking-history-staff"
@using NeonCinema_Application.DataTransferObject.BookingHistory
@using NeonCinema_Client.Data.IServices.BookHistory
@inject IHistoryService HistoryService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject HttpClient _HttpClient
@layout LayoutStaff
<script src="~/js/History.js"></script>
@if (isLoading)
{
    <div class="loading-overlay">
        <p align="center"><LottieAnimation Path="/json/Loading_Animation.json" Style="width: 100px; height: 100px;" Loop="true" /></p>
    </div>
}
else
{
    <h3 class="text-center text-secondary-emphasis mt-5">Lịch Sử Đặt Vé</h3>
    <div class="container-fluid mt-4">
        <div class="row align-items-center mb-4">
            <!-- Tìm kiếm và lọc -->
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" @bind-value="searchUserName" @bind-value:event="oninput" placeholder="Tìm kiếm theo tên người dùng" class="form-control shadow-sm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                    <input type="date" @bind="filterDate" class="form-control shadow-sm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-barcode"></i></span>
                    <input type="text" @bind-value="filterBillCode" @bind-value:event="oninput" placeholder="Lọc theo mã hóa đơn" class="form-control shadow-sm" />
                </div>
            </div>
        </div>

        <div class="row">
            @if (FilteredBills.Any())
            {
                @foreach (var bill in FilteredBills)
                {
                    <div class="col-md-6 mb-4">
                        <div class="card shadow border-0 rounded-lg">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <!-- QR Code -->
                                    <img src="https://api.qrserver.com/v1/create-qr-code/?size=120x120&data=@GenerateQRCodeData(bill)" class="qr-code" alt="QR Code">
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <h5 class="card-title font-weight-bold">Mã Hóa Đơn: @bill.BillCode</h5>
                                        <p>Người dùng: <span class="text-primary">@bill.UserName</span></p>
                                        <p>Nhân viên xử lý: <span class="text-info">@bill.StaffName</span></p>
                                        <p>Ngày hóa đơn: @bill.BillDate.ToString("dd/MM/yyyy")</p>
                                        <p>Tổng tiền: <span class="text-success font-weight-bold">@bill.TotalPrice.ToString("C0")</span></p>
                                        <button class="btn btn-detail" @onclick="(() => ShowDetail(bill))">
                                            <i class="fas fa-info-circle"></i> Chi tiết
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12 text-center">
                    <p class="text-muted">Không tìm thấy hóa đơn nào!</p>
                </div>
            }
        </div>
    </div>

    @if (selectedBill != null)
    {
        <div class="modal show fade" tabindex="-1" style="display: block; margin-top: 100px;" aria-hidden="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Chi Tiết Hóa Đơn</h5>
                        <button type="button" class="btn-close" @onclick="CloseDetail"></button>
                    </div>
                    <div class="modal-body">
                        <h4>Thông Tin Hóa Đơn</h4>
                        <p><b>Mã Hóa Đơn:</b> @selectedBill.BillCode</p>
                        <p><b>Khách Hàng:</b> @selectedBill.UserName</p>
                        <p><b>Nhân viên xử lý:</b> @selectedBill.StaffName</p>
                        <p><b>Tên Rạp:</b> @selectedBill.TheaterName</p>
                        <p><b>Địa Chỉ Rạp:</b> @selectedBill.TheaterAddress</p>

                        <h4 class="mt-4">Thông Tin Vé</h4>
                        @if (selectedBill.Tickets.Any())
                        {
                            @foreach (var ticket in selectedBill.Tickets)
                            {
                                <div class="ticket-info mb-3 border rounded p-3">
                                    <p><b>Phim:</b> @ticket.MovieName</p>
                                    <p><b>Ngày Chiếu:</b> @ticket.ShowDate.ToString("dd/MM/yyyy")</p>
                                    <p><b>Giờ Chiếu:</b> @ticket.StartTime.ToString(@"hh\:mm") - @ticket.EndTime.ToString(@"hh\:mm")</p>
                                    <p><b>Ghế:</b> @ticket.SeatNumber</p>
                                    <p><b>Phòng:</b> @ticket.Room</p>
                                    <p><b>Giá Vé:</b> @ticket.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</p>
                                </div>
                            }
                        }
                        else
                        {
                            <p>Không có thông tin vé.</p>
                        }

                        <h4 class="mt-4">Thông Tin Combo</h4>
                        @if (selectedBill.Combos.Any())
                        {
                            @foreach (var combo in selectedBill.Combos)
                            {
                                <p>@combo.ComboName - Số Lượng: @combo.Quantity - Giá: @combo.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</p>
                            }
                        }
                        else
                        {
                            <p>Không có combo.</p>
                        }

                        <div class="mt-4 text-center">
                            <h4>Quét QR Để Xem Chi Tiết</h4>
                            <img src="https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=@GenerateQRCodeData(selectedBill)" alt="QR Code">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" @onclick="DownloadInvoice">Tải Hóa Đơn PDF</button>
                        <button class="btn btn-secondary" @onclick="CloseDetail">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }
}

@code {
    private List<BillHistoryDTO> billHistory = new();
    private BillHistoryDTO? selectedBill = null;
    private string searchUserName = "";
    private string filterBillCode = "";
    private DateTime? filterDate;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        billHistory = await HistoryService.GetAllBillHistoryAsync();
        StateHasChanged(); // Cập nhật giao diện để hiển thị loading
        await Task.Delay(2000); // Tạm dừng trong 2 giây
        isLoading = false; // Kết thúc trạng thái đang tải
    }

    private void ShowDetail(BillHistoryDTO bill)
    {
        selectedBill = bill;
    }

    private void CloseDetail()
    {
        selectedBill = null;
    }

    private async Task DownloadInvoice()
    {
        if (selectedBill != null)
        {
            try
            {
                // Ensure proper API URL
                var response = await _HttpClient.GetAsync($"api/Resources/generate-invoice-pdf?billId={selectedBill.BillID}");

                if (response.IsSuccessStatusCode)
                {
                    // Read file bytes from response
                    var fileBytes = await response.Content.ReadAsByteArrayAsync();

                    // Trigger download using JavaScript
                    await JSRuntime.InvokeVoidAsync("downloadFile", $"Invoice_{selectedBill.BillCode}.zip", fileBytes, "application/zip");
                }
                else
                {
                    Console.WriteLine($"API Error: {response.StatusCode} - {response.ReasonPhrase}");
                    await JSRuntime.InvokeVoidAsync("alert", $"Unable to download invoice: {response.ReasonPhrase}");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Exception: {ex.Message}");
                await JSRuntime.InvokeVoidAsync("alert", $"An error occurred while downloading the invoice. Please try again later.");
            }
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "No bill selected.");
        }
    }



    private string GenerateQRCodeData(BillHistoryDTO bill)
    {
        return $"Mã Hóa Đơn: {bill.BillCode}, Người Dùng: {bill.UserName}, Tổng Tiền: {bill.TotalPrice:C0}, Ngày: {bill.BillDate:dd/MM/yyyy}";
    }

    private IEnumerable<BillHistoryDTO> FilteredBills =>
        billHistory.Where(b =>
            (string.IsNullOrEmpty(searchUserName) || b.UserName?.Contains(searchUserName, StringComparison.OrdinalIgnoreCase) == true) &&
            (string.IsNullOrEmpty(filterBillCode) || b.BillCode.ToString()?.Contains(filterBillCode, StringComparison.OrdinalIgnoreCase) == true) &&
            (!filterDate.HasValue || b.BillDate.Date == filterDate.Value.Date)
        );
}

<script>
    function downloadFile(fileName, bytes, mimeType) {
        const blob = new Blob([new Uint8Array(bytes)], { type: mimeType });
        const link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.download = fileName;
        link.click();
    }
</script>

<style>
    .btn-detail {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #ffc107; /* Màu nền chính */
        color: #333; /* Màu chữ */
        border: none;
        border-radius: 10px;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        cursor: pointer;
    }

        .btn-detail i {
            margin-right: 8px; /* Khoảng cách giữa biểu tượng và chữ */
            font-size: 18px;
        }

        .btn-detail:hover {
            background-color: #e0a800; /* Màu nền khi hover */
            color: white; /* Màu chữ khi hover */
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px); /* Hiệu ứng di chuyển lên */
        }

        .btn-detail:active {
            background-color: #d39e00; /* Màu nền khi nhấn */
            transform: translateY(0); /* Reset hiệu ứng */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

    .modal-dialog {
        display: flex;
        justify-content: center;
        align-items: center;
        height: auto; /* Chiều cao của toàn bộ cửa sổ */
        margin: auto; /* Loại bỏ margin mặc định */
    }

    .modal-content {
        border-radius: 10px; /* Bo góc modal */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25); /* Hiệu ứng đổ bóng */
        padding: 20px;
    }

    .modal-header {
        position: relative;
        padding: 15px;
        border-bottom: 1px solid #ddd;
        background-color: #fff;
        z-index: 1051;
    }

    .modal-body {
        max-height: 70vh; /* Giới hạn chiều cao nội dung */
        overflow-y: auto; /* Thêm cuộn dọc nếu nội dung quá dài */
        padding: 15px;
    }

    .ticket-card-container {
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        background-color: #f8f9fa;
    }

    .ticket-card {
        background: #fff;
        border-radius: 15px;
        padding: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        width: 100%;
        margin-bottom: 10px;
    }

    .ticket-header {
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
    }

    .ticket-movie-info {
        font-size: 14px;
        line-height: 1.4;
        color: #333;
    }

    .ticket-header h5 {
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .btn-close {
        background: transparent;
        border: none;
    }

    body {
        font-family: 'Roboto', sans-serif;
    }

    .card {
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .btn-detail {
        background-color: #ffc107;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        cursor: pointer;
        transition: 0.3s;
    }

        .btn-detail:hover {
            background-color: #e0a800;
            color: white;
            transform: scale(1.05);
        }

    .modal-dialog {
        max-width: 800px;
        margin: 30px auto;
    }

    .modal-content {
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25);
    }

    .modal-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #ddd;
    }

    .modal-body {
        padding: 20px;
        background-color: #ffffff;
    }

    .btn-close {
        background: transparent;
        border: none;
    }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>

