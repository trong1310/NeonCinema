@page "/booking-history-staff"

@using NeonCinema_Application.DataTransferObject.BookingHistory
@using NeonCinema_Client.Data.IServices.BookHistory
@using System.Net.NetworkInformation
@using Microsoft.AspNetCore.Authorization
@layout LayoutStaff
@inject IHistoryService HistoryService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject HttpClient _HttpClient

@attribute [Authorize(Roles = "Admin,Staff")]

<!-- QuaggaJS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/quagga/0.12.1/quagga.min.js"></script>
<!-- File JS tùy chỉnh của bạn -->
<script src="/js/QuaggaScanner.js"></script>

@if (isLoading)
{
    <div class="loading-overlay">
        <p align="center">
            <!-- Tùy bạn dùng LottieAnimation hay spinner -->
            <LottieAnimation Path="/json/Loading_Animation.json"
                             Style="width: 100px; height: 100px;"
                             Loop="true" />
        </p>
    </div>
}
else
{
    <h3 class="text-center text-secondary-emphasis mt-5">Lịch Sử Đặt Vé</h3>

    <!-- NÚT QUÉT BARCODE -->
    <div class="text-center mb-4">
        <button class="btn btn-success" @onclick="OpenScanner">
            <i class="fas fa-camera"></i> Quét Mã Barcode
        </button>
    </div>

    <div class="container-fluid mt-4">
        <!-- Hàng chứa tất cả các trường lọc và tìm kiếm trên một dòng -->
        <div class="row align-items-center mb-4">
            <!-- Tìm kiếm theo Tên người dùng -->
            <div class="col-md-3">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" @bind-value="searchUserName"
                           @bind-value:event="oninput"
                           placeholder="Tìm kiếm theo tên người dùng"
                           class="form-control shadow-sm" />
                </div>
            </div>
            <!-- Lọc theo trạng thái -->
            <div class="col-md-2">
                <div class="input-group">
                    <label class="input-group-text" for="filterStatus"><i class="fas fa-filter"></i></label>
                    <select id="filterStatus" @bind="filterStatus" class="form-select shadow-sm">
                        <option value="">Tất cả trạng thái</option>
                        <option value="checkin">Đợi Check-in</option>
                        <option value="paid">Đã Check-in</option>
                    </select>
                </div>
            </div>
            <!-- Lọc ngày bắt đầu -->
            <div class="col-md-2">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                    <input type="date" @bind="filterStartDate"
                           class="form-control shadow-sm" placeholder="Từ ngày" />
                </div>
            </div>
            <!-- Lọc ngày kết thúc -->
            <div class="col-md-2">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                    <input type="date" @bind="filterEndDate"
                           class="form-control shadow-sm" placeholder="Đến ngày" />
                </div>
            </div>
            <!-- Lọc theo mã hóa đơn -->
            <div class="col-md-3">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-barcode"></i></span>
                    <input type="text" @bind-value="filterBillCode"
                           @bind-value:event="oninput"
                           placeholder="Lọc theo mã hóa đơn"
                           class="form-control shadow-sm" />
                </div>
            </div>
        </div>

        <!-- Danh sách hoá đơn -->
        <div class="row">
            @if (PagedBills.Any())
            {
                @foreach (var bill in PagedBills)
                {
                    <div class="col-md-6 mb-4">
                        <div class="card shadow border-0 rounded-lg">
                            <div class="row g-0">
                                <div class="col-md-4 d-flex justify-content-center align-items-center">
                                    <!-- Barcode BillCode -->
                                    <img src="https://bwipjs-api.metafloor.com/?bcid=code128&text=@GenerateBarcodeData(bill)&scale=1.5&includetext=true"
                                         alt="Barcode" />
                                </div>
                                <div class="col-md-8">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <h5 class="card-title font-weight-bold">
                                                Mã Hóa Đơn: @bill.BillCode
                                            </h5>
                                            <!-- Trạng thái hiển thị màu -->
                                            <span class="@GetStatusBadgeClass(bill.Status)">
                                                @GetVietnameseStatus(bill.Status)
                                            </span>
                                        </div>

                                        <p>Người dùng: <span class="text-primary">@bill.UserName</span></p>
                                        <p>Nhân viên xử lý: <span class="text-info">@bill.StaffName</span></p>
                                        <p>Ngày hóa đơn: @bill.BillDate.ToString("dd/MM/yyyy")</p>

                                        <p>
                                            Tổng tiền:
                                            <span class="text-success font-weight-bold">
                                                @bill.TotalPrice.ToString("C0")
                                            </span>
                                        </p>
                                        <button class="btn btn-detail" @onclick="(() => ShowDetail(bill))">
                                            <i class="fas fa-info-circle"></i> Chi tiết
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12 text-center">
                    <p class="text-muted">Không tìm thấy hóa đơn nào!</p>
                </div>
            }
        </div>

        <!-- PHÂN TRANG -->
        <div class="d-flex align-items-center justify-content-center mt-4 pagination-container">
            <nav aria-label="pagination" class="shadow-sm">
                <ul class="pagination pagination-md">
                    <!-- Nút Về Đầu -->
                    <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                        <button class="page-link"
                                @onclick="GotoFirst"
                                aria-label="First">
                            <span aria-hidden="true">
                                <i class="fas fa-angle-double-left"></i>
                            </span>
                        </button>
                    </li>

                    <!-- Nút Trang Trước -->
                    <li class="page-item @(pageNumber == 1 ? "disabled" : "")">
                        <button class="page-link"
                                @onclick="PrevPage"
                                aria-label="Previous">
                            <span aria-hidden="true">
                                <i class="fas fa-chevron-left"></i>
                            </span>
                        </button>
                    </li>

                    <!-- Danh sách số trang (có thể hiển thị "...") -->
                    @foreach (var p in GetPageRange())
                    {
                        if (p == 0)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }
                        else
                        {
                            <li class="page-item @(pageNumber == p ? "active" : "")">
                                <button class="page-link"
                                        @onclick="() => GotoPage(p)">
                                    @p
                                </button>
                            </li>
                        }
                    }

                    <!-- Nút Trang Sau -->
                    <li class="page-item @(pageNumber == TotalPages ? "disabled" : "")">
                        <button class="page-link"
                                @onclick="NextPage"
                                aria-label="Next">
                            <span aria-hidden="true">
                                <i class="fas fa-chevron-right"></i>
                            </span>
                        </button>
                    </li>

                    <!-- Nút Về Cuối -->
                    <li class="page-item @(pageNumber == TotalPages ? "disabled" : "")">
                        <button class="page-link"
                                @onclick="GotoLast"
                                aria-label="Last">
                            <span aria-hidden="true">
                                <i class="fas fa-angle-double-right"></i>
                            </span>
                        </button>
                    </li>
                </ul>
            </nav>
        </div>

        <div class="text-center mt-2 text-secondary small">
            Trang @pageNumber / @TotalPages (Tổng @TotalRecords hóa đơn)
        </div>
    </div>

    <!-- Modal chi tiết hoá đơn -->
    @if (selectedBill != null)
    {
        <div class="modal show fade"
             tabindex="-1"
             style="display: block; margin-top: 100px;"
             aria-hidden="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Chi Tiết Hóa Đơn</h5>
                        <button type="button"
                                class="btn-close"
                                @onclick="CloseDetail"></button>
                    </div>
                    <div class="modal-body">
                        <h4>Thông Tin Hóa Đơn</h4>
                        <p><b>Mã Hóa Đơn:</b> @selectedBill.BillCode</p>
                        <p><b>Khách Hàng:</b> @selectedBill.UserName</p>
                        <p><b>Nhân viên xử lý:</b> @selectedBill.StaffName</p>
                        <p><b>Tên Rạp:</b> @selectedBill.TheaterName</p>
                        <p><b>Địa Chỉ Rạp:</b> @selectedBill.TheaterAddress</p>
                        <p>
                            <b>Trạng Thái Hóa Đơn:</b>
                            <span class="@GetStatusBadgeClass(selectedBill.Status)">
                                @GetVietnameseStatus(selectedBill.Status)
                            </span>
                        </p>

                        <h4 class="mt-4">Thông Tin Vé</h4>
                        @if (selectedBill.Tickets.Any())
                        {
                            @foreach (var ticket in selectedBill.Tickets)
                            {
                                <div class="ticket-info mb-3 border rounded p-3">
                                    <p><b>Phim:</b> @ticket.MovieName</p>
                                    <p><b>Ngày Chiếu:</b> @ticket.ShowDate.ToString("dd/MM/yyyy")</p>
                                    <p><b>Giờ Chiếu:</b> @ticket.StartTime.ToString(@"hh\:mm") - @ticket.EndTime.ToString(@"hh\:mm")</p>
                                    <p><b>Ghế:</b> @ticket.SeatNumber</p>
                                    <p><b>Phòng:</b> @ticket.Room</p>
                                    <p><b>Giá Vé:</b> @ticket.Price.ToString("C0")</p>
                                </div>
                            }
                        }
                        else
                        {
                            <p>Không có thông tin vé.</p>
                        }

                        <h4 class="mt-4">Thông Tin Combo</h4>
                        @if (selectedBill.Combos.Any())
                        {
                            @foreach (var combo in selectedBill.Combos)
                            {
                                <p>@combo.ComboName - Số Lượng: @combo.Quantity - Giá: @combo.Price.ToString("C0")</p>
                            }
                        }
                        else
                        {
                            <p>Không có combo.</p>
                        }

                        <div class="mt-4 text-center">
                            <h4>Quét Barcode Để Xem Chi Tiết</h4>
                            <img src="https://bwipjs-api.metafloor.com/?bcid=code128&text=@GenerateBarcodeData(selectedBill)&scale=2&includetext=true"
                                 alt="Barcode" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" @onclick="DownloadInvoice">
                            Check in
                        </button>
                        <button class="btn btn-secondary" @onclick="CloseDetail">
                            Đóng
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }

    <!-- MODAL CAMERA QUÉT BARCODE -->
    @if (showScanner)
    {
        <div class="modal show fade" style="display:block" tabindex="-1">
            <div class="modal-dialog modal-md">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5>Quét Barcode</h5>
                        <button type="button" class="btn-close" @onclick="CancelScan"></button>
                    </div>
                    <div class="modal-body text-center">
                        <button class="btn btn-primary mb-3" @onclick="StartScan">
                            <i class="fas fa-play"></i> Bắt đầu quét
                        </button>
                        <div>
                            <!-- div hiển thị video QuaggaJS -->
                            <div id="quagga-video"
                                 style="width:auto; height:auto; border:1px solid #ccc;">
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(scannedResult))
                        {
                            <div class="alert alert-success mt-3">
                                <strong>Đã quét được mã:</strong> @scannedResult
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger" @onclick="CancelScan">
                            <i class="fas fa-times"></i> Hủy
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }
}

@code {
    private List<BillHistoryDTO> billHistory = new();
    private BillHistoryDTO? selectedBill = null;

    // Biến lọc
    private string searchUserName = "";
    private string filterBillCode = "";
    private DateTime? filterStartDate;
    private DateTime? filterEndDate;
    private string filterStatus = "";

    // Loading
    private bool isLoading = true;

    // Barcode
    private bool showScanner = false;
    private string scannedResult = "";

    // Phân trang
    private int pageNumber = 1;
    private int pageSize = 6;
    private int[] pageSizeOptions = new[] { 5, 10, 20, 50 };

    // ===============================
    // Tính toán số trang (phân trang)
    // ===============================
    private int TotalRecords => FilteredAndSortedBills.Count();
    private int TotalPages => (int)Math.Ceiling((double)TotalRecords / pageSize);

    private IEnumerable<BillHistoryDTO> FilteredAndSortedBills =>
        billHistory
            .Where(b =>
                (string.IsNullOrEmpty(searchUserName)
                 || b.UserName?.Contains(searchUserName, StringComparison.OrdinalIgnoreCase) == true)
                && (string.IsNullOrEmpty(filterBillCode)
                 || b.BillCode.ToString()?.Contains(filterBillCode, StringComparison.OrdinalIgnoreCase) == true)
                && (!filterStartDate.HasValue || b.BillDate.Date >= filterStartDate.Value.Date)
                && (!filterEndDate.HasValue || b.BillDate.Date <= filterEndDate.Value.Date)
                && (string.IsNullOrEmpty(filterStatus) || b.Status.Equals(filterStatus, StringComparison.OrdinalIgnoreCase))
            )
            .OrderByDescending(b => b.BillDate);

    private IEnumerable<BillHistoryDTO> PagedBills =>
        FilteredAndSortedBills
            .Skip((pageNumber - 1) * pageSize)
            .Take(pageSize);

    protected override async Task OnInitializedAsync()
    {
        // Giả lập loading
        isLoading = true;

        // Lấy tất cả bill
        var allBills = await HistoryService.GetAllBillHistoryAsync();

        // Chỉ hiển thị Bill checkin & paid
        billHistory = allBills
            .Where(b =>
                b.Status?.Equals("checkin", StringComparison.OrdinalIgnoreCase) == true
             || b.Status?.Equals("paid", StringComparison.OrdinalIgnoreCase) == true
            )
            .ToList();

        await Task.Delay(800); // Giả lập loading
        isLoading = false;
    }

    // ---------------------------
    // PHƯƠNG THỨC PHÂN TRANG
    // ---------------------------
    private void GotoPage(int p) => pageNumber = p;
    private void GotoFirst() => pageNumber = 1;
    private void GotoLast() => pageNumber = TotalPages;

    private void PrevPage()
    {
        if (pageNumber > 1)
            pageNumber--;
    }

    private void NextPage()
    {
        if (pageNumber < TotalPages)
            pageNumber++;
    }

    private List<int> GetPageRange()
    {
        var pages = new List<int>();

        if (TotalPages <= 7)
        {
            for (int i = 1; i <= TotalPages; i++)
                pages.Add(i);
        }
        else
        {
            int current = pageNumber;
            int firstPage = 1;
            int lastPage = TotalPages;

            pages.Add(firstPage);

            if (current - 2 > 2)
                pages.Add(0); // 0 => "..."

            int start = Math.Max(current - 1, 2);
            int end = Math.Min(current + 1, lastPage - 1);

            for (int i = start; i <= end; i++)
                pages.Add(i);

            if (current + 2 < lastPage)
                pages.Add(0); // 0 => "..."

            pages.Add(lastPage);
        }

        return pages;
    }

    // -----------------------------------------
    private string GetVietnameseStatus(string? status)
    {
        if (string.IsNullOrWhiteSpace(status)) return "Không xác định";

        return status.ToLower() switch
        {
            "checkin" => "Đợi Check-in",
            "paid" => "Đã Check-in",
            _ => "Không xác định"
        };
    }

    private string GetStatusBadgeClass(string? status)
    {
        if (string.IsNullOrWhiteSpace(status))
            return "badge bg-secondary";

        return status.ToLower() switch
        {
            "checkin" => "badge bg-danger",
            "paid" => "badge bg-success",
            _ => "badge bg-secondary"
        };
    }

    private void ShowDetail(BillHistoryDTO bill) => selectedBill = bill;
    private void CloseDetail() => selectedBill = null;

    private void OpenScanner()
    {
        showScanner = true;
        scannedResult = "";
    }

    private void CloseScanner()
    {
        showScanner = false;
        JSRuntime.InvokeVoidAsync("stopQuagga");
    }

    private async Task StartScan()
    {
        // DotNetObjectReference để Quagga gọi ngược OnQuaggaScanned
        await JSRuntime.InvokeVoidAsync("startQuaggaScan", DotNetObjectReference.Create(this));
    }

    private void CancelScan()
    {
        showScanner = false;
        JSRuntime.InvokeVoidAsync("stopQuagga");
        StateHasChanged();
    }

    [JSInvokable]
    public async Task OnQuaggaScanned(string data)
    {
        scannedResult = data;
        // Ở ví dụ này BillCode là số. Tùy vào logic của bạn, có thể thay đổi.
        if (long.TryParse(data, out long codeValue))
        {
            var foundBill = billHistory.FirstOrDefault(b => b.BillCode == codeValue);
            if (foundBill != null)
            {
                selectedBill = foundBill;
                showScanner = false; // Đóng modal quét
                StateHasChanged();
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", $"Không tìm thấy BillCode = {codeValue}");
            }
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Giá trị quét không phải số: {data}");
        }
    }

    private async Task DownloadInvoice()
    {
        if (selectedBill is null)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Không có hoá đơn để tải!");
            return;
        }

        try
        {
            // Nếu bill đang checkin => PUT api/History/updateStatusToPaid/{billId}
            if (selectedBill.Status?.Equals("checkin", StringComparison.OrdinalIgnoreCase) == true)
            {
                var updateResponse = await _HttpClient.PutAsync(
                    $"api/History/updateStatusToPaid/{selectedBill.BillID}",
                    null
                );
                if (updateResponse.IsSuccessStatusCode)
                {
                    selectedBill.Status = "paid";
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("alert",
                        $"Không thể chuyển Bill sang paid (HTTP {updateResponse.StatusCode}).");
                    return;
                }
            }

            // Gọi API tải hoá đơn
            var downloadResponse = await _HttpClient.GetAsync(
                $"api/Resources/generate-invoice-pdf?billId={selectedBill.BillID}"
            );
            if (downloadResponse.IsSuccessStatusCode)
            {
                var fileBytes = await downloadResponse.Content.ReadAsByteArrayAsync();
                await JSRuntime.InvokeVoidAsync("downloadFile",
                    $"Invoice_{selectedBill.BillCode}.zip",
                    fileBytes,
                    "application/zip");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert",
                    $"Lỗi tải hoá đơn: {downloadResponse.ReasonPhrase} (HTTP {downloadResponse.StatusCode}).");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Có lỗi khi tải hoá đơn: {ex.Message}");
        }
    }

    // Hàm sinh chuỗi Barcode
    private string GenerateBarcodeData(BillHistoryDTO bill) => bill.BillCode.ToString();
}


<style>
    .btn-detail {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #ffc107;
        color: #333;
        border: none;
        border-radius: 10px;
        padding: 10px 20px;
        font-size: 16px;
        font-weight: bold;
        transition: all 0.3s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        cursor: pointer;
    }

        .btn-detail i {
            margin-right: 8px;
            font-size: 18px;
        }

        .btn-detail:hover {
            background-color: #e0a800;
            color: white;
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

        .btn-detail:active {
            background-color: #d39e00;
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

    .modal-dialog {
        display: flex;
        justify-content: center;
        align-items: center;
        height: auto;
        margin: auto;
        max-width: 800px;
    }

    .modal-content {
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25);
        padding: 20px;
    }

    .modal-header {
        position: relative;
        padding: 15px;
        border-bottom: 1px solid #ddd;
        background-color: #fff;
    }

    .modal-body {
        max-height: 70vh;
        overflow-y: auto;
        padding: 15px;
    }

    .btn-close {
        background: transparent;
        border: none;
    }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    #quagga-video {
        transform: scaleX(1);
        -webkit-transform: scaleX(1);
    }

    .badge {
        padding: 0.4em 0.75em;
        font-size: 0.9rem;
    }

        .badge.bg-danger {
            background-color: #dc3545 !important; /* Đỏ */
        }

        .badge.bg-success {
            background-color: #28a745 !important; /* Xanh */
        }

    /* Phần pagination */
    .pagination-container {
        margin-bottom: 1rem;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    .pagination .page-link {
        color: #0d6efd;
        border: none;
        margin: 0 2px;
    }

    .pagination .page-item.disabled .page-link {
        color: #aaa;
    }
</style>
