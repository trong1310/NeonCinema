@page "/list-promotion-admin"
@using NeonCinema_Application.DataTransferObject.Promotions
@using NeonCinema_Application.DataTransferObject.User
@using NeonCinema_Client.Data.IServices.Promotion
@using NeonCinema_Client.DataTransferObject.Users
@using NeonCinema_Domain.Database.Entities
@using NeonCinema_Infrastructure.Extention.Utilis
@layout LayoutAdmin
@inject NavigationManager _nav
@inject IPromotionServices _prosv
@inject IJSRuntime JS


<div>
	<div class="col-12 p-5">
		@* <button class="btn" style="display: inline;"><i class="fa-solid fa-arrow-left"></i></button> *@
		<h6 style="display: inline;">Danh sách khuyến mại</h6>
		<hr>
		<div class="row boxfilter p-2">
			<div class="col-6">
				<div class="form-group">
					<label for="Search">Tìm kiếm</label>
					<input type="text" class="form-control" style="width: 500px;" @bind="searchName" placeholder="Search by name" @oninput="FilterRecords" />
				</div>
				<div class="form-check">
					<div class="row mt-3">
						<div class="col-2">
							<input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadio1"
								   value="option1" checked>
							<label class="form-check-label" for="exampleRadio1">
								Lựa chọn 1
							</label>
						</div>
						<div class="col-2">
							<input class="form-check-input" type="radio" name="exampleRadios" id="exampleRadio2"
								   value="option2">
							<label class="form-check-label" for="exampleRadio2">
								Lựa chọn 2
							</label>
						</div>
					</div>
				</div>
			</div>
			<div class="col-3">
				<label for="StartDate">Ngày bắt đầu</label>
				<input type="datetime-local" class="form-control" @bind="startDate" @oninput="FilterRecords" />
			</div>
			<div class="col-3">
				<label for="EndDate">Ngày kết thúc</label>
				<input type="datetime-local" class="form-control" @bind="endDate" @oninput="FilterRecords" />
			</div>
		</div>
		<div class="row mt-5">
			<div class="col-11"></div>
			<div class="col-1">
				<button @onclick="OpenModal1" class="btn"><i class="fa-solid fa-square-plus fa-2xl" style="color: #00ff88;"></i></button>


				<!-- Modal-->
				<!--Create Promotion-->
				@if (isModalVisible == 1)
				{
					<div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
						<div class="modal-dialog" role="document">
							<div class="modal-content" style="width: 1650px; right: 90%;">
								<div class="modal-header">
									<div class="col-12">
										<div class="row">
											<div class="col-1">
												<button type="button" class="close" @onclick="CloseModal" aria-label="Close">
													<span aria-hidden="true">&times;</span>
												</button>
											</div>
											<div class="col-5">
												<h6>Tạo mã khuyến mại</h6>
											</div>
										</div>

									</div>
								</div>
								<div class="modal-body">
									<div class="col-12 p-3">
										<div class="row">
											<div class="col-5">
												<EditForm Model="@input" OnValidSubmit="OpenModalConfirm1">
													<ChildContent Context="addContext">
														<DataAnnotationsValidator />
														<div class="mb-3">
															<label for="" class="form-label">Tên khuyến mại</label>
															<InputText @bind-Value="inputUpdate.Name" class="form-control" />
														</div>
														<div class="mb-3">
															<label for="" class="form-label">Mã khuyến mại</label>
															<InputText @bind-Value="codegen" class="form-control" readonly />
														</div>
														<div class="mb-3">
															<label for="" class="form-label">Mô tả</label>
															<InputText @bind-Value="input.Description" class="form-control" />
														</div>
														<div class="mb-3">
															<label for="" class="form-label">Phần trăm giảm giá</label>
															<InputNumber @bind-Value="input.DiscountPercentage" class="form-control" readonly="@discountPercentage"/>

																<ValidationMessage For="@(() => input.DiscountPercentage)" />

														</div>
														<div class="mb-3">
															<label for="" class="form-label">Số tiền giảm</label>
															<InputNumber @bind-Value="input.DiscountAmount" class="form-control" readonly="@discountAmount"/>
													
																@* <ValidationMessage For="@(() => input.DiscountAmount)" /> *@
												
														</div>
														<div class="mb-3">
															<label for="" class="form-label">Ngày bắt đầu</label>
															<InputDate @bind-Value="input.StartDate" class="form-control" />
															<ValidationMessage For="@(() => input.StartDate)" />
														</div>
														<div class="mb-3">
															<label for="" class="form-label">Ngày kết thúc</label>
															<InputDate @bind-Value="input.EndDate" class="form-control" />
															<ValidationMessage For="@(() => input.EndDate)" />
														</div>
														<div class="mb-4">
															<InputRadioGroup @bind-Value="IsPercentage">
																<label class="form-label">Theo tiền </label>
																<InputRadio Value="true" class="form-check-input"></InputRadio>
																<label class="form-label">Theo % </label>
																<InputRadio Value="false" class="form-check-input"></InputRadio>
															</InputRadioGroup>
														</div>
														<button type="submit" class="btn btn-primary">Thêm</button>
													</ChildContent>
												</EditForm>
											</div>
											<div class="col-6 offset-1">
												<div class="row">
													<h6>Danh sách khách hàng</h6>
												</div>
												<div class="row">
													<InputText @bind-Value="inputSearchUser" @oninput="OnInputChanged" class="form-control" Placeholder="Tìm kiếm theo tên" />
												</div>
												<div class="row p-1 rounded border mt-2 " style="height:300px; overflow-y: auto;">
													<table class="table">
														<thead style="position: sticky; top: 0; background-color: white;">
															<tr>
																<th><InputCheckbox @bind-Value="selectAll" @oninput="ToggleSelectAll" /> Tất cả</th>
																<th>Tên đầy đủ</th>
																<th>Số điện thoại</th>
																<th>Email</th>
															</tr>
														</thead>
														<tbody>
															@foreach (var item in _lstuser)
															{
																<tr>
																	<td>
																		<InputCheckbox @bind-Value="item.IsSelected" @onchange="UpdateSelectAll" />
																	</td>
																	<td>@item.FullName</td>
																	<td>@item.PhoneNumber</td>
																	<td>@item.Email</td>
																</tr>
															}
														</tbody>
													</table>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>

					if (isModalVisibleConfirm == 1)
					{
						<div class="modal fade show modalConfirm" tabindex="-1" role="dialog" style="display: block;">
							<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="modal-header">
										<div class="col-12">
											<div class="row">
												<div class="col-1">
													<button type="button" class="close" @onclick="CloseModalConfirm" aria-label="Close">
														<span aria-hidden="true">&times;</span>
													</button>
												</div>
												<div class="col-5">
													<h6>Xác nhận</h6>
												</div>
											</div>

										</div>
									</div>
									<div class="modal-body">
										<div class="col-12">
											<div class="row">
												<div class="col-3 offset-3">
													<button style="width: 100px" @onclick="AddPromotion" class="btn btn-primary">Đồng ý</button>
												</div>
												<div class="col-6">
													<button style="width: 100px" @onclick="CloseModalConfirm" class="btn btn-danger">Hủy</button>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					}

					else if (isModalVisibleConfirm == 2)
					{
						<div class="modal fade show modalConfirm" tabindex="-1" role="dialog" style="display: block;">
							<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="p-3">
										<div class="col-12">
											<div class="row">
												<div class="col-1">
													<button type="button" class="close" @onclick="CloseModalConfirm" aria-label="Close">
														<span aria-hidden="true">&times;</span>
													</button>
												</div>
											</div>
											<div class="row">
												<div align="center">
													@if (messageString == "Thêm thành công")
													{
														<div style="width:200px; height:200px">
															<LottieAnimation Path="/json/Ok_Animation.json" Loop="false" />
														</div>
													}

													@if (messageString == "Thêm thất bại")
													{
														<div style="width:200px; height:200px">
															<LottieAnimation Path="/json/Cancel_Animation.json" Loop="false" />
														</div>
													}
												</div>
											</div>
										</div>
									</div>
									<div class="mb-2">
										<div align="center">
											<button style="width: 100px" @onclick="CloseModalConfirm" class="btn btn-primary">Đồng ý</button>
										</div>
									</div>
								</div>
							</div>
						</div>
					}
				}
				else if (isModalVisible == 2)
				{
					<div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
						<div class="modal-dialog" role="document">
							<div class="modal-content" style="width: 1000px; right: 30%;">
								<div class="modal-header">
									<div class="col-12">
										<div class="row">
											<div class="col-1">
												<button type="button" class="close" @onclick="CloseModal" aria-label="Close">
													<span aria-hidden="true">&times;</span>
												</button>
											</div>
											<div class="col-5">
												<h6>Danh sách khách hàng được áp dụng mã</h6>
											</div>
										</div>

									</div>
								</div>
								<div class="modal-body">
									<div class="col-12 p-3">
										<div class="row">
											<div>
												@* <div class="row">
											<InputText @bind-Value="inputSearchUser" @oninput="OnInputChanged" class="form-control" Placeholder="Tìm kiếm theo tên" />
											</div> *@
												<div class="row rounded border mt-2 " style="height:300px; overflow-y: auto;">
													<table class="table">
														<thead style="position: sticky; top: 0; background-color: white;">
															<tr>
																<th>Tên đầy đủ</th>
																<th>Số điện thoại</th>
																<th>Email</th>
															</tr>
														</thead>
														<tbody>
															@foreach (var item in _lstUser)
															{
																<tr>
																	<td>@item.FullName</td>
																	<td>@item.PhoneNumber</td>
																	<td>@item.Email</td>
																</tr>
															}
														</tbody>
													</table>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
				//Comfirm delete
				else if (isModalVisible == 3)
				{
					<div class="modal fade show modalConfirm" tabindex="-1" role="dialog" style="display: block;">
						<div class="modal-dialog" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<div class="col-12">
										<div class="row">
											<div class="col-1">
												<button type="button" class="close" @onclick="CloseModal" aria-label="Close">
													<span aria-hidden="true">&times;</span>
												</button>
											</div>
											<div class="col-5">
												<h6>Xác nhận</h6>
											</div>
										</div>

									</div>
								</div>
								<div class="modal-body">
									<div class="col-12">
										<div class="row">
											<div class="col-3 offset-3">
												<button style="width: 100px" @onclick=" async () => await DeletePromotion(idActive)" class="btn btn-primary">Đồng ý</button>
											</div>
											<div class="col-6">
												<button style="width: 100px" @onclick="BackList" class="btn btn-danger">Hủy</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				}

				else if (isModalVisible == 4)
				{
					<div class="modal fade show" tabindex="-1" role="dialog" style="display: block;">
						<div class="modal-dialog" role="document">
							<div class="modal-content">
								<div class="modal-header">
									<div class="col-12">
										<div class="row">
											<div class="col-1">
												<button type="button" class="close" @onclick="CloseModal" aria-label="Close">
													<span aria-hidden="true">&times;</span>
												</button>
											</div>
											<div class="col-5">
												<h6>Sửa mã khuyến mại</h6>
											</div>
										</div>

									</div>
								</div>
								<div class="modal-body">
									<EditForm Model="@inputUpdate" OnValidSubmit="OpenModalConfirm2">
										<ChildContent Context="editContext">
											<DataAnnotationsValidator />
											<div class="mb-3">
												<label for="" class="form-label">Tên khuyến mại</label>
												<InputText @bind-Value="inputUpdate.Name" class="form-control" />
											</div>
											<div class="mb-3">
												<label for="" class="form-label">Mã khuyến mại</label>
												<InputText @bind-Value="inputUpdate.Code" class="form-control" />
												<ValidationMessage For="@(() => inputUpdate.Code)" />
											</div>
											<div class="mb-3">
												<label for="" class="form-label">Phần trăm giảm giá</label>
												<InputNumber @bind-Value="inputUpdate.DiscountAmount" class="form-control" />
												<ValidationMessage For="@(() => inputUpdate.DiscountAmount)" />
											</div>
											<div class="mb-3">
												<label for="" class="form-label">Ngày bắt đầu</label>
												<InputDate @bind-Value="inputUpdate.StartDate" class="form-control" />
												<ValidationMessage For="@(() => inputUpdate.StartDate)" />
											</div>
											<div class="mb-3">
												<label for="" class="form-label">Ngày kết thúc</label>
												<InputDate @bind-Value="inputUpdate.EndDate" class="form-control" />
												<ValidationMessage For="@(() => inputUpdate.EndDate)" />
											</div>
											<div class="mb-3">
												<label for="" class="form-label">Mô tả</label>
												<InputText @bind-Value="inputUpdate.Description" class="form-control" />
											</div>
											<div class="mb-4">
												<InputRadioGroup @bind-Value="IsPercentage">
													<label class="form-label">Theo tiền </label>
													<InputRadio Value="true" class="form-check-input"></InputRadio>
													<label class="form-label">Theo % </label>
													<InputRadio Value="false" class="form-check-input"></InputRadio>
												</InputRadioGroup>
											</div>
											<button type="submit" class="btn btn-primary">Lưu</button>
										</ChildContent>
									</EditForm>
								</div>
							</div>
						</div>
					</div>
					if (isModalVisibleConfirm == 3)
					{
						<div class="modal fade show modalConfirm" tabindex="-1" role="dialog" style="display: block;">
							<div class="modal-dialog" role="document">
								<div class="modal-content">
									<div class="modal-header">
										<div class="col-12">
											<div class="row">
												<div class="col-1">
													<button type="button" class="close" @onclick="CloseModalConfirm" aria-label="Close">
														<span aria-hidden="true">&times;</span>
													</button>
												</div>
												<div class="col-5">
													<h6>Xác nhận</h6>
												</div>
											</div>

										</div>
									</div>
									<div class="modal-body">
										<div class="col-12">
											<div class="row">
												<div class="col-3 offset-3">
													<button style="width: 100px" @onclick="async () => await UpdatePromotion()" class="btn btn-primary">Đồng ý</button>
												</div>
												<div class="col-6">
													<button style="width: 100px" @onclick="CloseModalConfirm" class="btn btn-danger">Hủy</button>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					}
				}
				<!--End modal-->



			</div>
		</div>
		<div class="row mt-2 table-promotion">
			<table class="table">
				<thead>
					<tr>
						<th>#</th>
						<th>Tên KM</th>
						<th>Mã</th>
						<th>Phần trăm giảm</th>
						<th>Số tiền giảm</th>
						<th>Ngày bắt đầu</th>
						<th>Ngày kết thúc</th>
						<th>Mô tả</th>
						<th>Trạng thái</th>
						<th>Hành động</th>
					</tr>
				</thead>
				<tbody>
					@* @if (filteredPromotions.Any())
					{ *@
					@foreach (var item in _lstpro.Select((value, index) => new { value, index }))
					{
						<tr>
							<td>@(item.index + 1)</td>
							<td>@item.value.Name</td>
							<td>@item.value.Code</td>
							@if (item.value.DiscountPercentage == 0)
							{
								<td>X</td>
							}
							else
							{
								<td>@item.value.DiscountPercentage%</td>
							}
							@if(item.value.DiscountAmount == 0)
							{
								<td>X</td>
							}
							else
							{
								<td>@item.value.DiscountAmount<text>đ</text></td>
							}
							<td>@item.value.StartDate.ToShortDateString()</td>
							<td>@item.value.EndDate.ToShortDateString()</td>
							<td>@item.value.Description</td>
							<td><span class="bg-success text-white rounded">@item.value.Status</span></td>
							<td>
								<button @onclick="async () => await OpenModal2(item.value.ID)" class="btn"><i class="fa-solid fa-eye" style="color: #74C0FC;"></i></button>
								<button @onclick="async () => await OpenModal4(item.value.ID)" class="btn"><i class="fa-solid fa-pen"></i></button>
								<button @onclick="async () => await OpenModal3(item.value.ID)" class="btn"><i class="fa-solid fa-trash-can" style="color: #ff0000;"></i></button>
							</td>
						</tr>
					}
					@* }
					else
					{
					<tr>
					<td colspan="8" class="text-center">Không có bản ghi nào phù hợp.</td>
					</tr>
					} *@
				</tbody>
			</table>
		</div>
	</div>
</div>

<style>
	td {
		text-align: center
	}

	th {
		text-align: center
	}

	.modal {
		top: 10%;
	}

	.modalConfirm {
		top: 30%;
	}
</style>

@code {

	int stt = 1;
	private string inputSearchUser = "";
	private List<PromotionDTO> _lstpro = new List<PromotionDTO>();
	private List<MailPromotionRequest> _lstMail = new List<MailPromotionRequest>();
	private List<CustomerViewModel_Promotion> _lstuser = new List<CustomerViewModel_Promotion>();
	private List<UserDTO> _lstUser = new List<UserDTO>();
	private PromotionCreateRequest input = new PromotionCreateRequest();
	private PromotionDTO inputUpdate = new PromotionDTO();
	private string messageString = null;
	private Guid idActive;
	private bool selectAll = false;

	//Chọn loại giảm giá
	private bool discountPercentage = true;
	private bool discountAmount = false;

	public bool IsPercentage
	{
		get => discountPercentage;
		set
		{
			if (!discountPercentage)
			{
				input.DiscountPercentage = 0;
			}
			else
			{
				input.DiscountAmount = 0;
			}

			discountPercentage = value;
			discountAmount = !value; // Ngược lại với discountPercentage

		}
	}

	//filter
	private string searchName;
	private DateTime? startDate;
	private DateTime? endDate;
	private List<PromotionDTO> filteredPromotions = new List<PromotionDTO>();



	//Gen code
	private string codegen = "";
	private Utilis utl = new Utilis();

	//Modal
	private int isModalVisible = 0;
	private int isModalVisibleConfirm = 0;


	protected override async Task OnInitializedAsync()
	{
		await LoadPromotion();
		/* filteredPromotions = _lstpro; */ // Bắt đầu với tất cả khuyến mãi
		await LoadUser();
		codegen = utl.GenerateCode();
	}

	//Get All promotion
	private async Task LoadPromotion()
	{
		_lstpro = await _prosv.GetPromotionListAsync();
	}

	//Get all user
	private async Task LoadUser()
	{
		var lstus = await _prosv.GetAllUserAsync(inputSearchUser);

		_lstuser = lstus.Select(customer => new CustomerViewModel_Promotion
			{
				ID = customer.ID,
				FullName = customer.FullName,
				PassWord = customer.PassWord,
				PhoneNumber = customer.PhoneNumber,
				Email = customer.Email,
				Gender = customer.Gender,
				Images = customer.Images,
				DateOrBriht = customer.DateOrBriht,
				Adderss = customer.Adderss,
				Status = customer.Status,
				RoleID = customer.RoleID,
				IsSelected = false
			}).ToList();
	}

	private async Task OnInputChanged(ChangeEventArgs e)
	{
		inputSearchUser = e.Value.ToString(); // Cập nhật giá trị tìm kiếm
		await LoadUser();
	}





	private void OpenModal1()
	{
		isModalVisible = 1;

		selectAll = false;
		foreach (var user in _lstuser)
		{
			user.IsSelected = false;
		}
	}

	private void CloseModal()
	{
		isModalVisible = 0;
		messageString = null;
		inputUpdate = new PromotionDTO();
	}

	private void CloseModalConfirm()
	{
		isModalVisibleConfirm = 0;
	}

	private async Task OpenModal2(Guid id)
	{
		isModalVisible = 2;
		_lstUser = await _prosv.GetPUbyProID(id);
	}


	private async Task OpenModal3(Guid id)
	{
		idActive = id;
		isModalVisible = 3;
	}

	private async Task OpenModal4(Guid id)
	{
		idActive = id;
		inputUpdate = await _prosv.GetPromotionByIdAsync(id);
		isModalVisible = 4;
	}

	//Modal confirm
	private async Task OpenModalConfirm1()
	{
		isModalVisibleConfirm = 1;
	}

	private async Task OpenModalConfirm2()
	{
		isModalVisibleConfirm = 2;
	}


	//Add
	public async Task AddPromotion()
	{
		input.ID = Guid.NewGuid();
		input.Code = codegen;
		var check = await _prosv.CreatePromotionAsync(input);

		if (check)
		{
			List<PromotionUserDTO> lstPU = new List<PromotionUserDTO>();

			foreach (var item in GetSelectedUser())
			{
				PromotionUserDTO x = new PromotionUserDTO
					{
						PromotionID = input.ID,
						UserID = item.ID
					};

				lstPU.Add(x);

				MailPromotionRequest mailitem = new MailPromotionRequest
					{
						FullName = item.FullName,
						NamePromotion = "Chưa update",
						ToEmail = item.Email,
						Code = input.Code
					};
				_lstMail.Add(mailitem);
			}

			if (await _prosv.CreatePromotionUserAsync(lstPU))
			{
				await _prosv.SendMailWithTemplateAsync(_lstMail);
				messageString = "Thêm thành công";
			}
			else
			{
				messageString = "Có lỗi khi thêm ưu đãi khách hàng";
			}

			//Mở modal thông báo
			isModalVisibleConfirm = 2;

			//Reset input và list
			input = new PromotionCreateRequest();
			await LoadPromotion();



		}
		else
		{
			messageString = "Thêm thất bại";
		}
	}

	//back
	public void BackList()
	{
		_nav.NavigateTo("/list-promotion-admin");
		CloseModal();
	}


	//Delete
	public async Task DeletePromotion(Guid id)
	{
		var check = await _prosv.DeletePromotionAsync(id);

		if (check)
		{
			_nav.NavigateTo("/list-promotion-admin");
			idActive = Guid.Empty;
		}

		CloseModal();
		await LoadPromotion();
	}

	//Update
	public async Task UpdatePromotion()
	{
		var check = await _prosv.UpdatePromotionAsync(inputUpdate);

		if (check)
		{
			messageString = "Sửa thành công";
			await LoadPromotion();

		}
		else
		{
			messageString = "Sửa thất bại";
		}
	}

	//Select
	// Cập nhật tất cả checkbox trong danh sách khi selectAll thay đổi
	private void ToggleSelectAll()
	{
		foreach (var user in _lstuser)
		{
			user.IsSelected = !selectAll;
		}
	}

	// Cập nhật trạng thái selectAll dựa trên trạng thái của các checkbox trong danh sách
	private void UpdateSelectAll()
	{
		selectAll = _lstuser.All(u => u.IsSelected);
	}

	//Hàm trả về danh sách Id của các mục được chọn
	private List<CustomerViewModel_Promotion> GetSelectedUser()
	{
		return _lstuser.Where(u => u.IsSelected).ToList();
	}

	private void FilterRecords()
	{
		// // Kiểm tra nếu _lstpro là null
		// if (_lstpro == null) return;

		// // Mặc định là hiển thị tất cả nếu không có điều kiện nào
		// filteredPromotions = _lstpro;

		// // Kiểm tra các điều kiện tìm kiếm
		// if (!string.IsNullOrWhiteSpace(searchName))
		// {
		// 	filteredPromotions = filteredPromotions
		// 		.Where(p => p.Description.Contains(searchName, StringComparison.OrdinalIgnoreCase))
		// 		.ToList();
		// }

		// if (startDate.HasValue && endDate.HasValue)
		// {
		// 	// Lọc theo ngày bắt đầu và ngày kết thúc
		// 	filteredPromotions = filteredPromotions
		// 		.Where(p => p.StartDate >= startDate.Value && p.EndDate <= endDate.Value)
		// 		.ToList();
		// }
		// else if (startDate.HasValue)
		// {
		// 	// Lọc chỉ theo ngày bắt đầu
		// 	filteredPromotions = filteredPromotions
		// 		.Where(p => p.StartDate >= startDate.Value)
		// 		.ToList();
		// }
		// else if (endDate.HasValue)
		// {
		// 	// Lọc chỉ theo ngày kết thúc
		// 	filteredPromotions = filteredPromotions
		// 		.Where(p => p.EndDate <= endDate.Value)
		// 		.ToList();
		// }

		// Nếu không có tiêu chí nào được nhập, filteredPromotions sẽ là _lstpro, do đó danh sách sẽ được hiển thị đầy đủ.
	}

}

