@page "/UpdateDirector/{id:guid}"
@using NeonCinema_Application.DataTransferObject.Directors
@using NeonCinema_Client.Data.IServices.Director
@inject IDirectorService SV
@inject NavigationManager Navi

<h3>Update Director</h3>

<EditForm Model="updateDirector" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="fullName">Full Name</label>
        <InputText id="fullName" class="form-control" @bind-Value="DRT.FullName" />
    </div>

    <div class="form-group">
        <label for="gender">Gender</label>
        <InputText id="gender" class="form-control" @bind-Value="DRT.Gender" />
    </div>

    <div class="form-group">
        <label for="birthDate">Birth Date</label>
        <InputDate id="birthDate" class="form-control" @bind-Value="DRT.BirthDate" />
    </div>

    <div class="form-group">
        <label for="address">Address</label>
        <InputText id="address" class="form-control" @bind-Value="DRT.Address" />
    </div>

    <div class="form-group">
        <label for="nationality">Nationality</label>
        <InputText id="nationality" class="form-control" @bind-Value="DRT.Nationality" />
    </div>

    <div class="form-group">
        <label for="biography">Biography</label>
        <InputTextArea id="biography" class="form-control" @bind-Value="DRT.Biography" />
    </div>

    <div class="form-group">
        <label>New Image (optional)</label>
        <InputFile OnChange="HandleFileSelected" class="form-control" id="newImage" />

        @if (temporaryImageUrl != null)
        {
            <div class="mt-2">
                <h6>New Image Preview:</h6>
                <img src="@temporaryImageUrl" alt="New Image Preview" style="width: 100px; height: auto;" />
            </div>
        }
    </div>

    <button type="submit" class="btn btn-primary">Update Director</button>
</EditForm>

@code {
    [Parameter]
    public Guid id { get; set; }
    private DirectorDTO DRT = new DirectorDTO();
    private UpdateDirectorRequest updateDirector = new UpdateDirectorRequest();
    private IBrowserFile selectedFile;
    private string temporaryImageUrl; // To store the preview URL of the new image

    protected override async Task OnInitializedAsync()
    {
        // Load the director's current information
        DRT = await SV.GetDirectorById(id, CancellationToken.None);
        temporaryImageUrl = DRT.Images; // Khởi tạo với đường dẫn ảnh ban đầu
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;

        if (selectedFile != null)
        {
            var fileName = $"{Guid.NewGuid()}{Path.GetExtension(selectedFile.Name)}";
            var filePath = Path.Combine("wwwroot/images/director", fileName);

            using (var stream = new FileStream(filePath, FileMode.Create))
            {
                await selectedFile.OpenReadStream().CopyToAsync(stream);
            }

            DRT.Images = $"/images/director/{fileName}";

            // Tạo URL tạm thời để hiển thị ảnh
            using (var stream = new MemoryStream())
            {
                await selectedFile.OpenReadStream().CopyToAsync(stream);
                temporaryImageUrl = $"data:image/png;base64,{Convert.ToBase64String(stream.ToArray())}";
            }

            // Cập nhật lại đường dẫn để hiển thị hình ảnh mới
            StateHasChanged(); // Để chắc chắn rằng UI được cập nhật
        }
    }

    private async Task HandleValidSubmit()
    {
        var updateActorRequest = new UpdateDirectorRequest
            {
                FullName = DRT.FullName,
                Gender = DRT.Gender,
                BirthDate = DRT.BirthDate,
                Address = DRT.Address,
                Nationality = DRT.Nationality,
                Biography = DRT.Biography,
                Images = DRT.Images,
                Status = DRT.Status
            };

       
        await SV.UpdateDirector(id, updateDirector, CancellationToken.None);
        Navi.NavigateTo("/ListDirector"); // Navigate back to the list after updating
    }
}
