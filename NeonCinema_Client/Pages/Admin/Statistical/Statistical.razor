@page "/statistical"
@using NeonCinema_Client.Data.IServices.Statistics
@inject IStatisticsService StatisticsService

<div class="container my-4">
    <h3>Thống Kê Doanh Thu</h3>

    <!-- Form chọn ngày thống kê -->
    <div class="mb-3">
        <label for="currentDate" class="form-label">Chọn Ngày Hiện Tại:</label>
        <input type="date" id="currentDate" class="form-control" @bind="CurrentDate" />
    </div>

    <div class="row g-3 mb-3">
        <div class="col">
            <label for="startDate" class="form-label">Từ Ngày:</label>
            <input type="date" id="startDate" class="form-control" @bind="StartDate" />
        </div>
        <div class="col">
            <label for="endDate" class="form-label">Đến Ngày:</label>
            <input type="date" id="endDate" class="form-control" @bind="EndDate" />
        </div>
        <div class="col-auto d-flex align-items-end">
            <button class="btn btn-primary" @onclick="LoadStatisticsData">Confirm</button>
        </div>
    </div>

    <!-- Hiển thị các thống kê -->
    <div class="row g-3">
        <!-- Card: Doanh thu trong ngày -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6>DOANH THU TRONG NGÀY</h6>
                    <h5 class="text-primary">@DailyRevenue.ToString() VND</h5>
                    <p class="text-muted">@CurrentDate.ToString("dd/MM/yyyy")</p>
                </div>
            </div>
        </div>

        <!-- Card: Khách hàng mới -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6>KHÁCH HÀNG MỚI</h6>
                    <h5 class="text-success">@NewCustomers</h5>
                    <p class="text-muted">@StartDate.ToString("dd/MM/yyyy") - @EndDate.ToString("dd/MM/yyyy")</p>
                </div>
                <p class="text-muted ml-4">01-01-2022 | 12-08-2023</p>
                <span class="material-icons card-icon bg-warning">confirmation_number</span>
            </div>
        </div>

        <!-- Card: Tổng vé -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6>TỔNG VÉ</h6>
                    <h5 class="text-warning">@TotalTickets</h5>
                    <p class="text-muted">@StartDate.ToString("dd/MM/yyyy") - @EndDate.ToString("dd/MM/yyyy")</p>
                </div>
                <p class="text-muted ml-4">01-01-2022 | 12-08-2023</p>
                <span class="material-icons card-icon bg-danger">shopping_cart</span>
            </div>
        </div>
    </div>

        <!-- Card: Tổng doanh thu -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6>TỔNG DOANH THU</h6>
                    <h5 class="text-danger">@TotalRevenue.ToString() VND</h5>
                    <p class="text-muted">@StartDate.ToString("dd/MM/yyyy") - @EndDate.ToString("dd/MM/yyyy")</p>
                </div>

                <div class="col-md-4">
                    <label for="theater" class="form-label">Rạp</label>
                    <input type="text" id="theater" class="form-control" placeholder="Selected">
                </div>
            </form>
        </div>
    </div>
</div>

<MudContainer>
    <MudChart ChartType="ChartType.Bar" ChartSeries="@Series" XAxisLabels="@XAxisLabels.ToArray()" Width="100%" Height="400px" />

    <MudGrid>
        <MudItem xs="12">
            <MudText Typo="Typo.body1" Class="py-3 text-items-center">Biểu đồ thống kê vé bán và combo theo từng ngày trong tháng</MudText>
        </MudItem>
    </MudGrid>
</MudContainer>
@code {
    private decimal DailyRevenue;
    private int NewCustomers;
    private int TotalTickets;
    private decimal TotalRevenue;
    private DateTime CurrentDate = DateTime.Today;
    private DateTime StartDate = DateTime.Today.AddDays(-30);
    private DateTime EndDate = DateTime.Today;

    private async Task LoadStatisticsData()
    {
        try
        {
            // Gọi API lấy dữ liệu thống kê
            var statistics = await StatisticsService.GetAllStatisticsAsync(CurrentDate, StartDate, EndDate);
            if (statistics != null)
            {
                DailyRevenue = statistics.DailyRevenue;
                NewCustomers = statistics.NewCustomers;
                TotalTickets = statistics.TotalTickets;
                TotalRevenue = statistics.TotalRevenue;
            }
        }
        catch (Exception ex)
            Console.WriteLine($"Lỗi khi lấy dữ liệu thống kê: {ex.Message}");
        }
    }
    #endregion 
}


<style>
    .bordered {
        border: 1px solid #ccc; 
        border-radius: 4px; 
        padding: 4px;
    }

    .card {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        .card .card-body h6 {
            font-weight: bold;
        }

        .card .card-body h5 {
            font-weight: bold;
        }

    .text-muted {
        font-size: 0.875rem;
    }
    /* Icon styling */
    .card-icon {
        position: absolute;
        top: 12px;
        right: 12px;
        font-size: 1.2rem; /* Adjust the icon size */
        color: #ffffff;
        border-radius: 50%;
        padding: 8px;
        line-height: 1; /* Center the icon */
    }

    .icon-background {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 50%; /* Makes the background circular */
        font-size: 1rem; /* Adjust icon size */
    }
</style>