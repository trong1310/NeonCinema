@page "/statistical"
@using MudBlazor
@using NeonCinema_Client.Data.IServices.Statistics
@using NeonCinema_Domain.Database.Entities
@inject IStatisticsService StatisticsService
@inject ISnackbar Snackbar

<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

<div class="container my-4">
    <div class="row g-3">
        <!-- Thống kê doanh thu trong ngày -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow h-100 position-relative">
                <div class="card-body">
                    <h6 class="text-secondary">DOANH THU TRONG NGÀY</h6>
                    <h5 style="font-weight:bold">@DailyRevenue VND</h5>
                </div>
                <p class="text-muted ml-4">@CurrentDate.ToString("dd-MM-yyyy")</p>
                <span class="material-icons card-icon bg-primary">attach_money</span>
            </div>
        </div>

        <!-- Thống kê khách hàng mới -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow h-100 position-relative">
                <div class="card-body">
                    <h6 class="text-secondary">KHÁCH HÀNG MỚI</h6>
                    <h5 style="font-weight:bold">@NewCustomers</h5>
                </div>
                <p class="text-muted ml-4">@CurrentDate.ToString("dd-MM-yyyy")</p>
                <span class="material-icons card-icon bg-success">person_add</span>
            </div>
        </div>

        <!-- Thống kê tổng vé -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow h-100 position-relative">
                <div class="card-body">
                    <h6 class="text-secondary">TỔNG VÉ</h6>
                    <h5 style="font-weight:bold">@TotalTicketsSold</h5>
                </div>
                <p class="text-muted ml-4">@StartDate.ToString("dd-MM-yyyy") | @EndDate.ToString("dd-MM-yyyy")</p>
                <span class="material-icons card-icon bg-warning">confirmation_number</span>
            </div>
        </div>

        <!-- Thống kê tổng doanh thu -->
        <div class="col-12 col-sm-6 col-md-3">
            <div class="card shadow h-100 position-relative">
                <div class="card-body">
                    <h6 class="text-secondary">TỔNG DOANH THU</h6>
                    <h5 style="font-weight:bold;">@TotalRevenue VND</h5>
                </div>
                <p class="text-muted ml-4">@StartDate.ToString("dd-MM-yyyy") | @EndDate.ToString("dd-MM-yyyy")</p>
                <span class="material-icons card-icon bg-danger">shopping_cart</span>
            </div>
        </div>
    </div>

    <!-- Form lọc thống kê -->
    <div class="card mt-4 shadow" style="border-radius: 8px;">
        <div class="card-body">
            <h5 class="card-title">Thống kê doanh thu</h5>
            <form class="row g-3">
                <!-- Ngày bắt đầu -->
                <div class="col-md-4">
                    <label for="startDate" class="form-label">Ngày bắt đầu</label>
                    <input type="date" id="startDate" class="form-control" @bind="StartDate">
                </div>

                <!-- Ngày kết thúc -->
                <div class="col-md-4">
                    <label for="endDate" class="form-label">Ngày kết thúc</label>
                    <input type="date" id="endDate" class="form-control" @bind="EndDate">
                </div>

                <!-- Nút Chấp nhận -->
                <div class="col-md-4 d-flex align-items-end">
                    <button type="button" class="btn btn-primary w-100" @onclick="ApplyFilters">Chấp nhận</button>
                </div>

                <!-- Lọc theo thời gian -->
                <div class="col-md-4">
                    <label for="timeFilter" class="form-label">Lọc theo thời gian</label>
                    <select id="timeFilter" class="form-select" @bind="TimeFilter">
                        <option value="Year">Lọc Theo Năm</option>
                        <option value="Month">Lọc Theo Tháng</option>
                        <option value="Week">Lọc Theo Tuần</option>
                    </select>
                </div>

                <!-- Rạp -->
                <div class="col-md-4">
                    <label for="theater" class="form-label">Rạp</label>
                    <input type="text" id="theater" class="form-control" @bind="Theater" placeholder="Nhập tên rạp">
                </div>
            </form>
        </div>
    </div>

    <!-- Biểu đồ doanh thu -->
    <div class="card mt-4 shadow">
        <div class="card-body">
            <h5 class="card-title">Biểu đồ doanh thu</h5>
            <MudChart @ref="Chart" T="decimal" XAxisLabels="@XAxisLabels.ToArray()" ChartSeries="@RevenueChartSeries" />

        </div>
    </div>
</div>

@code {
    private DateTime StartDate = DateTime.Now.AddMonths(-1); // Giá trị mặc định
    private DateTime EndDate = DateTime.Now; // Giá trị mặc định
    private DateTime CurrentDate = DateTime.Now;
    private string TimeFilter = "Year"; // Lọc theo năm mặc định
    private string Theater = ""; // Rạp mặc định

    private decimal DailyRevenue = 0;
    private int NewCustomers = 0;
    private int TotalTicketsSold = 0;
    private decimal TotalRevenue = 0;

    private List<string> XAxisLabels = new();
    private List<ChartSeries> RevenueChartSeries = new();
    private MudChart? Chart; // Biểu đồ

    // Khởi tạo dữ liệu khi trang được tải
    protected override async Task OnInitializedAsync()
    {
        await LoadStatistics();
        await LoadChartData();
    }

    // Phương thức khi người dùng nhấn nút "Chấp nhận"
    private async Task ApplyFilters()
    {
        await LoadStatistics();
        await LoadChartData();
    }

    // Phương thức load thống kê
    private async Task LoadStatistics()
    {
        try
        {
            var result = await StatisticsService.GetAllStatistics(StartDate, EndDate);
            DailyRevenue = result.DailyRevenue;
            NewCustomers = result.NewCustomers;
            TotalTicketsSold = result.TotalTicketsSold;
            TotalRevenue = result.TotalRevenue;
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading statistics: {ex.Message}", Severity.Error);
        }
    }

    // Phương thức load dữ liệu biểu đồ
    private async Task LoadChartData()
    {
        try
        {
            var chartData = await StatisticsService.GetChartDataAsync(StartDate, EndDate, TimeFilter, Theater);

            if (chartData != null)
            {
                XAxisLabels = chartData.Dates;

                RevenueChartSeries = new List<ChartSeries>
                {
                    new ChartSeries
                    {
                        Name = "Doanh thu",
                        Data = chartData.Revenue.Select(r => (double)r).ToArray()
                    }
                };
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading chart data: {ex.Message}", Severity.Error);
        }
    }
}

<style>
    .bordered {
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: 4px;
    }

    .card {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        .card .card-body h6 {
            font-weight: bold;
        }

        .card .card-body h5 {
            font-weight: bold;
        }

    .text-muted {
        font-size: 0.875rem;
    }
    /* Icon styling */
    .card-icon {
        position: absolute;
        top: 12px;
        right: 12px;
        font-size: 1.2rem; /* Adjust the icon size */
        color: #ffffff;
        border-radius: 50%;
        padding: 8px;
        line-height: 1; /* Center the icon */
    }

    .icon-background {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 40px;
        height: 40px;
        border-radius: 50%; /* Makes the background circular */
        font-size: 1rem; /* Adjust icon size */
    }
</style> 