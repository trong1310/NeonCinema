@page "/create-screening"
@using NeonCinema_Application.DataTransferObject.Movie
@using NeonCinema_Application.DataTransferObject.Room
@using NeonCinema_Application.DataTransferObject.Screening
@using NeonCinema_Application.DataTransferObject.ShowTime
@using NeonCinema_Client.Data.IServices.Screenning
@using NeonCinema_Domain.Enum
@inject IScreeningService ScreeningService
@inject NavigationManager NavigationManager

<h3>Create Screening</h3>

<form @onsubmit="HandleSubmit">
    <div class="form-group">
        <label for="showDate">Show Date</label>
        <input type="date" id="showDate" class="form-control" @bind="screeningCreateRequest.ShowDate" />
    </div>

    <div class="form-group">
        <label for="showTimeId">Show Time</label>
        <select id="showTimeId" class="form-control" @onchange="e => screeningCreateRequest.ShowTimeID = Guid.Parse(e.Value.ToString())">
            <option value="">-- Select Show Time --</option>
            @foreach (var showTime in showTimes)
            {
                <option value="@showTime.ID">@showTime.StartTime - @showTime.EndTime</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="movieId">Movie</label>
        <select id="movieId" class="form-control" @onchange="e => screeningCreateRequest.MovieID = Guid.Parse(e.Value.ToString())">
            <option value="">-- Select Movie --</option>
            @foreach (var movie in movies)
            {
                <option value="@movie.ID">@movie.Name</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="roomId">Room</label>
        <select id="roomId" class="form-control" @onchange="e => screeningCreateRequest.RoomID = Guid.Parse(e.Value.ToString())">
            <option value="">-- Select Room --</option>
            @foreach (var room in rooms)
            {
                <option value="@room.ID">@room.Name</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label>Status</label>
        <select class="form-control" @bind="screeningCreateRequest.Status">
            <option value="@EntityStatus.Active">Hoạt Động</option>
            <option value="@EntityStatus.Inactive">Ngưng hoạt động</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</form>

@code {
    private ScreeningCreateRequest screeningCreateRequest = new ScreeningCreateRequest();
    private List<ShowTimeDTO> showTimes = new List<ShowTimeDTO>();
    private List<MovieDTO> movies = new List<MovieDTO>();
    private List<RoomDTO> rooms = new List<RoomDTO>();

    protected override async Task OnInitializedAsync()
    {
        showTimes = await ScreeningService.GetAllShowTimesAsync();  // Get all showtimes for dropdown
        movies = await ScreeningService.GetAllMoviesAsync();        // Get all movies for dropdown
        rooms = await ScreeningService.GetAllRoomsAsync();          // Get all rooms for dropdown
    }

    private async Task HandleSubmit()
    {
        await ScreeningService.CreateScreeningAsync(screeningCreateRequest);
        NavigationManager.NavigateTo("/screenings");
    }
}

<style>
    .form-group {
        margin-bottom: 15px;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        font-size: 1rem;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    button.btn {
        padding: 10px 15px;
        background-color: #007bff;
        border: none;
        color: white;
        border-radius: 4px;
        cursor: pointer;
    }

        button.btn:hover {
            background-color: #0056b3;
        }
</style>
