@page "/updateseat/{seatId:guid}"

@using NeonCinema_Application.DataTransferObject.Seats
@using NeonCinema_Application.DataTransferObject.SeatTypes
@using NeonCinema_Client.Data.IServices.Seat
@using NeonCinema_Client.Data.IServices.SeatType
@using NeonCinema_Domain.Enum
@inject NavigationManager Navigation
@inject ISeatService SeatService
@inject ISeatTypeService SeatTypeService
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMz43W8dC8wY9s6h0xT27i5u60hz4HhI1c8/1" crossorigin="anonymous">
<h3 style="text-align: center; margin-top: 30px">Cập Nhật Thông Tin Ghế</h3>

<div class="updateSeat">
    <EditForm Model="seatToUpdate" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="seatNumber">Số Ghế:</label>
            <InputText id="seatNumber" class="form-control" @bind-Value="seatToUpdate.SeatNumber" />
        </div>

        <div class="form-group">
            <label for="column">Cột:</label>
            <InputText id="column" class="form-control" @bind-Value="seatToUpdate.Column" />
        </div>

        <div class="form-group">
            <label for="row">Hàng:</label>
            <InputText id="row" class="form-control" @bind-Value="seatToUpdate.Row" />
        </div>

        <div class="form-group">
            <label for="seattypeid">Chọn loại ghế:</label>
            <InputSelect id="seattypeid" class="form-control" @bind-Value="seatToUpdate.SeatTypeID">
                <option value="" disabled selected>Chọn loại ghế</option>
                @if (seatTypes != null && seatTypes.Count > 0)
                {
                    @foreach (var item in seatTypes)
                    {
                        <option value="@item.ID">@item.SeatTypeName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => seatToUpdate.SeatTypeID)" />
        </div>

        <div class="form-group">
            <label for="status">Trạng Thái:</label>
            <InputSelect id="status" class="form-control" @bind-Value="seatToUpdate.Status">
                <option value="@(seatEnum.Available)">Ghế còn trống</option>
                <option value="@(seatEnum.Sold)">Ghế đã bán</option>
                <option value="@(seatEnum.Selected)">Ghế đã chọn</option>
                <option value="@(seatEnum.Maintenance)">Ghế bảo trì</option>
            </InputSelect>
        </div>


        <div style="margin-top: 10px">
            <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i>Cập Nhật</button>
            <button type="button" class="btn btn-secondary" @onclick="GoBack"><i class="fas fa-times"></i>Quay lại</button>
        </div>
    </EditForm>
</div>
<style>
    .updateSeat {
        width: 50%;
        margin: 0 auto;
    }
</style>
@code {
    [Parameter] public Guid seatId { get; set; }
    private UpdateSeatDTO seatToUpdate = new UpdateSeatDTO();
    private List<SeatTypeDTO> seatTypes = new List<SeatTypeDTO>();
    protected override async Task OnInitializedAsync()
    {
        seatTypes = await SeatTypeService.GetAllSeatType();
        var seatResponse = await SeatService.GetSeatById(seatId);
        if (seatResponse != null)
        {
            seatToUpdate = new UpdateSeatDTO
            {
                    ID = seatResponse.ID,
                    SeatNumber = seatResponse.SeatNumber,
                    Column = seatResponse.Column,
                    Row = seatResponse.Row,
                    Status = seatResponse.Status,
                    SeatTypeID = seatResponse.SeatTypeID
            };
        }
    }

    private async Task HandleValidSubmit()
    {
        var result = await SeatService.UpdateSeate(seatToUpdate.ID, seatToUpdate);
        if (result != null && result.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/listseat");
        }
        else
        {
            Console.WriteLine("Error: Could not update seat information."); 
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/listseat");
    }
}
