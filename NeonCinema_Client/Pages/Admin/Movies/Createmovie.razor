@* @page "/add-moviee"
@using NeonCinema_Application.DataTransferObject.Countrys
@using NeonCinema_Application.DataTransferObject.Directors
@using NeonCinema_Application.DataTransferObject.Genre
@using NeonCinema_Application.DataTransferObject.Language
@using NeonCinema_Application.DataTransferObject.Movie
@using NeonCinema_Client.Data.IServices.Movie
@inject IMovieServicee MovieService
@inject NavigationManager Navigation

<h3>Add Movie</h3>

<EditForm Model="@movie" OnValidSubmit="@CreateMovie">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="Name">Movie Name:</label>
        <InputText id="Name" @bind-Value="movie.Name" class="form-control" />
    </div>

    <div>
        <label for="Description">Description:</label>
        <InputTextArea id="Description" @bind-Value="movie.Description" class="form-control" />
    </div>

    <div>
        <label for="Duration">Duration:</label>
        <InputNumber id="Duration" @bind-Value="movie.Duration" class="form-control" />
    </div>

    <div>
        <label for="StarTime">Start Time:</label>
        <InputDate id="StarTime" @bind-Value="movie.StarTime" class="form-control" />
    </div>

    <div>
        <label for="Trailer">Trailer:</label>
        <InputText id="Trailer" @bind-Value="movie.Trailer" class="form-control" />
    </div>

    <div>
        <label for="Images">Image:</label>
        <InputFile id="Images" OnChange="OnFileSelected" class="form-control" />
    </div>

    <div>
        <label for="AgeAllowed">Age Allowed:</label>
        <InputNumber id="AgeAllowed" @bind-Value="movie.AgeAllowed" class="form-control" />
    </div>

    <div>
        <label for="GenreID">Genre:</label>
        <InputSelect id="GenreID" @bind-Value="movie.GenreID" class="form-control">
            @foreach (var genre in genres)
            {
                <option value="@genre.ID">@genre.GenreName</option>
            }
        </InputSelect>
    </div>

    <div>
        <label for="LenguageID">Language:</label>
        <InputSelect id="LenguageID" @bind-Value="movie.LenguageID" class="form-control">
            @foreach (var language in languages)
            {
                <option value="@language.ID">@language.LanguageName</option>
            }
        </InputSelect>
    </div>

    <div>
        <label for="CountryID">Country:</label>
        <InputSelect id="CountryID" @bind-Value="movie.CountryID" class="form-control">
            @foreach (var country in countries)
            {
                <option value="@country.ID">@country.CountryName</option>
            }
        </InputSelect>
    </div>

    <div>
        <label for="DirectorID">Director:</label>
        <InputSelect id="DirectorID" @bind-Value="movie.DirectorID" class="form-control">
            @foreach (var director in directors)
            {
                <option value="@director.ID">@director.FullName</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private CreateMovieRequest movie = new CreateMovieRequest();
    private List<GenreDTO> genres = new List<GenreDTO>();
    private List<LanguageDTO> languages = new List<LanguageDTO>();
    private List<CountryDTO> countries = new List<CountryDTO>();
    private List<DirectorDTO> directors = new List<DirectorDTO>();
    private IBrowserFile selectedImage;

    protected override async Task OnInitializedAsync()
    {
        genres = await MovieService.GetAllGenresAsync(CancellationToken.None);
        languages = await MovieService.GetAllLanguagesAsync(CancellationToken.None);
        countries = await MovieService.GetAllCountriesAsync(CancellationToken.None);
        directors = await MovieService.GetAllDirectorsAsync(CancellationToken.None);
    }

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        selectedImage = e.File;
    }

    private async Task CreateMovie()
    {
        using var memoryStream = new MemoryStream();
        await selectedImage.OpenReadStream().CopyToAsync(memoryStream);
        movie.Images = new FormFile(memoryStream, 0, selectedImage.Size, "Images", selectedImage.Name);

        bool success = await MovieService.CreateMovieAsync(movie, CancellationToken.None);
        if (success)
        {
            Navigation.NavigateTo("/moviess");
        }
    }
}
 *@