@page "/list-movie-admin"
@using NeonCinema_Application.DataTransferObject.Movie
@using NeonCinema_Application.Pagination
@using NeonCinema_Client.Data.IServices.IMoviesServices
@using NeonCinema_Domain.Enum
@inject IMovieservices _movieservices
@inject NavigationManager Navigation


<link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
<h2 class="d-flex justify-content-center align-content-center m-auto">Danh Sách Phim</h2>
<div class="container-fluid mt-5">
    <div class="row mb-4 p-3 search-filter-container">
        <div class="col-md-4" style="margin-top:7px">
            <input type="text" class="form-control" placeholder="Tìm kiếm theo tên..." />
        </div>

        <div class="col-md-4" style="margin-top:7px">
            <input type="text" class="form-control" placeholder="Tìm kiếm theo tuổi..." />
        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col-md-4">
                    <label class="form-label">Trạng thái:</label>
                </div>
                <div class="col-md-8">
                    <div class="d-flex">
                        <div class="form-check me-3">
                            <input class="form-check-input" type="radio" name="status" id="all" value="all" checked>
                            <label class="form-check-label" for="all">Tất Cả</label>
                        </div>
                        <div class="form-check me-3 ml-4">
                            <input class="form-check-input" type="radio" name="status" id="active" value="active" >
                            <label class="form-check-label" for="resigned">Commingsoon</label>
                        </div>
                    </div>
                    <div class="form-check mt-1">
                        <input class="form-check-input" type="radio" name="status" id="pendingConfirmation" value="pendingConfirmation" >
                        <label class="form-check-label" for="resigned">Nowshowing</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <button type="button" class="btn btn-success bg-opacity-50" style="border-radius: 6px; margin: 0 0px 15px 1285px" @onclick="NavigateToCreate">
        <i class="fas fa-plus"></i> Thêm phim mới
    </button>
    <table class="table table-hover employee-table">
        <thead>
            <tr>
                <th class="text-center">STT</th>
                <th class="text-center">Ảnh</th>
                <th class="text-center">Tên</th>
                <th class="text-center">Ngày phát hành</th>
                <th class="text-center">Thời lượng</th>
                <th class="text-center">Thể loại</th>
                <th class="text-center">Độ tuổi</th>
                <th class="text-center">Trạng thái</th>                
                <th class="text-center">Hành động</th>
            </tr>
        </thead>

        @if (movieDto.Data != null)
        {
            <tbody>
                @foreach (var item in movieDto.Data)
                {
                    <tr>
                        <td class="text-center align-middle">@stt</td>
                        <td class="text-center align-middle"><img src="@GetImageUrl(item.Images)" alt="Alternate Text" style="height: 90px; width: 70px" /></td>
                        <td class="text-center align-middle">@item.Name</td>
                        <td class="text-center align-middle">@item.StarTime.ToString("dd/MM/yyyy")</td>
                        <td class="text-center align-middle">@item.Duration</td>
                        <td class="text-center align-middle">@item.GenreName</td>
                        <td class="text-center align-middle">@item.AgeAllowed</td>
                        <td class="text-center align-middle">
                            <span class="badge @(item.Status == MovieStatus.Comingsoon ? "bg-success" : "bg-danger") text-light small-badge">
                                @(item.Status == MovieStatus.Comingsoon ? "Commingsoon" : "Inactive")
                            </span>
                        </td>
                        <td class="text-center align-middle">
                            <button class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-edit"></i>
                            </button>                         
                        </td>
                    </tr>
                    stt++;
                }
            </tbody>
        }
        else
        {
            <tbody>
                <tr>
                    <td colspan="7" class="text-center">Không có dữ liệu...</td>
                </tr>
            </tbody>
        }
    </table>
</div>

<MudBlazor.MudContainer Class="container-fluid d-flex justify-content-center mb-2">
    <MudPagination Color="Color.Primary" Count="@countPage" SelectedChanged="@OnPaginationSelectedChanged" />
</MudBlazor.MudContainer>

@code {
    private bool hover = true;
    private int countPage = 1;
    private int stt = 1;
    private string errorMessage;
    
    ViewMovieRequest request = new ViewMovieRequest();
    PaginationResponse<MovieDTO> movieDto = new PaginationResponse<MovieDTO>();

    protected override async Task OnInitializedAsync()
    {
        await LoadMovies();
    }

    public async Task LoadMovies()
    {
        try
        {
            movieDto.Data = null;
            request.PageNumber = countPage;
            movieDto = await _movieservices.GetAllMovies(request);
        }
        catch (Exception ex)
        {
            errorMessage = $"Có lỗi xảy ra: {ex.Message}";
        }
    }

    public async Task OnPaginationSelectedChanged(int selectedPage)
    {
        countPage = selectedPage;
        await LoadMovies();
    }

    private string GetImageUrl(string imageUrl)
    {
        return $"https://localhost:7211/api/Resources/{imageUrl}";
    }
    private async Task NavigateToCreate()
    {
        Navigation.NavigateTo($"/create-flims");
    }
}

<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Roboto', sans-serif; /* Sử dụng font chữ Roboto */
    }
    .container-fluid {
        font-family: 'Roboto', sans-serif; /* Sử dụng font chữ Roboto */
    }

    .search-filter-container {
        background-color: #ffffff; /* Màu nền cho khung tìm kiếm và lọc */
        border-radius: 8px; /* Bo góc cho khung */
        padding: 20px; /* Padding cho khung */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Thêm bóng cho khung */
        margin-left: 1px;
        margin-right: 1px;
    }
    .employee-table {
        background-color: white; /* Màu nền bảng là trắng */
        border-radius: 8px; /* Bo góc bảng */
        overflow: hidden; /* Ẩn đi các phần tràn ra ngoài */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Thêm bóng cho bảng */
    }

        .employee-table td {
            font-size: 16px; /* Tăng kích thước chữ trong các thẻ td */
            padding: 12px; /* Tăng khoảng cách giữa nội dung và đường viền của ô */
        }
</style>