@* @page "/edit-room/{id:guid}"
@using NeonCinema_Application.DataTransferObject.Room
@using NeonCinema_Client.Data.IServices.IRoom
@using NeonCinema_Domain.Enum
@inject IRoomService RoomService
@inject NavigationManager NavigationManager

<h3>Chỉnh sửa phòng chiếu</h3>

<div class="container">
    @if (room != null)
    {
        <EditForm Model="room" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="roomName" class="form-label">Tên phòng</label>
                <InputText id="roomName" class="form-control" @bind-Value="room.Name" />
                <ValidationMessage For="@(() => room.Name)" />
            </div>

            <div class="mb-3">
                <label for="seatingCapacity" class="form-label">Sức chứa</label>
                <InputNumber id="seatingCapacity" class="form-control" @bind-Value="room.SeatingCapacity" />
                <ValidationMessage For="@(() => room.SeatingCapacity)" />
            </div>

            <div class="mb-3">
                <label for="status" class="form-label">Trạng thái</label>
                <InputSelect id="status" class="form-control" @bind-Value="room.Status">
                    <option value="@(EntityStatus.Active)">Hoạt động</option>
                    <option value="@(EntityStatus.Locked)">Không hoạt động</option>
                </InputSelect>
                <ValidationMessage For="@(() => room.Status)" />
            </div>

            <button type="submit" class="btn btn-success">Cập nhật</button>
            <button type="button" class="btn btn-secondary" @onclick="NavigateBack">Hủy</button>
        </EditForm>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private RoomDTO room = new RoomDTO();

    private RoomUpdateRequest rrr;
    protected override async Task OnInitializedAsync()
    {
        room = await RoomService.GetRoomByyId(Id, CancellationToken.None);
    }

    private async Task HandleValidSubmit()
    {
        // Gán giá trị cho rrr từ room
        rrr = new RoomUpdateRequest
            {
                ID = room.ID,
                Name = room.Name,
                SeatingCapacity = room.SeatingCapacity,
                Status = room.Status, // Bạn cần chắc chắn rằng room.Status được khởi tạo
                /* CinemasID = room.CinemasID */ // Kiểm tra rằng CinemasID có giá trị hợp lệ
            };

        // Gọi phương thức cập nhật từ IRoomService
        var response = await RoomService.UpdateRoomm(rrr.ID, rrr, CancellationToken.None);

        if (response.IsSuccessStatusCode)
        {
            // Chuyển hướng về trang danh sách phòng sau khi cập nhật thành công
            NavigationManager.NavigateTo("/rooms");
        }
        else
        {
            var errorContent = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {errorContent}");
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/rooms");
    }
}
 *@