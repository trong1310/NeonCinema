@page "/create-room"
@using NeonCinema_Application.DataTransferObject.Room
@using NeonCinema_Client.Data.IServices.IRoom
@using NeonCinema_Domain.Enum
@layout LayoutAdmin
@inject IRoomService RoomService
@inject NavigationManager Navi

<h3 style="text-align: center">Thêm phòng mới</h3>

<EditForm Model="newRoom" OnValidSubmit="CreateRoom">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="roomName" class="form-label">Tên phòng</label>
        <InputText id="roomName" class="form-control" @bind-Value="newRoom.Name" />
        <ValidationMessage For="@(() => newRoom.Name)" />
    </div>

    <div class="mb-3">
        <label for="seatingCapacity" class="form-label">Sức chứa</label>
        <InputNumber id="seatingCapacity" class="form-control" @bind-Value="newRoom.SeatingCapacity" />
        <ValidationMessage For="@(() => newRoom.SeatingCapacity)" />
    </div>

    <div class="mb-3">
        <label for="status" class="form-label">Trạng thái</label>
        <InputSelect id="status" class="form-control" @bind-Value="newRoom.Status">
            <option value="@(EntityStatus.Active)">Hoạt động</option>
            <option value="@(EntityStatus.Locked)">Không hoạt động</option>
        </InputSelect>
        <ValidationMessage For="@(() => newRoom.Status)" />
    </div>

    <button type="submit" class="btn btn-success">Tạo phòng</button>
    <button type="button" class="btn btn-secondary" @onclick="BackToList">Hủy</button>
</EditForm>


@code {
    private RoomDTO newRoom = new RoomDTO(); // Dữ liệu phòng mới

    private async Task CreateRoom()
    {
        if (newRoom != null)
        {
            // Tạo đối tượng RoomCreateRequest và gán các giá trị từ newRoom
            var roomCreateRequest = new RoomCreateRequest
                {
                    Name = newRoom.Name,
                    SeatingCapacity = newRoom.SeatingCapacity,
                    Status = newRoom.Status,
                    CinemasID = Guid.Parse("6cf8d373-0533-484c-bcc3-63801334fff6") // Gán CinemaID mặc định
                };

            // Gọi service để tạo phòng với RoomCreateRequest
            await RoomService.CreateRoomm(roomCreateRequest, CancellationToken.None);

            // Điều hướng về trang danh sách phòng sau khi thêm
            Navi.NavigateTo("/rooms");
        }
    }
    // Điều hướng tới trang tạo phòng
    
    // Điều hướng trở về trang danh sách phòng nếu người dùng nhấn "Hủy"
    private void BackToList()
    {
        Navi.NavigateTo("/rooms");
    }
}
