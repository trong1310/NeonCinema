@page "/nowshowing-flims"
@layout LayoutClient
@using MudBlazor
@using NeonCinema_Application.DataTransferObject.Movie
@using NeonCinema_Application.Pagination
@using NeonCinema_Client.Data.IServices.FlimsUser
@using NeonCinema_Client.DataTransferObject.MovieData
@inject IFlimUsers _filmsServices

<div class="container text-center">
	
    <div class="row">
        <div id="text-2005933767" class="text">
            <h2 class="title-button">Phim đang chiếu</h2>
            <style>
                #text-2005933767 {
                    font-size: 1.5rem;
                    color: antiquewhite;
                    width: 350px;
                    margin: 20px auto; /* Căn giữa */
                    text-align: center;
                    padding: 10px;
                    border-radius: 15px; /* Bo tròn góc */
                    border: 2px solid #ffc107; /* Đường viền màu vàng */
                    background-color: rgba(0, 0, 0, 0.5); /* Màu nền mờ */
                }
            </style>
        </div>

        <div class="row row-cols-lg-4 g-2 g-lg-3 d-flex justify-content-center">
           
            @if (movies.Data != null)
            {
                @foreach (var item in movies.Data)
                {
                    <div class="card movie-card p-1" style="width: 18rem; background-color: transparent">
                        <img src="@GetImageUrl(item.Images)" class="card-img-top" loading="lazy">
                        <div class="card-body" style="background-color: transparent">
                            <div class="tags mb-2">
                                <span class="badge bg-danger">@item.AgeAllowed+</span>
                                <span class="badge bg-dark">@item.Duration<text>p</text></span>
                                <span class="badge bg-success">Sub: @item.LanguareName</span>
                            </div>
                                <h5 class="card-title">@item.Name</h5>
                                <p class="card-text">Genre: <span class="genre">@item.GenreName</span></p>
                            <button class="btn buy-ticket-btn" @onclick="() => OpenDialog()">
                                <i class="fa-solid fa-ticket"></i> MUA VÉ NGAY
                            </button>
                        </div>
                    </div>
                }
            }
            else
            {
                @if (isProcessing)
                {
                    <div class="spinner-border text-primary " role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
            }
        </div>
    </div>
<MudBlazor.MudContainer Class="container-fluid d-flex justify-content-center mb-2">
        <MudPagination Color="Color.Primary" Count="@CountPage" SelectedChanged="@OnPaginationSelectedChanged" />
</MudBlazor.MudContainer>

</div>



@code {
    private bool isProcessing;
    private string errorMessage;
    private ChooseShowTimeDialog? chooseSTD;
    ViewMovieRequest request = new ViewMovieRequest();
    PaginationResponse<MovieDTO> movies = new PaginationResponse<MovieDTO>();
    int CountPage = 1; 
    protected override async Task OnInitializedAsync()
    {

        await LoadMovie();  // Bắt đầu tải từ trang 1
    }
    public async Task LoadMovie()
    {
        isProcessing = true;
        try
        {
            movies.Data = null;
            request.PageNumber = CountPage;
            movies = await _filmsServices.GetMovieShowing(request);
            if (movies.HasNext)
            {
                CountPage += 1;

            }
            isProcessing = false;

        }catch(Exception ex)
        {
            errorMessage = $"Có lỗi xảy ra: {ex.Message}";
        }
    }
    public async Task OnPaginationSelectedChanged(int selectedPage)
    {
        CountPage = selectedPage;
        await LoadMovie();
    }
    

    private string GetImageUrl(string imageUrl)
    {
        return $"https://localhost:7211/Resources/{imageUrl}";
    }

    private void OpenDialog()
    {
        chooseSTD?.Open();
    }

    private void OnDialogClose()
    {
        // Logic xử lý khi dialog đóng (nếu cần)
    }
}
<style>
    /* Card container */
    .movie-card {
        border: none;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease-in-out;
        overflow: hidden;
    }

        /* Khi hover vào card */
        .movie-card:hover {
            transform: translateY(-10px);
        }

        /* Chỉnh kích thước hình ảnh trong card */
        .movie-card img {
            width: 100%;
            height: auto;
            max-height: 250px; /* Giới hạn chiều cao tối đa của ảnh */
            object-fit: cover; /* Giữ tỉ lệ ảnh và cắt cho vừa với khung */
        }

        /* Card body */
        .movie-card .card-body {
            padding: 10px;
        }

    /* Chỉnh các tags */
    .tags {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }

    /* Button mua vé */
    .buy-ticket-btn {
        background-color: #ff5a00;
        color: white;
        width: 100%;
        margin-top: 10px;
        transition: background-color 0.3s;
    }

        .buy-ticket-btn:hover {
            background-color: #e04c00;
        }

      .spinner-border {
          margin: 10px;
      }
</style>
