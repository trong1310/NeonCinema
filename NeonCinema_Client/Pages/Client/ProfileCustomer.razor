@page "/customer-profile"
@using NeonCinema_API.Controllers
@using NeonCinema_Application.DataTransferObject.User
@using NeonCinema_Application.DataTransferObject.User.Request
@using NeonCinema_Application.DataTransferObject.Utilities
@using NeonCinema_Client.Data.IServices.User
@using NeonCinema_Client.Pages.Client
@using System.Security.Claims
@using System.Net.Http;
@using System.Net.Http.Headers;
@using System.IdentityModel.Tokens.Jwt
@using NeonCinema_Domain.Database.Entities
@inject IUserServices _ussv;
@layout LayoutClient
@inject AuthenticationStateProvider _providee
@inject HttpClient _http
@inject Blazored.LocalStorage.ILocalStorageService _localStorage

@if (successMessage != null)
{
    <div class="alert alert-success" role="alert">
        @successMessage
    </div>
}

@if (errorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

<div class="profile-container">
    <div class="row">
        <div class="col-lg-12 col-md-10">
            <div class="card p-4 shadow-sm">
                <p class="profile-title">THÔNG TIN CÁ NHÂN</p>
                <div class="row">
                    <div class="col-md-5 text-center">
                        <img src="@GetImageUrl()" class="rounded-circle profile-img" alt="User Image" />
                        <div class="mt-4 customer-movie">
                            <p><span class="font-weight-bold">Điểm:</span> 100 điểm</p>
                            <p><span class="font-weight-bold">Tổng chi tiêu:</span> @(totalMoney)đ</p>
                            <p><span class="font-weight-bold">Hoạt động:</span> aaaaaa</p>
                        </div>
                    </div>
                    <div class="col-md-6 ">
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <label for="FullName">Họ và tên</label>
                                <input type="text" id="FullName" class="form-control" @bind="user.FullName" readonly="@(!checkUpdate)"/>
                               
                            </div>
                            <div class="col-md-6">
                                <label for="PhoneNumber">Số điện thoại</label>
                                <input type="text" id="PhoneNumber" class="form-control" @bind="user.PhoneNumber" readonly="@(!checkUpdate)"/>
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-6">
                                <label for="Email">Email</label>
                                <input type="text" id="email" class="form-control" @bind="user.Email" readonly="@(!checkUpdate)" />
                            </div>
                            <div class="col-md-6">
                                <label for="DateOfBirth">Ngày sinh</label>
                                <input type="date" id="DateOfBirth" class="form-control" @bind="user.DateOrBriht" readonly="@(!checkUpdate)" />
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-12 d-flex">
                                <input type="password" id="Password" class="form-control" disabled />
                                <button class="btn btn-light ms-4" @onclick="GetForm">Đổi mật khẩu</button>
                            </div>
                            <div class="col-md-12">
                                @if (show)
                                {
                                    <div class="mt-3">
                                        <label for="check" class="form-label">Mật khẩu hiện tại</label>
                                        <input type="password" id="check" class="form-control" @bind="currenpass" />
                                        
                                    </div>
                                    <div class="mt-3">
                                        <label for="NewPassword" class="form-label">Nhập mật khẩu mới</label>
                                        <input type="@(showPassword ? "text" : "password")" id="NewPassword" class="form-control" @bind="newPassword" />
                                    </div>
                                    <div class="mt-3">
                                        <label for="ConfirmPassword" class="form-label">Nhập lại mật khẩu</label>
                                        <input type="@(showPassword ? "text" : "password")" id="ConfirmPassword" class="form-control" @bind="confirmPassword" />
                                    </div>
                                    <div class="form-check mt-2">
                                        <input class="form-check-input" type="checkbox" id="ShowPassword" @bind="showPassword"/>
                                        <label class="form-check-label" for="ShowPassword">Hiện mật khẩu</label>
                                    </div>
                                    <div class="mt-4">
                                        <button class="btn btn-primary" @onclick="ChangePassword">Đổi mật khẩu</button>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="row mt-3">
                            <div class="col-md-6">
                                <label>Giới tính</label>
                                @* <div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" id="genderMale" value="Nam" checked="@IsMaleChecked" />
                                        <label class="form-check-label" for="genderMale">Nam</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="radio" id="genderFemale" value="Nữ" checked="@IsFemaleChecked" />
                                        <label class="form-check-label" for="genderFemale">Nữ</label>
                                    </div>
                                </div> *@
                            </div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <label for="Address">Địa chỉ</label>
                                <input type="text" id="address" class="form-control address-input" @bind="user.Adderss" readonly="@(!checkUpdate)" />
                            </div>
                        </div>
                        @if(checkUpdate)
                        {
                            <div class=" mt-4">
                                <button style="width: 130px; margin-left: 295px;" type="button" class="btn btn-primary">Lưu</button>
                            </div>
                        }
                        else
                        {
                            <div class=" mt-4">
                                <button style="width: 130px; margin-left: 295px;" type="button" class="btn btn-primary">Sửa</button>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row p-5">
    <div class="row bg bg-secondary rounded">
        <div class="col-md-10">
            <span class="d-flex align-items-center" style="font-size: 30px; padding-left: 50px; color: #fff; font-weight: bold; margin-top: 15px ">Lịch sử giao dịch</span>
        </div>
        <div class="col-md-2">
            <input type="month" name="name" class="form-control mb-3" style="max-width: 200px; height: 50px; margin-top: 15px " />
        </div>
    </div>
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">STT</th>
                    <th scope="col">Thời gian giao dịch</th>
                    <th scope="col">Mã hóa đơn</th>
                    <th scope="col">Tên phim</th>
                    <th scope="col">Tổng tiền</th>
                    <th scope="col">Số ghế</th>
                    <th scope="col">Phòng</th>
                    <th scope="col">Tổng Điểm tích lũy</th>
                    
                </tr>
            </thead>
            <tbody>
                @foreach (var item in _lstBill.Select((value, index) => new {value, index}))
                {
                    if(item.value.Ticket != null)
                    {
                        foreach (var x in item.value.Ticket)
                        {
                            nameMovie = x.Movies.Name;
                            seatNumber = seatNumber + "," + x.Seat.SeatNumber.ToString();
                            roomName = x.Screenings.Rooms.Name;
                        }
                    }
                    
                    <tr>
                        <th scope="row">@(item.index + 1)</th>
                        <td>@item.value.CreatedTime</td>
                        <td>@item.value.ID</td>
                        <td>@nameMovie</td>
                        <td>@(item.value.TotalPrice)đ</td>
                        <td>@seatNumber</td>
                        <td>@roomName</td>
                        <td></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private bool checkUpdate = false;
    private ClientChangerPass check = new ClientChangerPass();
    private string currenpass;
    private bool show = false;
    private string newPassword = string.Empty;
    private string confirmPassword = string.Empty;
    private bool showPassword = false;
    private string? successMessage;
    private string? errorMessage;
    private string? currentUserId;
    private void GetForm()
    {
        show = !show;
    }


    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }
    private async Task ChangePassword()
    {



        if (string.IsNullOrEmpty(check.ToString()) || string.IsNullOrEmpty(newPassword) || string.IsNullOrEmpty(confirmPassword))
        {
            ShowErrorMessage("Vui lòng điền đầy đủ các trường mật khẩu.");
            return;
        }

        if (newPassword != confirmPassword)
        {
            ShowErrorMessage("Mật khẩu mới và mật khẩu xác nhận không khớp.");
            return;
        }
        try
        {
            check = new ClientChangerPass
                {
                    Currenpassword = currenpass,
                    Newpassword = newPassword,

                };


            var checkpass = await _ussv.ChangerPass(check);
            if (!checkpass.IsSuccessStatusCode)
            {
                var cr = currenpass;
                var content = await checkpass.Content.ReadAsStringAsync();
                Console.WriteLine($"Lỗi API: {content}");
                Console.WriteLine($"Mật khẩu hiện tại:   {cr}");
                ShowErrorMessage($"Mật khẩu hiện tại không đúng:  {content}");
                return;
            }

        }
        catch (Exception ex)
        {
            ShowErrorMessage($"Có lỗi xảy ra khi đổi mật khẩu: {ex.Message}");
        }
    }

    private void ShowErrorMessage(string message)
    {
        errorMessage = message; 
        successMessage = null;   
    }

    private void ShowSuccessMessage(string message)
    {
        successMessage = message; 
        errorMessage = null;      
    }

    //
    private Users user = new Users();
    private List<Bill> _lstBill = new List<Bill>();
    private double totalMoney = 0;
    private string nameMovie = "";
    private string seatNumber = "";
    private string roomName = "";


    private async Task LoadUserDetails()
    {
        var token = await _localStorage.GetItemAsync<string>("authToken");
        var requestMessage = new HttpRequestMessage(HttpMethod.Get, "https://localhost:7211/api/User/get-user-by-id");
        requestMessage.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
        var response = await _http.SendAsync(requestMessage);
        if (response.IsSuccessStatusCode)
        {
            user = await response.Content.ReadFromJsonAsync<Users>();
        }


        if(user.Bills != null)
        {
            _lstBill = user.Bills.ToList();
        }    
    }



    protected override async Task OnInitializedAsync()
    {
        await LoadUserDetails();
        await TotalMoneyUser();
        await GetImageUrl();
    }
    private async Task<string> GetImageUrl()
    {
        if(user.Images == null)
        {
            return "/images/Customer/user-icon.png";
        }
        return $"https://localhost:7211/Resources/{user.Images}";
    }

    private async Task<double> TotalMoneyUser()
    {
        foreach (var item in _lstBill)
        {
            totalMoney = totalMoney + Convert.ToDouble(item.TotalPrice);
        }

        return totalMoney;
    }

}
