@page "/ticket-price-client"
@layout LayoutClient
@using NeonCinema_Application.DataTransferObject.FoodCombos
@using NeonCinema_Application.DataTransferObject.TicketPriceSetting
@using NeonCinema_Client.Data.IServices.TicketPriceSetting
@using NeonCinema_Client.Data.Services
@inject ITicketPriceSettingService TicketPriceSettingService
@inject FoodComboServices _services

<div class="container-fluid ">
    <div class="row bg-container">
        <!-- Bảng giá vé và bảng phụ thu -->
        <div class="col-md-9 table-container">
            <div style="text-align: center;">
                <h2 class="mt-4 mb-4 green-title">Bảng Giá Vé</h2>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th></th>
                            <th>Trước 17h</th>
                            <th>Sau 17h</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="col-4">Thứ 2, Thứ 3, Thứ 4, Thứ 5</td>
                            <td class="col-4">@ticketPriceSetting.PriceBefore17hWeekDay.ToString("N0") VND</td>
                            <td class="col-4">@ticketPriceSetting.PriceAfter17hWeekDay.ToString("N0") VND</td>
                        </tr>
                        <tr>
                            <td class="col-4">Thứ 6, Thứ 7, Chủ Nhật</td>
                            <td class="col-4">@ticketPriceSetting.PriceBefore17hWeekeend.ToString("N0") VND</td>
                            <td class="col-4">@ticketPriceSetting.PriceAfter17hWeekeend.ToString("N0") VND</td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div style="text-align: center;">
                <h2 class="mt-4 mb-4 green-title">BẢNG PHỤ THU</h2>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th>Phụ thu/Ghế</th>
                            <th>Giá</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="col-4">3D</td>
                            <td class="col-8">@ticketPriceSetting.Surcharge3D.ToString("N0") VND</td>
                        </tr>
                        <tr>
                            <td class="col-4">4D</td>
                            <td class="col-8">@ticketPriceSetting.Surcharge4D.ToString("N0") VND</td>
                        </tr>
                        <tr>
                            <td class="col-4">Ghế VIP</td>
                            <td class="col-8">@ticketPriceSetting.SurchargeVIP.ToString("N0") VND</td>
                        </tr>
                        <tr>
                            <td class="col-4">Ghế couple</td>
                            <td class="col-8">@ticketPriceSetting.SurchargeCouple.ToString("N0") VND</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>


        <!-- Giá vé combo đồ ăn -->
        <div class="col-md-3">
            <div style="text-align: center;">
                <h2 class="mt-4 mb-4 green-title">COMBO ĐỒ ĂN</h2>
            </div>
            <div class="combo-scroll-container">
                @if (foodsDto != null && foodsDto.Any())
                {
                    foreach (var combo in foodsDto)
                    {
                        <div class="card mb-3 p-2 d-flex flex-row ">
                            <img src="@GetImageUrl(combo.Images)" class="combo-image me-3" alt="@combo.Content" />
                            <div style="margin-left: 15px">
                                <p class="card-title mt-2 ml-3">@combo.Content</p>
                                <p class="card-text mt-2 ml-3 mb-2">@combo.Description</p>
                                <p class="fw-bold mt-4 ml-3">@combo.Amount.ToString("N0") VND</p>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>Không có dữ liệu combo đồ ăn.</p>
                }
            </div>
        </div>
    </div>
</div>


@code {
    private TicketPriceSettingDTO ticketPriceSetting = new TicketPriceSettingDTO();
    List<FoodComboDTO> foodsDto = new List<FoodComboDTO>();
    protected override async Task OnInitializedAsync()
    {
        ticketPriceSetting = await TicketPriceSettingService.GetByIdAsync(Guid.Parse("F45B65A9-F32D-4F95-A211-75A7AF545F46"));
        var allFoodCombos = await _services.GetAllFoodCombo();
        foodsDto = allFoodCombos.OrderBy(combo => combo.Content).ToList(); // Sắp xếp theo tên combo
    }
    private string GetImageUrl(string imageUrl)
    {
        return $"https://localhost:7211/api/Resources/{imageUrl}";
    }
}


<style>

    .logo-img {
        max-width: 120px;
        height: auto;
        margin-bottom: 15px;
        border-radius: 50%;
        border: 2px solid white;
    }

    .green-title {
        color: limegreen; /* Màu chữ xanh lá cây */
        border: 1px solid limegreen; /* Đường viền màu xanh lá cây */
        padding: 10px; /* Thêm khoảng cách giữa chữ và viền */
        border-radius: 8px; /* Bo góc cho đường viền */
        display: inline-block; /* Để viền chỉ bao quanh chữ */
        font-weight: bold;
    }

    .card {
        background-color: rgba(255, 255, 255, 0.8); /* Nền trắng trong suốt */
        border-radius: 10px;
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
        display: flex; /* Căn chỉnh các phần tử theo chiều ngang */
        flex-direction: column; /* Căn chỉnh theo cột */
    }

    .card-title {
        color: limegreen;
        font-size: 2rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 1.2rem;
    }

    .fw-bold {
        font-size: 1.2rem;
        color: red;
    }

    .combo-image {
        width: 150px; /* Chiều rộng của ảnh combo */
        height: auto; /* Giữ tỷ lệ ảnh */
        border-radius: 5px; /* Góc bo tròn nhẹ */
        object-fit: cover; /* Cắt ảnh nếu cần nhưng giữ tỷ lệ */
    }

    .combo-scroll-container {
        max-height: 670px; /* Chiều cao tối đa */
        overflow-y: auto; /* Hiển thị thanh cuộn dọc nếu nội dung vượt quá */
    }

    .table {
        background-color: rgba(255, 255, 255, 0.8); /* Nền trắng trong suốt */
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

        .table th {
            background-color: rgba(0, 0, 0, 0.5); /* Màu xanh đậm */
            color: white;
            font-size: 1.7rem; /* Tăng kích thước chữ */
            text-transform: uppercase;
            padding: 15px;
            text-align: center;
        }

        .table td {
            background-color: rgba(255, 255, 255, 0.8);
            font-size: 1.6rem; /* Tăng kích thước chữ */
            color: #374151; /* Màu chữ xám đậm */
            padding: 12px 15px; /* Tăng khoảng cách */
            vertical-align: middle;
            text-align: center;
        }


    .price-display {
        font-size: 1.3rem;
        font-weight: bold;
        color: #1E3A8A; /* Xanh đậm */
    }

    h2 {
        font-weight: 700;
        font-size: 2rem;
        text-transform: uppercase;
        margin: 10px 0;
    }

    body {
        background-color: #EFF6FF; /* Màu nền tổng thể */
        font-family: 'Arial', sans-serif;
    }

    .table-primary {
        background-color: #2563EB; /* Màu header bảng */
        color: white;
    }

    h2 {
        letter-spacing: 1px;
    }



    .bg-container {
        position: relative;
        background-image: url("/images/Client/bg7.webp");
        background-size: cover; /* Tự động điều chỉnh kích thước để phủ kín */
        background-position: center; /* Canh giữa ảnh nền */
        background-repeat: no-repeat; /* Không lặp lại ảnh */
    }

</style>
