@page "/forgot-password"
@using NeonCinema_Application.DataTransferObject.User.Request
@using NeonCinema_Client.Data.IServices.User
@inject IUserServices UserServices
@inject NavigationManager Navi

<div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="card shadow p-4" style="width: 100%; max-width: 400px; border-radius: 10px;">
        <h3 class="text-center text-primary mb-4">Khôi Phục Mật Khẩu</h3>
        <EditForm Model="@forgotPassRequest" OnValidSubmit="@SubmitForgotPassword" class="needs-validation">
            <DataAnnotationsValidator />
            <ValidationSummary class="alert alert-danger" />

            <div class="mb-3">
                <label for="email" class="form-label">Email:</label>
                <InputText id="email" @bind-Value="forgotPassRequest.Email" class="form-control" placeholder="Nhập email của bạn" />
            </div>

            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary" disabled="@isLoading">
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: @(isLoading ? "inline-block" : "none");"></span>
                    Gửi yêu cầu
                </button>
                <button type="button" class="btn btn-secondary" @onclick="NavigateToLogin">Hủy</button>
            </div>
        </EditForm>

        @if (!string.IsNullOrEmpty(responseMessage))
        {
            <div class="alert mt-3 alert-@(isSuccess ? "success" : "danger")">
                @responseMessage
            </div>
        }
    </div>
</div>

@code {
    private Forgotpass forgotPassRequest = new Forgotpass();
    private string responseMessage;
    private bool isLoading = false;
    private bool isSuccess = false;

    private async Task SubmitForgotPassword()
    {
        isLoading = true;
        responseMessage = string.Empty;
        try
        {
            var response = await UserServices.ForgotPass(forgotPassRequest);

            if (response.IsSuccessStatusCode)
            {
                isSuccess = true;
                responseMessage = "Mật khẩu mới đã được gửi tới email của bạn. Vui lòng kiểm tra!";
            }
            else
            {
                isSuccess = false;
                responseMessage = await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            isSuccess = false;
            responseMessage = $"Lỗi: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToLogin()
    {
        Navi.NavigateTo("/login");
    }
}