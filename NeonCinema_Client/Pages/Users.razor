@* <!-- Pages/UserForm.razor -->
@page "/userform/{UserId:guid?}"
@inject UserService UserService
@code {
    [Parameter]
    public Guid? UserId { get; set; }

    private UserDTO user = new UserDTO();
    private bool isNewUser;

    protected override async Task OnInitializedAsync()
    {
        if (UserId.HasValue)
        {
            user = await UserService.GetUserByPhoneNumberAsync(UserId.Value.ToString());
            isNewUser = false;
        }
        else
        {
            isNewUser = true;
        }
    }

    private async Task SaveUser()
    {
        if (isNewUser)
        {
            await UserService.CreateUserAsync(user);
        }
        else
        {
            await UserService.UpdateUserAsync(UserId.Value, user);
        }
    }
}

<h3>@(isNewUser ? "Create User" : "Update User")</h3>

<EditForm Model="user" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="FullName">Full Name</label>
        <InputText id="FullName" class="form-control" @bind-Value="user.FullName" />
    </div>

    <div class="form-group">
        <label for="PhoneNumber">Phone Number</label>
        <InputText id="PhoneNumber" class="form-control" @bind-Value="user.PhoneNumber" />
    </div>

    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" class="form-control" @bind-Value="user.Email" />
    </div>

    <div class="form-group">
        <label for="Gender">Gender</label>
        <InputText id="Gender" class="form-control" @bind-Value="user.Gender" />
    </div>

    <div class="form-group">
        <label for="Status">Status</label>
        <InputText id="Status" class="form-control" @bind-Value="user.Status" />
    </div>

    <div class="form-group">
        <label for="RoleID">Role ID</label>
        <InputText id="RoleID" class="form-control" @bind-Value="user.RoleID" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>
 *@