@page "/UpdateSeatType/{seatTypeId:guid}"

@using NeonCinema_Application.DataTransferObject.SeatTypes
@using NeonCinema_Client.Data.IServices.SeatType
@using NeonCinema_Client.Pages.Admin
@inject ISeatTypeService SV
@inject NavigationManager NavigationManager
@layout LayoutAdmin

<h3 class="text-center mb-4">Update SeatType</h3>

@if (seatType == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="seatType" OnValidSubmit="HandleValidSubmit" class="form-container">
        <div class="mb-3">
            <label class="form-label">Seat Type Name:</label>
            <InputText @bind-Value="seatType.SeatTypeName" class="form-control" />
        </div>
        <div class="mb-3">
            <label class="form-label">Price:</label>
            <InputNumber @bind-Value="seatType.Price" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="NavigateBack">Cancel</button>
    </EditForm>
}

@code {
    

    [Parameter] public Guid seatTypeId { get; set; }
    private SeatTypeDTO seatType = new SeatTypeDTO();
    protected override async Task OnInitializedAsync()
    {
        seatType = await SV.GetByIdSeatType(seatTypeId);
    }

    private async Task HandleValidSubmit()
    {
        var update = new UpdateSeatTypeDTO
            {
                ID = seatType.ID,
                Price = seatType.Price,
                SeatTypeName = seatType.SeatTypeName
            };
        await SV.UpdateSeatTYpe(seatType.ID, update);
        
        NavigationManager.NavigateTo("/listSeatType");
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/listSeatType");
    }
}
